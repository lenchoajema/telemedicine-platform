name: Telemedicine Platform CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: "npm"

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            **/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Lint Backend
        run: |
          cd backend
          npm install --package-lock-only
          git diff --exit-code package-lock.json || (echo "package-lock.json is out of sync with package.json" && exit 1)
          npm ci
          npm run lint

      - name: Lint Frontend
        run: |
          cd frontend
          npm install --package-lock-only
          git diff --exit-code package-lock.json || (echo "package-lock.json is out of sync with package.json" && exit 1)
          npm ci
          npm run lint

  test:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and test with Docker Compose
        run: |
          docker compose -f docker-compose.test.yml up --build --exit-code-from backend-test

      - name: Upload Backend Test Coverage
        uses: actions/upload-artifact@v4
        with:
          name: backend-coverage
          path: backend/coverage/

      - name: Upload Frontend Test Coverage
        uses: actions/upload-artifact@v4
        with:
          name: frontend-coverage
          path: frontend/coverage/

  build:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker images
        run: |
          docker compose build
