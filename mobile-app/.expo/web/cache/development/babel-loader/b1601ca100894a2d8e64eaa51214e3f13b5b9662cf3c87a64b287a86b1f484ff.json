{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nimport { EventTarget, defineEventAttribute } from 'event-target-shim';\nimport NativeModules from \"react-native-web/dist/exports/NativeModules\";\nimport _getDisplayMedia from \"./getDisplayMedia\";\nimport _getUserMedia from \"./getUserMedia\";\nvar WebRTCModule = NativeModules.WebRTCModule;\nvar MediaDevices = function (_EventTarget) {\n  function MediaDevices() {\n    _classCallCheck(this, MediaDevices);\n    return _callSuper(this, MediaDevices, arguments);\n  }\n  _inherits(MediaDevices, _EventTarget);\n  return _createClass(MediaDevices, [{\n    key: \"enumerateDevices\",\n    value: function enumerateDevices() {\n      return new Promise(function (resolve) {\n        return WebRTCModule.enumerateDevices(resolve);\n      });\n    }\n  }, {\n    key: \"getDisplayMedia\",\n    value: function getDisplayMedia() {\n      return _getDisplayMedia();\n    }\n  }, {\n    key: \"getUserMedia\",\n    value: function getUserMedia(constraints) {\n      return _getUserMedia(constraints);\n    }\n  }]);\n}(EventTarget);\nvar proto = MediaDevices.prototype;\ndefineEventAttribute(proto, 'devicechange');\nexport default new MediaDevices();","map":{"version":3,"names":["EventTarget","defineEventAttribute","NativeModules","getDisplayMedia","getUserMedia","WebRTCModule","MediaDevices","_EventTarget","_classCallCheck","_callSuper","arguments","_inherits","_createClass","key","value","enumerateDevices","Promise","resolve","constraints","proto","prototype"],"sources":["/workspaces/telemedicine-platform/mobile-app/node_modules/react-native-webrtc/src/MediaDevices.ts"],"sourcesContent":["import { EventTarget, Event, defineEventAttribute } from 'event-target-shim';\nimport { NativeModules } from 'react-native';\n\nimport getDisplayMedia from './getDisplayMedia';\nimport getUserMedia from './getUserMedia';\n\nconst { WebRTCModule } = NativeModules;\n\ntype MediaDevicesEventMap = {\n    devicechange: Event<'devicechange'>\n}\n\nclass MediaDevices extends EventTarget<MediaDevicesEventMap> {\n    /**\n     * W3C \"Media Capture and Streams\" compatible {@code enumerateDevices}\n     * implementation.\n     */\n    enumerateDevices() {\n        return new Promise(resolve => WebRTCModule.enumerateDevices(resolve));\n    }\n\n    /**\n     * W3C \"Screen Capture\" compatible {@code getDisplayMedia} implementation.\n     * See: https://w3c.github.io/mediacapture-screen-share/\n     *\n     * @returns {Promise}\n     */\n    getDisplayMedia() {\n        return getDisplayMedia();\n    }\n\n    /**\n     * W3C \"Media Capture and Streams\" compatible {@code getUserMedia}\n     * implementation.\n     * See: https://www.w3.org/TR/mediacapture-streams/#dom-mediadevices-enumeratedevices\n     *\n     * @param {*} constraints\n     * @returns {Promise}\n     */\n    getUserMedia(constraints) {\n        return getUserMedia(constraints);\n    }\n}\n\n/**\n * Define the `onxxx` event handlers.\n */\nconst proto = MediaDevices.prototype;\n\ndefineEventAttribute(proto, 'devicechange');\n\n\nexport default new MediaDevices();\n"],"mappings":";;;;;;;AAAA,SAASA,WAAW,EAASC,oBAAoB,QAAQ,mBAAmB;AAAA,OAAAC,aAAA;AAG5E,OAAOC,gBAAe;AACtB,OAAOC,aAAY;AAEnB,IAAQC,YAAA,GAAiBH,aAAa,CAA9BG,YAAA;AAA8B,IAMhCC,YAAY,aAAAC,YAAA;EAAA,SAAAD,aAAA;IAAAE,eAAA,OAAAF,YAAA;IAAA,OAAAG,UAAA,OAAAH,YAAA,EAAAI,SAAA;EAAA;EAAAC,SAAA,CAAAL,YAAA,EAAAC,YAAA;EAAA,OAAAK,YAAA,CAAAN,YAAA;IAAAO,GAAA;IAAAC,KAAA,EAKd,SAAAC,gBAAgBA,CAAA,EAAG;MACf,OAAO,IAAIC,OAAO,CAAC,UAAAC,OAAO;QAAA,OAAIZ,YAAY,CAACU,gBAAgB,CAACE,OAAO,CAAC;MAAA,EAAC;IACzE;EAAA;IAAAJ,GAAA;IAAAC,KAAA,EAQA,SAAAX,eAAeA,CAAA,EAAG;MACd,OAAOA,gBAAe,CAAC,CAAC;IAC5B;EAAA;IAAAU,GAAA;IAAAC,KAAA,EAUA,SAAAV,YAAYA,CAACc,WAAW,EAAE;MACtB,OAAOd,aAAY,CAACc,WAAW,CAAC;IACpC;EAAA;AAAA,EA7BuBlB,WAAW;AAmCtC,IAAMmB,KAAK,GAAGb,YAAY,CAACc,SAAS;AAEpCnB,oBAAoB,CAACkB,KAAK,EAAE,cAAc,CAAC;AAG3C,eAAe,IAAIb,YAAY,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}