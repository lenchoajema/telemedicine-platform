{"ast":null,"code":"import Platform from \"react-native-web/dist/exports/Platform\";\nexport const createWebSafeStyle = style => {\n  if (Platform.OS !== 'web') return style;\n  const webSafeStyle = Object.assign({}, style);\n  if (webSafeStyle.shadowColor || webSafeStyle.shadowOffset || webSafeStyle.shadowOpacity || webSafeStyle.shadowRadius) {\n    const shadowColor = webSafeStyle.shadowColor || '#000';\n    const shadowOffsetWidth = webSafeStyle.shadowOffset?.width || 0;\n    const shadowOffsetHeight = webSafeStyle.shadowOffset?.height || 2;\n    const shadowOpacity = webSafeStyle.shadowOpacity || 0.25;\n    const shadowRadius = webSafeStyle.shadowRadius || 4;\n    webSafeStyle.boxShadow = `${shadowOffsetWidth}px ${shadowOffsetHeight}px ${shadowRadius}px rgba(0,0,0,${shadowOpacity})`;\n    delete webSafeStyle.shadowColor;\n    delete webSafeStyle.shadowOffset;\n    delete webSafeStyle.shadowOpacity;\n    delete webSafeStyle.shadowRadius;\n  }\n  if (webSafeStyle.elevation && Platform.OS === 'web') {\n    const elevation = webSafeStyle.elevation;\n    webSafeStyle.boxShadow = `0 ${elevation}px ${elevation * 2}px rgba(0,0,0,0.15)`;\n    delete webSafeStyle.elevation;\n  }\n  return webSafeStyle;\n};\nexport const getAnimationConfig = (useNativeDriver = true) => {\n  return Platform.OS === 'web' ? {\n    useNativeDriver: false\n  } : {\n    useNativeDriver\n  };\n};\nexport const getPointerEvents = pointerEvents => {\n  if (Platform.OS === 'web') {\n    return {\n      style: {\n        pointerEvents\n      }\n    };\n  }\n  return {\n    pointerEvents\n  };\n};\nexport const suppressWebSocketErrors = () => {\n  if (Platform.OS === 'web' && typeof window !== 'undefined') {\n    const originalConsoleError = console.error;\n    console.error = (...args) => {\n      const message = args.join(' ');\n      if (message.includes('WebSocket connection') || message.includes('_expo/ws') || message.includes('WebSocketClient.js') || message.includes('Connection failed')) {\n        return;\n      }\n      originalConsoleError.apply(console, args);\n    };\n    const originalConsoleWarn = console.warn;\n    console.warn = (...args) => {\n      const message = args.join(' ');\n      if (message.includes('WebSocket') || message.includes('_expo/ws')) {\n        return;\n      }\n      originalConsoleWarn.apply(console, args);\n    };\n  }\n};","map":{"version":3,"names":["createWebSafeStyle","style","Platform","OS","webSafeStyle","Object","assign","shadowColor","shadowOffset","shadowOpacity","shadowRadius","shadowOffsetWidth","width","shadowOffsetHeight","height","boxShadow","elevation","getAnimationConfig","useNativeDriver","getPointerEvents","pointerEvents","suppressWebSocketErrors","window","originalConsoleError","console","error","args","message","join","includes","apply","originalConsoleWarn","warn"],"sources":["/workspaces/telemedicine-platform/mobile-app/src/utils/webCompatibility.ts"],"sourcesContent":["// Web compatibility fixes for React Native\nimport { Platform } from 'react-native';\n\n// Fix for shadow props deprecation warnings\nexport const createWebSafeStyle = (style) => {\n  if (Platform.OS !== 'web') return style;\n  \n  const webSafeStyle = { ...style };\n  \n  // Replace deprecated shadow props with boxShadow\n  if (webSafeStyle.shadowColor || webSafeStyle.shadowOffset || webSafeStyle.shadowOpacity || webSafeStyle.shadowRadius) {\n    const shadowColor = webSafeStyle.shadowColor || '#000';\n    const shadowOffsetWidth = webSafeStyle.shadowOffset?.width || 0;\n    const shadowOffsetHeight = webSafeStyle.shadowOffset?.height || 2;\n    const shadowOpacity = webSafeStyle.shadowOpacity || 0.25;\n    const shadowRadius = webSafeStyle.shadowRadius || 4;\n    \n    webSafeStyle.boxShadow = `${shadowOffsetWidth}px ${shadowOffsetHeight}px ${shadowRadius}px rgba(0,0,0,${shadowOpacity})`;\n    \n    // Remove deprecated shadow props\n    delete webSafeStyle.shadowColor;\n    delete webSafeStyle.shadowOffset;\n    delete webSafeStyle.shadowOpacity;\n    delete webSafeStyle.shadowRadius;\n  }\n  \n  // Fix elevation for web\n  if (webSafeStyle.elevation && Platform.OS === 'web') {\n    const elevation = webSafeStyle.elevation;\n    webSafeStyle.boxShadow = `0 ${elevation}px ${elevation * 2}px rgba(0,0,0,0.15)`;\n    delete webSafeStyle.elevation;\n  }\n  \n  return webSafeStyle;\n};\n\n// Fix for useNativeDriver warnings\nexport const getAnimationConfig = (useNativeDriver = true) => {\n  return Platform.OS === 'web' ? { useNativeDriver: false } : { useNativeDriver };\n};\n\n// Fix for pointerEvents\nexport const getPointerEvents = (pointerEvents) => {\n  if (Platform.OS === 'web') {\n    return { style: { pointerEvents } };\n  }\n  return { pointerEvents };\n};\n\n// Fix for WebSocket connection issues in development\nexport const suppressWebSocketErrors = () => {\n  if (Platform.OS === 'web' && typeof window !== 'undefined') {\n    // Override console.error to filter out WebSocket connection errors\n    const originalConsoleError = console.error;\n    console.error = (...args) => {\n      const message = args.join(' ');\n      \n      // Suppress known WebSocket errors in development\n      if (\n        message.includes('WebSocket connection') ||\n        message.includes('_expo/ws') ||\n        message.includes('WebSocketClient.js') ||\n        message.includes('Connection failed')\n      ) {\n        return; // Suppress these specific errors\n      }\n      \n      // Allow other errors to be displayed\n      originalConsoleError.apply(console, args);\n    };\n    \n    // Also suppress WebSocket warnings\n    const originalConsoleWarn = console.warn;\n    console.warn = (...args) => {\n      const message = args.join(' ');\n      \n      if (message.includes('WebSocket') || message.includes('_expo/ws')) {\n        return; // Suppress WebSocket warnings\n      }\n      \n      originalConsoleWarn.apply(console, args);\n    };\n  }\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}