{"ast":null,"code":"import _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nfunction _superPropGet(t, o, e, r) { var p = _get(_getPrototypeOf(1 & r ? t.prototype : t), o, e); return 2 & r && \"function\" == typeof p ? function (t) { return p.apply(e, t); } : p; }\nimport RTCRtpEncodingParameters from \"./RTCRtpEncodingParameters\";\nimport RTCRtpParameters from \"./RTCRtpParameters\";\nvar DegradationPreference = function () {\n  function DegradationPreference() {\n    _classCallCheck(this, DegradationPreference);\n  }\n  return _createClass(DegradationPreference, null, [{\n    key: \"fromNative\",\n    value: function fromNative(nativeFormat) {\n      var stringFormat = nativeFormat.toLowerCase().replace('_', '-');\n      return stringFormat;\n    }\n  }, {\n    key: \"toNative\",\n    value: function toNative(format) {\n      return format.toUpperCase().replace('-', '_');\n    }\n  }]);\n}();\nvar RTCRtpSendParameters = function (_RTCRtpParameters) {\n  function RTCRtpSendParameters(init) {\n    var _this;\n    _classCallCheck(this, RTCRtpSendParameters);\n    _this = _callSuper(this, RTCRtpSendParameters, [init]);\n    _this.transactionId = init.transactionId;\n    _this.encodings = [];\n    _this.degradationPreference = init.degradationPreference ? DegradationPreference.fromNative(init.degradationPreference) : null;\n    for (var enc of init.encodings) {\n      _this.encodings.push(new RTCRtpEncodingParameters(enc));\n    }\n    return _this;\n  }\n  _inherits(RTCRtpSendParameters, _RTCRtpParameters);\n  return _createClass(RTCRtpSendParameters, [{\n    key: \"toJSON\",\n    value: function toJSON() {\n      var obj = _superPropGet(RTCRtpSendParameters, \"toJSON\", this, 3)([]);\n      obj['transactionId'] = this.transactionId;\n      obj['encodings'] = this.encodings.map(function (e) {\n        return e.toJSON();\n      });\n      if (this.degradationPreference !== null) {\n        obj['degradationPreference'] = DegradationPreference.toNative(this.degradationPreference);\n      }\n      return obj;\n    }\n  }]);\n}(RTCRtpParameters);\nexport { RTCRtpSendParameters as default };","map":{"version":3,"names":["RTCRtpEncodingParameters","RTCRtpParameters","DegradationPreference","_classCallCheck","_createClass","key","value","fromNative","nativeFormat","stringFormat","toLowerCase","replace","toNative","format","toUpperCase","RTCRtpSendParameters","_RTCRtpParameters","init","_this","_callSuper","transactionId","encodings","degradationPreference","enc","push","_inherits","toJSON","obj","_superPropGet","map","e","default"],"sources":["/workspaces/telemedicine-platform/mobile-app/node_modules/react-native-webrtc/src/RTCRtpSendParameters.ts"],"sourcesContent":["import RTCRtpEncodingParameters, { RTCRtpEncodingParametersInit } from './RTCRtpEncodingParameters';\nimport RTCRtpParameters, { RTCRtpParametersInit } from './RTCRtpParameters';\n\ntype DegradationPreferenceType = 'maintain-framerate'\n    | 'maintain-resolution'\n    | 'balanced'\n    | 'disabled'\n\n\n/**\n * Class to convert degradation preference format. Native has a format such as\n * MAINTAIN_FRAMERATE whereas the web APIs expect maintain-framerate\n */\nclass DegradationPreference {\n    static fromNative(nativeFormat: string): DegradationPreferenceType {\n        const stringFormat = nativeFormat.toLowerCase().replace('_', '-');\n\n        return stringFormat as DegradationPreferenceType;\n    }\n\n    static toNative(format: DegradationPreferenceType): string {\n        return format.toUpperCase().replace('-', '_');\n    }\n}\n\nexport interface RTCRtpSendParametersInit extends RTCRtpParametersInit {\n    transactionId: string;\n    encodings: RTCRtpEncodingParametersInit[];\n    degradationPreference?: string;\n}\n\nexport default class RTCRtpSendParameters extends RTCRtpParameters {\n    readonly transactionId: string;\n    readonly encodings: RTCRtpEncodingParameters[];\n    degradationPreference: DegradationPreferenceType | null;\n\n    constructor(init: RTCRtpSendParametersInit) {\n        super(init);\n\n        this.transactionId = init.transactionId;\n        this.encodings = [];\n        this.degradationPreference = init.degradationPreference ?\n            DegradationPreference.fromNative(init.degradationPreference) : null;\n\n        for (const enc of init.encodings) {\n            this.encodings.push(new RTCRtpEncodingParameters(enc));\n        }\n    }\n\n    toJSON(): RTCRtpSendParametersInit {\n        const obj = super.toJSON();\n\n        obj['transactionId'] = this.transactionId;\n\n        obj['encodings'] = this.encodings.map(e => e.toJSON());\n\n        if (this.degradationPreference !== null) {\n            obj['degradationPreference'] = DegradationPreference.toNative(this.degradationPreference);\n        }\n\n        return obj as RTCRtpSendParametersInit;\n    }\n}\n"],"mappings":";;;;;;;;;AAAA,OAAOA,wBAAwB;AAC/B,OAAOC,gBAAgB;AAAoD,IAYrEC,qBAAqB;EAAA,SAAAA,sBAAA;IAAAC,eAAA,OAAAD,qBAAA;EAAA;EAAA,OAAAE,YAAA,CAAAF,qBAAA;IAAAG,GAAA;IAAAC,KAAA,EACvB,SAAOC,UAAUA,CAACC,YAAoB,EAA6B;MAC/D,IAAMC,YAAY,GAAGD,YAAY,CAACE,WAAW,CAAC,CAAC,CAACC,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC;MAEjE,OAAOF,YAAY;IACvB;EAAA;IAAAJ,GAAA;IAAAC,KAAA,EAEA,SAAOM,QAAQA,CAACC,MAAiC,EAAU;MACvD,OAAOA,MAAM,CAACC,WAAW,CAAC,CAAC,CAACH,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC;IACjD;EAAA;AAAA;AAAA,IASiBI,oBAAoB,aAAAC,iBAAA;EAKrC,SAAAD,qBAAYE,IAA8B,EAAE;IAAA,IAAAC,KAAA;IAAAf,eAAA,OAAAY,oBAAA;IACxCG,KAAA,GAAAC,UAAA,OAAAJ,oBAAA,GAAME,IAAI;IAEVC,KAAA,CAAKE,aAAa,GAAGH,IAAI,CAACG,aAAa;IACvCF,KAAA,CAAKG,SAAS,GAAG,EAAE;IACnBH,KAAA,CAAKI,qBAAqB,GAAGL,IAAI,CAACK,qBAAqB,GACnDpB,qBAAqB,CAACK,UAAU,CAACU,IAAI,CAACK,qBAAqB,CAAC,GAAG,IAAI;IAEvE,KAAK,IAAMC,GAAG,IAAIN,IAAI,CAACI,SAAS,EAAE;MAC9BH,KAAA,CAAKG,SAAS,CAACG,IAAI,CAAC,IAAIxB,wBAAwB,CAACuB,GAAG,CAAC,CAAC;IAC1D;IAAA,OAAAL,KAAA;EACJ;EAAAO,SAAA,CAAAV,oBAAA,EAAAC,iBAAA;EAAA,OAAAZ,YAAA,CAAAW,oBAAA;IAAAV,GAAA;IAAAC,KAAA,EAEA,SAAAoB,MAAMA,CAAA,EAA6B;MAC/B,IAAMC,GAAG,GAAAC,aAAA,CAAAb,oBAAA,wBAAiB;MAE1BY,GAAG,CAAC,eAAe,CAAC,GAAG,IAAI,CAACP,aAAa;MAEzCO,GAAG,CAAC,WAAW,CAAC,GAAG,IAAI,CAACN,SAAS,CAACQ,GAAG,CAAC,UAAAC,CAAC;QAAA,OAAIA,CAAC,CAACJ,MAAM,CAAC,CAAC;MAAA,EAAC;MAEtD,IAAI,IAAI,CAACJ,qBAAqB,KAAK,IAAI,EAAE;QACrCK,GAAG,CAAC,uBAAuB,CAAC,GAAGzB,qBAAqB,CAACU,QAAQ,CAAC,IAAI,CAACU,qBAAqB,CAAC;MAC7F;MAEA,OAAOK,GAAG;IACd;EAAA;AAAA,EA9B8C1B,gBAAgB;AAAA,SAA7Cc,oBAAoB,IAAAgB,OAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}