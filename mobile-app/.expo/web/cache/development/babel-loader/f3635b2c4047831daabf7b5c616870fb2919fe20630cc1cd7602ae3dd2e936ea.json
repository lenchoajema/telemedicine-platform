{"ast":null,"code":"import React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { Ionicons } from '@expo/vector-icons';\nimport { useAuth } from \"../context/AuthContext\";\nimport LoginScreen from \"../screens/Auth/LoginScreen\";\nimport RegisterScreen from \"../screens/Auth/RegisterScreen\";\nimport HomeScreen from \"../screens/Home/HomeScreen\";\nimport AppointmentsScreen from \"../screens/Appointments/AppointmentsScreen\";\nimport VideoCallScreen from \"../screens/VideoCall/VideoCallScreenWeb\";\nimport ProfileScreen from \"../screens/Profile/ProfileScreen\";\nimport DoctorsScreen from \"../screens/Doctors/DoctorsScreen\";\nimport MedicalRecordsScreen from \"../screens/MedicalRecords/MedicalRecordsScreen\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Tab = createBottomTabNavigator();\nvar Stack = createStackNavigator();\nvar AuthStack = function AuthStack() {\n  return _jsxs(Stack.Navigator, {\n    screenOptions: {\n      headerShown: false\n    },\n    children: [_jsx(Stack.Screen, {\n      name: \"Login\",\n      component: LoginScreen\n    }), _jsx(Stack.Screen, {\n      name: \"Register\",\n      component: RegisterScreen\n    })]\n  });\n};\nvar PatientTabs = function PatientTabs() {\n  return _jsxs(Tab.Navigator, {\n    screenOptions: function screenOptions(_ref) {\n      var route = _ref.route;\n      return {\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var focused = _ref2.focused,\n            color = _ref2.color,\n            size = _ref2.size;\n          var iconName;\n          switch (route.name) {\n            case 'Home':\n              iconName = focused ? 'home' : 'home-outline';\n              break;\n            case 'Doctors':\n              iconName = focused ? 'medical' : 'medical-outline';\n              break;\n            case 'Appointments':\n              iconName = focused ? 'calendar' : 'calendar-outline';\n              break;\n            case 'Records':\n              iconName = focused ? 'document-text' : 'document-text-outline';\n              break;\n            case 'Profile':\n              iconName = focused ? 'person' : 'person-outline';\n              break;\n            default:\n              iconName = 'home-outline';\n          }\n          return _jsx(Ionicons, {\n            name: iconName,\n            size: size,\n            color: color\n          });\n        },\n        tabBarActiveTintColor: '#2a70e0',\n        tabBarInactiveTintColor: 'gray',\n        headerStyle: {\n          backgroundColor: '#2a70e0'\n        },\n        headerTintColor: '#fff',\n        headerTitleStyle: {\n          fontWeight: 'bold'\n        }\n      };\n    },\n    children: [_jsx(Tab.Screen, {\n      name: \"Home\",\n      component: HomeScreen,\n      options: {\n        title: 'Dashboard'\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"Doctors\",\n      component: DoctorsScreen,\n      options: {\n        title: 'Find Doctors'\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"Appointments\",\n      component: AppointmentsScreen,\n      options: {\n        title: 'My Appointments'\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"Records\",\n      component: MedicalRecordsScreen,\n      options: {\n        title: 'Medical Records'\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"Profile\",\n      component: ProfileScreen,\n      options: {\n        title: 'Profile'\n      }\n    })]\n  });\n};\nvar DoctorTabs = function DoctorTabs() {\n  return _jsxs(Tab.Navigator, {\n    screenOptions: function screenOptions(_ref3) {\n      var route = _ref3.route;\n      return {\n        tabBarIcon: function tabBarIcon(_ref4) {\n          var focused = _ref4.focused,\n            color = _ref4.color,\n            size = _ref4.size;\n          var iconName;\n          switch (route.name) {\n            case 'Dashboard':\n              iconName = focused ? 'home' : 'home-outline';\n              break;\n            case 'Patients':\n              iconName = focused ? 'people' : 'people-outline';\n              break;\n            case 'Schedule':\n              iconName = focused ? 'calendar' : 'calendar-outline';\n              break;\n            case 'Analytics':\n              iconName = focused ? 'analytics' : 'analytics-outline';\n              break;\n            case 'Profile':\n              iconName = focused ? 'person' : 'person-outline';\n              break;\n            default:\n              iconName = 'home-outline';\n          }\n          return _jsx(Ionicons, {\n            name: iconName,\n            size: size,\n            color: color\n          });\n        },\n        tabBarActiveTintColor: '#2a70e0',\n        tabBarInactiveTintColor: 'gray',\n        headerStyle: {\n          backgroundColor: '#2a70e0'\n        },\n        headerTintColor: '#fff',\n        headerTitleStyle: {\n          fontWeight: 'bold'\n        }\n      };\n    },\n    children: [_jsx(Tab.Screen, {\n      name: \"Dashboard\",\n      component: HomeScreen\n    }), _jsx(Tab.Screen, {\n      name: \"Patients\",\n      component: AppointmentsScreen\n    }), _jsx(Tab.Screen, {\n      name: \"Schedule\",\n      component: AppointmentsScreen\n    }), _jsx(Tab.Screen, {\n      name: \"Analytics\",\n      component: HomeScreen\n    }), _jsx(Tab.Screen, {\n      name: \"Profile\",\n      component: ProfileScreen\n    })]\n  });\n};\nvar AppStack = function AppStack() {\n  var _useAuth = useAuth(),\n    user = _useAuth.user;\n  return _jsxs(Stack.Navigator, {\n    children: [_jsx(Stack.Screen, {\n      name: \"MainTabs\",\n      component: (user == null ? void 0 : user.role) === 'doctor' ? DoctorTabs : PatientTabs,\n      options: {\n        headerShown: false\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"VideoCall\",\n      component: VideoCallScreen,\n      options: {\n        title: 'Video Consultation',\n        headerStyle: {\n          backgroundColor: '#2a70e0'\n        },\n        headerTintColor: '#fff',\n        gestureEnabled: false\n      }\n    })]\n  });\n};\nexport var AppNavigator = function AppNavigator() {\n  var _useAuth2 = useAuth(),\n    isAuthenticated = _useAuth2.isAuthenticated,\n    isLoading = _useAuth2.isLoading;\n  if (isLoading) {\n    return null;\n  }\n  return _jsx(NavigationContainer, {\n    children: isAuthenticated ? _jsx(AppStack, {}) : _jsx(AuthStack, {})\n  });\n};","map":{"version":3,"names":["React","NavigationContainer","createBottomTabNavigator","createStackNavigator","Ionicons","useAuth","LoginScreen","RegisterScreen","HomeScreen","AppointmentsScreen","VideoCallScreen","ProfileScreen","DoctorsScreen","MedicalRecordsScreen","jsx","_jsx","jsxs","_jsxs","Tab","Stack","AuthStack","Navigator","screenOptions","headerShown","children","Screen","name","component","PatientTabs","_ref","route","tabBarIcon","_ref2","focused","color","size","iconName","tabBarActiveTintColor","tabBarInactiveTintColor","headerStyle","backgroundColor","headerTintColor","headerTitleStyle","fontWeight","options","title","DoctorTabs","_ref3","_ref4","AppStack","_useAuth","user","role","gestureEnabled","AppNavigator","_useAuth2","isAuthenticated","isLoading"],"sources":["/workspaces/telemedicine-platform/mobile-app/src/navigation/AppNavigator.tsx"],"sourcesContent":["import React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { Ionicons } from '@expo/vector-icons';\nimport { useAuth } from '../context/AuthContext';\n\n// Import screens\nimport LoginScreen from '../screens/Auth/LoginScreen';\nimport RegisterScreen from '../screens/Auth/RegisterScreen';\nimport HomeScreen from '../screens/Home/HomeScreen';\nimport AppointmentsScreen from '../screens/Appointments/AppointmentsScreen';\nimport VideoCallScreen from '../screens/VideoCall/VideoCallScreenWeb';\nimport ProfileScreen from '../screens/Profile/ProfileScreen';\nimport DoctorsScreen from '../screens/Doctors/DoctorsScreen';\nimport MedicalRecordsScreen from '../screens/MedicalRecords/MedicalRecordsScreen';\n\nconst Tab = createBottomTabNavigator();\nconst Stack = createStackNavigator();\n\n// Auth Stack\nconst AuthStack = () => (\n  <Stack.Navigator screenOptions={{ headerShown: false }}>\n    <Stack.Screen name=\"Login\" component={LoginScreen} />\n    <Stack.Screen name=\"Register\" component={RegisterScreen} />\n  </Stack.Navigator>\n);\n\n// Patient Tab Navigator\nconst PatientTabs = () => (\n  <Tab.Navigator\n    screenOptions={({ route }) => ({\n      tabBarIcon: ({ focused, color, size }) => {\n        let iconName: any;\n        \n        switch (route.name) {\n          case 'Home':\n            iconName = focused ? 'home' : 'home-outline';\n            break;\n          case 'Doctors':\n            iconName = focused ? 'medical' : 'medical-outline';\n            break;\n          case 'Appointments':\n            iconName = focused ? 'calendar' : 'calendar-outline';\n            break;\n          case 'Records':\n            iconName = focused ? 'document-text' : 'document-text-outline';\n            break;\n          case 'Profile':\n            iconName = focused ? 'person' : 'person-outline';\n            break;\n          default:\n            iconName = 'home-outline';\n        }\n\n        return <Ionicons name={iconName} size={size} color={color} />;\n      },\n      tabBarActiveTintColor: '#2a70e0',\n      tabBarInactiveTintColor: 'gray',\n      headerStyle: {\n        backgroundColor: '#2a70e0',\n      },\n      headerTintColor: '#fff',\n      headerTitleStyle: {\n        fontWeight: 'bold',\n      },\n    })}\n  >\n    <Tab.Screen \n      name=\"Home\" \n      component={HomeScreen}\n      options={{ title: 'Dashboard' }}\n    />\n    <Tab.Screen \n      name=\"Doctors\" \n      component={DoctorsScreen}\n      options={{ title: 'Find Doctors' }}\n    />\n    <Tab.Screen \n      name=\"Appointments\" \n      component={AppointmentsScreen}\n      options={{ title: 'My Appointments' }}\n    />\n    <Tab.Screen \n      name=\"Records\" \n      component={MedicalRecordsScreen}\n      options={{ title: 'Medical Records' }}\n    />\n    <Tab.Screen \n      name=\"Profile\" \n      component={ProfileScreen}\n      options={{ title: 'Profile' }}\n    />\n  </Tab.Navigator>\n);\n\n// Doctor Tab Navigator\nconst DoctorTabs = () => (\n  <Tab.Navigator\n    screenOptions={({ route }) => ({\n      tabBarIcon: ({ focused, color, size }) => {\n        let iconName: any;\n        \n        switch (route.name) {\n          case 'Dashboard':\n            iconName = focused ? 'home' : 'home-outline';\n            break;\n          case 'Patients':\n            iconName = focused ? 'people' : 'people-outline';\n            break;\n          case 'Schedule':\n            iconName = focused ? 'calendar' : 'calendar-outline';\n            break;\n          case 'Analytics':\n            iconName = focused ? 'analytics' : 'analytics-outline';\n            break;\n          case 'Profile':\n            iconName = focused ? 'person' : 'person-outline';\n            break;\n          default:\n            iconName = 'home-outline';\n        }\n\n        return <Ionicons name={iconName} size={size} color={color} />;\n      },\n      tabBarActiveTintColor: '#2a70e0',\n      tabBarInactiveTintColor: 'gray',\n      headerStyle: {\n        backgroundColor: '#2a70e0',\n      },\n      headerTintColor: '#fff',\n      headerTitleStyle: {\n        fontWeight: 'bold',\n      },\n    })}\n  >\n    <Tab.Screen name=\"Dashboard\" component={HomeScreen} />\n    <Tab.Screen name=\"Patients\" component={AppointmentsScreen} />\n    <Tab.Screen name=\"Schedule\" component={AppointmentsScreen} />\n    <Tab.Screen name=\"Analytics\" component={HomeScreen} />\n    <Tab.Screen name=\"Profile\" component={ProfileScreen} />\n  </Tab.Navigator>\n);\n\n// Main App Stack\nconst AppStack = () => {\n  const { user } = useAuth();\n  \n  return (\n    <Stack.Navigator>\n      <Stack.Screen \n        name=\"MainTabs\" \n        component={user?.role === 'doctor' ? DoctorTabs : PatientTabs}\n        options={{ headerShown: false }}\n      />\n      <Stack.Screen \n        name=\"VideoCall\" \n        component={VideoCallScreen}\n        options={{ \n          title: 'Video Consultation',\n          headerStyle: { backgroundColor: '#2a70e0' },\n          headerTintColor: '#fff',\n          gestureEnabled: false,\n        }}\n      />\n    </Stack.Navigator>\n  );\n};\n\n// Main App Navigator\nexport const AppNavigator = () => {\n  const { isAuthenticated, isLoading } = useAuth();\n\n  if (isLoading) {\n    return null; // Or loading screen\n  }\n\n  return (\n    <NavigationContainer>\n      {isAuthenticated ? <AppStack /> : <AuthStack />}\n    </NavigationContainer>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}