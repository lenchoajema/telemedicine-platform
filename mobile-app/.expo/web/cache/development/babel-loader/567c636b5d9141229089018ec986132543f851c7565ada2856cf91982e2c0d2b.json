{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { Card, Title, Paragraph, Button, Chip, FAB, SegmentedButtons, ActivityIndicator, Surface, IconButton } from 'react-native-paper';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport { useAuth } from \"../../context/AuthContext\";\nimport { ApiClient } from \"../../services/ApiClient\";\nimport { theme, spacing } from \"../../utils/theme\";\nimport { format } from 'date-fns';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar MedicalRecordsScreen = function MedicalRecordsScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useAuth = useAuth(),\n    user = _useAuth.user;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    medicalRecords = _useState2[0],\n    setMedicalRecords = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    filteredRecords = _useState4[0],\n    setFilteredRecords = _useState4[1];\n  var _useState5 = useState(true),\n    _useState6 = _slicedToArray(_useState5, 2),\n    isLoading = _useState6[0],\n    setIsLoading = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    refreshing = _useState8[0],\n    setRefreshing = _useState8[1];\n  var _useState9 = useState('all'),\n    _useState0 = _slicedToArray(_useState9, 2),\n    filter = _useState0[0],\n    setFilter = _useState0[1];\n  var fetchMedicalRecords = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        var response = yield ApiClient.get('/api/medical-records');\n        setMedicalRecords(response.data);\n        filterRecords(response.data, filter);\n      } catch (error) {\n        console.error('Error fetching medical records:', error);\n        Alert.alert('Error', 'Failed to load medical records');\n      } finally {\n        setIsLoading(false);\n        setRefreshing(false);\n      }\n    });\n    return function fetchMedicalRecords() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var filterRecords = function filterRecords(records, currentFilter) {\n    var filtered = records;\n    if (currentFilter !== 'all') {\n      filtered = records.filter(function (record) {\n        return record.type === currentFilter;\n      });\n    }\n    filtered.sort(function (a, b) {\n      return new Date(b.date).getTime() - new Date(a.date).getTime();\n    });\n    setFilteredRecords(filtered);\n  };\n  useEffect(function () {\n    fetchMedicalRecords();\n  }, []);\n  useEffect(function () {\n    filterRecords(medicalRecords, filter);\n  }, [filter, medicalRecords]);\n  var onRefresh = function onRefresh() {\n    setRefreshing(true);\n    fetchMedicalRecords();\n  };\n  var handleFilterChange = function handleFilterChange(value) {\n    setFilter(value);\n  };\n  var getRecordTypeColor = function getRecordTypeColor(type) {\n    switch (type) {\n      case 'consultation':\n        return theme.colors.primary;\n      case 'prescription':\n        return '#4CAF50';\n      case 'lab-result':\n        return '#FF9800';\n      case 'vaccination':\n        return '#9C27B0';\n      case 'allergy':\n        return '#f44336';\n      case 'diagnosis':\n        return '#2196F3';\n      default:\n        return theme.colors.onSurfaceVariant;\n    }\n  };\n  var getRecordTypeIcon = function getRecordTypeIcon(type) {\n    switch (type) {\n      case 'consultation':\n        return 'doctor';\n      case 'prescription':\n        return 'pill';\n      case 'lab-result':\n        return 'test-tube';\n      case 'vaccination':\n        return 'needle';\n      case 'allergy':\n        return 'alert';\n      case 'diagnosis':\n        return 'medical-bag';\n      default:\n        return 'file-document';\n    }\n  };\n  var getRecordTypeLabel = function getRecordTypeLabel(type) {\n    switch (type) {\n      case 'consultation':\n        return 'Consultation';\n      case 'prescription':\n        return 'Prescription';\n      case 'lab-result':\n        return 'Lab Result';\n      case 'vaccination':\n        return 'Vaccination';\n      case 'allergy':\n        return 'Allergy';\n      case 'diagnosis':\n        return 'Diagnosis';\n      default:\n        return type;\n    }\n  };\n  var handleRecordPress = function handleRecordPress(record) {\n    navigation.navigate('MedicalRecordDetail', {\n      record: record\n    });\n  };\n  var downloadAttachment = function () {\n    var _ref3 = _asyncToGenerator(function* (attachment) {\n      try {\n        Alert.alert('Download', `Downloading ${attachment.name}...`);\n      } catch (error) {\n        Alert.alert('Error', 'Failed to download attachment');\n      }\n    });\n    return function downloadAttachment(_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var renderMedicalRecord = function renderMedicalRecord(record) {\n    return _jsx(Card, {\n      style: styles.recordCard,\n      children: _jsxs(Card.Content, {\n        children: [_jsxs(View, {\n          style: styles.recordHeader,\n          children: [_jsxs(View, {\n            style: styles.recordInfo,\n            children: [_jsxs(View, {\n              style: styles.recordTitleRow,\n              children: [_jsx(Chip, {\n                icon: getRecordTypeIcon(record.type),\n                style: [styles.typeChip, {\n                  backgroundColor: getRecordTypeColor(record.type)\n                }],\n                textStyle: styles.typeChipText,\n                children: getRecordTypeLabel(record.type)\n              }), _jsx(Paragraph, {\n                style: styles.recordDate,\n                children: format(new Date(record.date), 'MMM dd, yyyy')\n              })]\n            }), _jsx(Title, {\n              style: styles.recordTitle,\n              children: record.title\n            }), _jsx(Paragraph, {\n              style: styles.recordDescription,\n              numberOfLines: 2,\n              children: record.description\n            })]\n          }), _jsx(IconButton, {\n            icon: \"chevron-right\",\n            onPress: function onPress() {\n              return handleRecordPress(record);\n            }\n          })]\n        }), record.doctor && _jsxs(View, {\n          style: styles.doctorInfo,\n          children: [_jsxs(Paragraph, {\n            style: styles.doctorName,\n            children: [\"Dr. \", record.doctor.firstName, \" \", record.doctor.lastName]\n          }), _jsx(Paragraph, {\n            style: styles.doctorSpecialization,\n            children: record.doctor.specialization\n          })]\n        }), record.medications && record.medications.length > 0 && _jsxs(View, {\n          style: styles.medicationsContainer,\n          children: [_jsx(Title, {\n            style: styles.sectionTitle,\n            children: \"Medications\"\n          }), record.medications.slice(0, 2).map(function (med, index) {\n            return _jsxs(View, {\n              style: styles.medicationItem,\n              children: [_jsx(Paragraph, {\n                style: styles.medicationName,\n                children: med.name\n              }), _jsxs(Paragraph, {\n                style: styles.medicationDetails,\n                children: [med.dosage, \" - \", med.frequency]\n              })]\n            }, index);\n          }), record.medications.length > 2 && _jsxs(Paragraph, {\n            style: styles.moreText,\n            children: [\"+\", record.medications.length - 2, \" more medications\"]\n          })]\n        }), record.labResults && record.labResults.length > 0 && _jsxs(View, {\n          style: styles.labResultsContainer,\n          children: [_jsx(Title, {\n            style: styles.sectionTitle,\n            children: \"Lab Results\"\n          }), record.labResults.slice(0, 2).map(function (result, index) {\n            return _jsxs(View, {\n              style: styles.labResultItem,\n              children: [_jsxs(View, {\n                style: styles.labResultHeader,\n                children: [_jsx(Paragraph, {\n                  style: styles.labTestName,\n                  children: result.testName\n                }), _jsx(Chip, {\n                  style: [styles.statusChip, {\n                    backgroundColor: result.status === 'normal' ? '#4CAF50' : '#f44336'\n                  }],\n                  textStyle: styles.statusChipText,\n                  children: result.status\n                })]\n              }), _jsxs(Paragraph, {\n                style: styles.labResultValue,\n                children: [result.value, \" \", result.unit]\n              })]\n            }, index);\n          })]\n        }), record.vitals && _jsxs(View, {\n          style: styles.vitalsContainer,\n          children: [_jsx(Title, {\n            style: styles.sectionTitle,\n            children: \"Vitals\"\n          }), _jsxs(View, {\n            style: styles.vitalsGrid,\n            children: [record.vitals.bloodPressure && _jsxs(View, {\n              style: styles.vitalItem,\n              children: [_jsx(Paragraph, {\n                style: styles.vitalLabel,\n                children: \"BP\"\n              }), _jsx(Paragraph, {\n                style: styles.vitalValue,\n                children: record.vitals.bloodPressure\n              })]\n            }), record.vitals.heartRate && _jsxs(View, {\n              style: styles.vitalItem,\n              children: [_jsx(Paragraph, {\n                style: styles.vitalLabel,\n                children: \"HR\"\n              }), _jsx(Paragraph, {\n                style: styles.vitalValue,\n                children: record.vitals.heartRate\n              })]\n            }), record.vitals.temperature && _jsxs(View, {\n              style: styles.vitalItem,\n              children: [_jsx(Paragraph, {\n                style: styles.vitalLabel,\n                children: \"Temp\"\n              }), _jsx(Paragraph, {\n                style: styles.vitalValue,\n                children: record.vitals.temperature\n              })]\n            })]\n          })]\n        }), record.attachments && record.attachments.length > 0 && _jsxs(View, {\n          style: styles.attachmentsContainer,\n          children: [_jsx(Title, {\n            style: styles.sectionTitle,\n            children: \"Attachments\"\n          }), record.attachments.map(function (attachment, index) {\n            return _jsx(Button, {\n              mode: \"outlined\",\n              onPress: function onPress() {\n                return downloadAttachment(attachment);\n              },\n              style: styles.attachmentButton,\n              icon: \"download\",\n              children: attachment.name\n            }, index);\n          })]\n        })]\n      })\n    }, record.id);\n  };\n  if (isLoading) {\n    return _jsxs(SafeAreaView, {\n      style: styles.loadingContainer,\n      children: [_jsx(ActivityIndicator, {\n        size: \"large\",\n        color: theme.colors.primary\n      }), _jsx(Title, {\n        style: styles.loadingText,\n        children: \"Loading medical records...\"\n      })]\n    });\n  }\n  return _jsxs(SafeAreaView, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: styles.header,\n      children: [_jsx(Title, {\n        style: styles.title,\n        children: \"Medical Records\"\n      }), _jsx(SegmentedButtons, {\n        value: filter,\n        onValueChange: handleFilterChange,\n        buttons: [{\n          value: 'all',\n          label: 'All'\n        }, {\n          value: 'consultation',\n          label: 'Visits'\n        }, {\n          value: 'prescription',\n          label: 'Rx'\n        }, {\n          value: 'lab-result',\n          label: 'Labs'\n        }],\n        style: styles.filterButtons\n      })]\n    }), _jsx(ScrollView, {\n      contentContainerStyle: styles.scrollContainer,\n      refreshControl: _jsx(RefreshControl, {\n        refreshing: refreshing,\n        onRefresh: onRefresh\n      }),\n      children: filteredRecords.length === 0 ? _jsxs(View, {\n        style: styles.emptyState,\n        children: [_jsx(Surface, {\n          style: styles.emptyIcon,\n          children: _jsx(IconButton, {\n            icon: \"file-document\",\n            size: 60\n          })\n        }), _jsx(Title, {\n          style: styles.emptyTitle,\n          children: \"No records found\"\n        }), _jsx(Paragraph, {\n          style: styles.emptyMessage,\n          children: filter === 'all' ? 'You have no medical records yet.' : `You have no ${getRecordTypeLabel(filter).toLowerCase()} records.`\n        })]\n      }) : filteredRecords.map(renderMedicalRecord)\n    }), _jsx(FAB, {\n      icon: \"plus\",\n      style: styles.fab,\n      onPress: function onPress() {\n        return navigation.navigate('AddMedicalRecord');\n      }\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: theme.colors.background\n  },\n  loadingContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: theme.colors.background\n  },\n  loadingText: {\n    marginTop: spacing.medium\n  },\n  header: {\n    padding: spacing.medium,\n    backgroundColor: theme.colors.surface,\n    elevation: 2\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: spacing.medium\n  },\n  filterButtons: {\n    marginBottom: spacing.small\n  },\n  scrollContainer: {\n    padding: spacing.medium\n  },\n  recordCard: {\n    marginBottom: spacing.medium,\n    elevation: 2,\n    borderRadius: 12\n  },\n  recordHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'flex-start',\n    marginBottom: spacing.medium\n  },\n  recordInfo: {\n    flex: 1\n  },\n  recordTitleRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: spacing.small\n  },\n  typeChip: {\n    alignSelf: 'flex-start'\n  },\n  typeChipText: {\n    color: '#fff',\n    fontSize: 12\n  },\n  recordDate: {\n    fontSize: 12,\n    color: theme.colors.onSurfaceVariant\n  },\n  recordTitle: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    marginBottom: spacing.small\n  },\n  recordDescription: {\n    fontSize: 14,\n    color: theme.colors.onSurfaceVariant\n  },\n  doctorInfo: {\n    marginBottom: spacing.medium,\n    padding: spacing.small,\n    backgroundColor: theme.colors.surfaceVariant,\n    borderRadius: 8\n  },\n  doctorName: {\n    fontSize: 14,\n    fontWeight: '500'\n  },\n  doctorSpecialization: {\n    fontSize: 12,\n    color: theme.colors.onSurfaceVariant\n  },\n  medicationsContainer: {\n    marginBottom: spacing.medium\n  },\n  sectionTitle: {\n    fontSize: 14,\n    fontWeight: 'bold',\n    marginBottom: spacing.small\n  },\n  medicationItem: {\n    marginBottom: spacing.small\n  },\n  medicationName: {\n    fontSize: 14,\n    fontWeight: '500'\n  },\n  medicationDetails: {\n    fontSize: 12,\n    color: theme.colors.onSurfaceVariant\n  },\n  moreText: {\n    fontSize: 12,\n    color: theme.colors.primary,\n    fontStyle: 'italic'\n  },\n  labResultsContainer: {\n    marginBottom: spacing.medium\n  },\n  labResultItem: {\n    marginBottom: spacing.small\n  },\n  labResultHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center'\n  },\n  labTestName: {\n    fontSize: 14,\n    fontWeight: '500'\n  },\n  statusChip: {\n    height: 24,\n    alignSelf: 'flex-start'\n  },\n  statusChipText: {\n    color: '#fff',\n    fontSize: 10\n  },\n  labResultValue: {\n    fontSize: 14,\n    color: theme.colors.onSurfaceVariant\n  },\n  vitalsContainer: {\n    marginBottom: spacing.medium\n  },\n  vitalsGrid: {\n    flexDirection: 'row',\n    flexWrap: 'wrap'\n  },\n  vitalItem: {\n    marginRight: spacing.large,\n    marginBottom: spacing.small\n  },\n  vitalLabel: {\n    fontSize: 12,\n    color: theme.colors.onSurfaceVariant\n  },\n  vitalValue: {\n    fontSize: 14,\n    fontWeight: '500'\n  },\n  attachmentsContainer: {\n    marginBottom: spacing.medium\n  },\n  attachmentButton: {\n    marginBottom: spacing.small\n  },\n  emptyState: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: spacing.xlarge,\n    minHeight: 400\n  },\n  emptyIcon: {\n    width: 120,\n    height: 120,\n    borderRadius: 60,\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginBottom: spacing.medium\n  },\n  emptyTitle: {\n    marginBottom: spacing.small\n  },\n  emptyMessage: {\n    textAlign: 'center',\n    color: theme.colors.onSurfaceVariant\n  },\n  fab: {\n    position: 'absolute',\n    right: 16,\n    bottom: 16,\n    backgroundColor: theme.colors.primary\n  }\n});\nexport default MedicalRecordsScreen;","map":{"version":3,"names":["React","useState","useEffect","View","StyleSheet","ScrollView","RefreshControl","Alert","Card","Title","Paragraph","Button","Chip","FAB","SegmentedButtons","ActivityIndicator","Surface","IconButton","SafeAreaView","useAuth","ApiClient","theme","spacing","format","jsx","_jsx","jsxs","_jsxs","MedicalRecordsScreen","_ref","navigation","_useAuth","user","_useState","_useState2","_slicedToArray","medicalRecords","setMedicalRecords","_useState3","_useState4","filteredRecords","setFilteredRecords","_useState5","_useState6","isLoading","setIsLoading","_useState7","_useState8","refreshing","setRefreshing","_useState9","_useState0","filter","setFilter","fetchMedicalRecords","_ref2","_asyncToGenerator","response","get","data","filterRecords","error","console","alert","apply","arguments","records","currentFilter","filtered","record","type","sort","a","b","Date","date","getTime","onRefresh","handleFilterChange","value","getRecordTypeColor","colors","primary","onSurfaceVariant","getRecordTypeIcon","getRecordTypeLabel","handleRecordPress","navigate","downloadAttachment","_ref3","attachment","name","_x","renderMedicalRecord","style","styles","recordCard","children","Content","recordHeader","recordInfo","recordTitleRow","icon","typeChip","backgroundColor","textStyle","typeChipText","recordDate","recordTitle","title","recordDescription","numberOfLines","description","onPress","doctor","doctorInfo","doctorName","firstName","lastName","doctorSpecialization","specialization","medications","length","medicationsContainer","sectionTitle","slice","map","med","index","medicationItem","medicationName","medicationDetails","dosage","frequency","moreText","labResults","labResultsContainer","result","labResultItem","labResultHeader","labTestName","testName","statusChip","status","statusChipText","labResultValue","unit","vitals","vitalsContainer","vitalsGrid","bloodPressure","vitalItem","vitalLabel","vitalValue","heartRate","temperature","attachments","attachmentsContainer","mode","attachmentButton","id","loadingContainer","size","color","loadingText","container","header","onValueChange","buttons","label","filterButtons","contentContainerStyle","scrollContainer","refreshControl","emptyState","emptyIcon","emptyTitle","emptyMessage","toLowerCase","fab","create","flex","background","justifyContent","alignItems","marginTop","medium","padding","surface","elevation","fontSize","fontWeight","marginBottom","small","borderRadius","flexDirection","alignSelf","surfaceVariant","fontStyle","height","flexWrap","marginRight","large","xlarge","minHeight","width","textAlign","position","right","bottom"],"sources":["/workspaces/telemedicine-platform/mobile-app/src/screens/MedicalRecords/MedicalRecordsScreen.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  View,\n  StyleSheet,\n  ScrollView,\n  RefreshControl,\n  Alert,\n} from 'react-native';\nimport {\n  Card,\n  Title,\n  Paragraph,\n  Button,\n  List,\n  Divider,\n  Chip,\n  FAB,\n  SegmentedButtons,\n  ActivityIndicator,\n  Surface,\n  IconButton,\n} from 'react-native-paper';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport { useAuth } from '../../context/AuthContext';\nimport { ApiClient } from '../../services/ApiClient';\nimport { theme, spacing } from '../../utils/theme';\nimport { format } from 'date-fns';\n\ninterface MedicalRecordsScreenProps {\n  navigation: any;\n}\n\ninterface MedicalRecord {\n  id: string;\n  date: string;\n  type: 'consultation' | 'prescription' | 'lab-result' | 'vaccination' | 'allergy' | 'diagnosis';\n  title: string;\n  description: string;\n  doctor?: {\n    firstName: string;\n    lastName: string;\n    specialization: string;\n  };\n  attachments?: {\n    id: string;\n    name: string;\n    type: string;\n    url: string;\n  }[];\n  medications?: {\n    name: string;\n    dosage: string;\n    frequency: string;\n    duration: string;\n  }[];\n  labResults?: {\n    testName: string;\n    value: string;\n    unit: string;\n    normalRange: string;\n    status: 'normal' | 'abnormal' | 'critical';\n  }[];\n  vitals?: {\n    bloodPressure?: string;\n    heartRate?: string;\n    temperature?: string;\n    weight?: string;\n    height?: string;\n  };\n}\n\nconst MedicalRecordsScreen: React.FC<MedicalRecordsScreenProps> = ({ navigation }) => {\n  const { user } = useAuth();\n  const [medicalRecords, setMedicalRecords] = useState<MedicalRecord[]>([]);\n  const [filteredRecords, setFilteredRecords] = useState<MedicalRecord[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [refreshing, setRefreshing] = useState(false);\n  const [filter, setFilter] = useState('all');\n\n  const fetchMedicalRecords = async () => {\n    try {\n      const response = await ApiClient.get('/api/medical-records');\n      setMedicalRecords(response.data);\n      filterRecords(response.data, filter);\n    } catch (error) {\n      console.error('Error fetching medical records:', error);\n      Alert.alert('Error', 'Failed to load medical records');\n    } finally {\n      setIsLoading(false);\n      setRefreshing(false);\n    }\n  };\n\n  const filterRecords = (records: MedicalRecord[], currentFilter: string) => {\n    let filtered = records;\n    \n    if (currentFilter !== 'all') {\n      filtered = records.filter(record => record.type === currentFilter);\n    }\n    \n    // Sort by date (newest first)\n    filtered.sort((a, b) => new Date(b.date).getTime() - new Date(a.date).getTime());\n    \n    setFilteredRecords(filtered);\n  };\n\n  useEffect(() => {\n    fetchMedicalRecords();\n  }, []);\n\n  useEffect(() => {\n    filterRecords(medicalRecords, filter);\n  }, [filter, medicalRecords]);\n\n  const onRefresh = () => {\n    setRefreshing(true);\n    fetchMedicalRecords();\n  };\n\n  const handleFilterChange = (value: string) => {\n    setFilter(value);\n  };\n\n  const getRecordTypeColor = (type: string) => {\n    switch (type) {\n      case 'consultation':\n        return theme.colors.primary;\n      case 'prescription':\n        return '#4CAF50';\n      case 'lab-result':\n        return '#FF9800';\n      case 'vaccination':\n        return '#9C27B0';\n      case 'allergy':\n        return '#f44336';\n      case 'diagnosis':\n        return '#2196F3';\n      default:\n        return theme.colors.onSurfaceVariant;\n    }\n  };\n\n  const getRecordTypeIcon = (type: string) => {\n    switch (type) {\n      case 'consultation':\n        return 'doctor';\n      case 'prescription':\n        return 'pill';\n      case 'lab-result':\n        return 'test-tube';\n      case 'vaccination':\n        return 'needle';\n      case 'allergy':\n        return 'alert';\n      case 'diagnosis':\n        return 'medical-bag';\n      default:\n        return 'file-document';\n    }\n  };\n\n  const getRecordTypeLabel = (type: string) => {\n    switch (type) {\n      case 'consultation':\n        return 'Consultation';\n      case 'prescription':\n        return 'Prescription';\n      case 'lab-result':\n        return 'Lab Result';\n      case 'vaccination':\n        return 'Vaccination';\n      case 'allergy':\n        return 'Allergy';\n      case 'diagnosis':\n        return 'Diagnosis';\n      default:\n        return type;\n    }\n  };\n\n  const handleRecordPress = (record: MedicalRecord) => {\n    navigation.navigate('MedicalRecordDetail', { record });\n  };\n\n  const downloadAttachment = async (attachment: any) => {\n    try {\n      Alert.alert('Download', `Downloading ${attachment.name}...`);\n      // Implementation for downloading attachment\n    } catch (error) {\n      Alert.alert('Error', 'Failed to download attachment');\n    }\n  };\n\n  const renderMedicalRecord = (record: MedicalRecord) => {\n    return (\n      <Card key={record.id} style={styles.recordCard}>\n        <Card.Content>\n          <View style={styles.recordHeader}>\n            <View style={styles.recordInfo}>\n              <View style={styles.recordTitleRow}>\n                <Chip\n                  icon={getRecordTypeIcon(record.type)}\n                  style={[\n                    styles.typeChip,\n                    { backgroundColor: getRecordTypeColor(record.type) }\n                  ]}\n                  textStyle={styles.typeChipText}\n                >\n                  {getRecordTypeLabel(record.type)}\n                </Chip>\n                <Paragraph style={styles.recordDate}>\n                  {format(new Date(record.date), 'MMM dd, yyyy')}\n                </Paragraph>\n              </View>\n              <Title style={styles.recordTitle}>{record.title}</Title>\n              <Paragraph style={styles.recordDescription} numberOfLines={2}>\n                {record.description}\n              </Paragraph>\n            </View>\n            <IconButton\n              icon=\"chevron-right\"\n              onPress={() => handleRecordPress(record)}\n            />\n          </View>\n\n          {record.doctor && (\n            <View style={styles.doctorInfo}>\n              <Paragraph style={styles.doctorName}>\n                Dr. {record.doctor.firstName} {record.doctor.lastName}\n              </Paragraph>\n              <Paragraph style={styles.doctorSpecialization}>\n                {record.doctor.specialization}\n              </Paragraph>\n            </View>\n          )}\n\n          {record.medications && record.medications.length > 0 && (\n            <View style={styles.medicationsContainer}>\n              <Title style={styles.sectionTitle}>Medications</Title>\n              {record.medications.slice(0, 2).map((med, index) => (\n                <View key={index} style={styles.medicationItem}>\n                  <Paragraph style={styles.medicationName}>{med.name}</Paragraph>\n                  <Paragraph style={styles.medicationDetails}>\n                    {med.dosage} - {med.frequency}\n                  </Paragraph>\n                </View>\n              ))}\n              {record.medications.length > 2 && (\n                <Paragraph style={styles.moreText}>\n                  +{record.medications.length - 2} more medications\n                </Paragraph>\n              )}\n            </View>\n          )}\n\n          {record.labResults && record.labResults.length > 0 && (\n            <View style={styles.labResultsContainer}>\n              <Title style={styles.sectionTitle}>Lab Results</Title>\n              {record.labResults.slice(0, 2).map((result, index) => (\n                <View key={index} style={styles.labResultItem}>\n                  <View style={styles.labResultHeader}>\n                    <Paragraph style={styles.labTestName}>{result.testName}</Paragraph>\n                    <Chip\n                      style={[\n                        styles.statusChip,\n                        { backgroundColor: result.status === 'normal' ? '#4CAF50' : '#f44336' }\n                      ]}\n                      textStyle={styles.statusChipText}\n                    >\n                      {result.status}\n                    </Chip>\n                  </View>\n                  <Paragraph style={styles.labResultValue}>\n                    {result.value} {result.unit}\n                  </Paragraph>\n                </View>\n              ))}\n            </View>\n          )}\n\n          {record.vitals && (\n            <View style={styles.vitalsContainer}>\n              <Title style={styles.sectionTitle}>Vitals</Title>\n              <View style={styles.vitalsGrid}>\n                {record.vitals.bloodPressure && (\n                  <View style={styles.vitalItem}>\n                    <Paragraph style={styles.vitalLabel}>BP</Paragraph>\n                    <Paragraph style={styles.vitalValue}>{record.vitals.bloodPressure}</Paragraph>\n                  </View>\n                )}\n                {record.vitals.heartRate && (\n                  <View style={styles.vitalItem}>\n                    <Paragraph style={styles.vitalLabel}>HR</Paragraph>\n                    <Paragraph style={styles.vitalValue}>{record.vitals.heartRate}</Paragraph>\n                  </View>\n                )}\n                {record.vitals.temperature && (\n                  <View style={styles.vitalItem}>\n                    <Paragraph style={styles.vitalLabel}>Temp</Paragraph>\n                    <Paragraph style={styles.vitalValue}>{record.vitals.temperature}</Paragraph>\n                  </View>\n                )}\n              </View>\n            </View>\n          )}\n\n          {record.attachments && record.attachments.length > 0 && (\n            <View style={styles.attachmentsContainer}>\n              <Title style={styles.sectionTitle}>Attachments</Title>\n              {record.attachments.map((attachment, index) => (\n                <Button\n                  key={index}\n                  mode=\"outlined\"\n                  onPress={() => downloadAttachment(attachment)}\n                  style={styles.attachmentButton}\n                  icon=\"download\"\n                >\n                  {attachment.name}\n                </Button>\n              ))}\n            </View>\n          )}\n        </Card.Content>\n      </Card>\n    );\n  };\n\n  if (isLoading) {\n    return (\n      <SafeAreaView style={styles.loadingContainer}>\n        <ActivityIndicator size=\"large\" color={theme.colors.primary} />\n        <Title style={styles.loadingText}>Loading medical records...</Title>\n      </SafeAreaView>\n    );\n  }\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <View style={styles.header}>\n        <Title style={styles.title}>Medical Records</Title>\n        <SegmentedButtons\n          value={filter}\n          onValueChange={handleFilterChange}\n          buttons={[\n            { value: 'all', label: 'All' },\n            { value: 'consultation', label: 'Visits' },\n            { value: 'prescription', label: 'Rx' },\n            { value: 'lab-result', label: 'Labs' },\n          ]}\n          style={styles.filterButtons}\n        />\n      </View>\n\n      <ScrollView\n        contentContainerStyle={styles.scrollContainer}\n        refreshControl={\n          <RefreshControl refreshing={refreshing} onRefresh={onRefresh} />\n        }\n      >\n        {filteredRecords.length === 0 ? (\n          <View style={styles.emptyState}>\n            <Surface style={styles.emptyIcon}>\n              <IconButton icon=\"file-document\" size={60} />\n            </Surface>\n            <Title style={styles.emptyTitle}>No records found</Title>\n            <Paragraph style={styles.emptyMessage}>\n              {filter === 'all' \n                ? 'You have no medical records yet.'\n                : `You have no ${getRecordTypeLabel(filter).toLowerCase()} records.`}\n            </Paragraph>\n          </View>\n        ) : (\n          filteredRecords.map(renderMedicalRecord)\n        )}\n      </ScrollView>\n\n      <FAB\n        icon=\"plus\"\n        style={styles.fab}\n        onPress={() => navigation.navigate('AddMedicalRecord')}\n      />\n    </SafeAreaView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: theme.colors.background,\n  },\n  loadingContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: theme.colors.background,\n  },\n  loadingText: {\n    marginTop: spacing.medium,\n  },\n  header: {\n    padding: spacing.medium,\n    backgroundColor: theme.colors.surface,\n    elevation: 2,\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: spacing.medium,\n  },\n  filterButtons: {\n    marginBottom: spacing.small,\n  },\n  scrollContainer: {\n    padding: spacing.medium,\n  },\n  recordCard: {\n    marginBottom: spacing.medium,\n    elevation: 2,\n    borderRadius: 12,\n  },\n  recordHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'flex-start',\n    marginBottom: spacing.medium,\n  },\n  recordInfo: {\n    flex: 1,\n  },\n  recordTitleRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: spacing.small,\n  },\n  typeChip: {\n    alignSelf: 'flex-start',\n  },\n  typeChipText: {\n    color: '#fff',\n    fontSize: 12,\n  },\n  recordDate: {\n    fontSize: 12,\n    color: theme.colors.onSurfaceVariant,\n  },\n  recordTitle: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    marginBottom: spacing.small,\n  },\n  recordDescription: {\n    fontSize: 14,\n    color: theme.colors.onSurfaceVariant,\n  },\n  doctorInfo: {\n    marginBottom: spacing.medium,\n    padding: spacing.small,\n    backgroundColor: theme.colors.surfaceVariant,\n    borderRadius: 8,\n  },\n  doctorName: {\n    fontSize: 14,\n    fontWeight: '500',\n  },\n  doctorSpecialization: {\n    fontSize: 12,\n    color: theme.colors.onSurfaceVariant,\n  },\n  medicationsContainer: {\n    marginBottom: spacing.medium,\n  },\n  sectionTitle: {\n    fontSize: 14,\n    fontWeight: 'bold',\n    marginBottom: spacing.small,\n  },\n  medicationItem: {\n    marginBottom: spacing.small,\n  },\n  medicationName: {\n    fontSize: 14,\n    fontWeight: '500',\n  },\n  medicationDetails: {\n    fontSize: 12,\n    color: theme.colors.onSurfaceVariant,\n  },\n  moreText: {\n    fontSize: 12,\n    color: theme.colors.primary,\n    fontStyle: 'italic',\n  },\n  labResultsContainer: {\n    marginBottom: spacing.medium,\n  },\n  labResultItem: {\n    marginBottom: spacing.small,\n  },\n  labResultHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n  labTestName: {\n    fontSize: 14,\n    fontWeight: '500',\n  },\n  statusChip: {\n    height: 24,\n    alignSelf: 'flex-start',\n  },\n  statusChipText: {\n    color: '#fff',\n    fontSize: 10,\n  },\n  labResultValue: {\n    fontSize: 14,\n    color: theme.colors.onSurfaceVariant,\n  },\n  vitalsContainer: {\n    marginBottom: spacing.medium,\n  },\n  vitalsGrid: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n  },\n  vitalItem: {\n    marginRight: spacing.large,\n    marginBottom: spacing.small,\n  },\n  vitalLabel: {\n    fontSize: 12,\n    color: theme.colors.onSurfaceVariant,\n  },\n  vitalValue: {\n    fontSize: 14,\n    fontWeight: '500',\n  },\n  attachmentsContainer: {\n    marginBottom: spacing.medium,\n  },\n  attachmentButton: {\n    marginBottom: spacing.small,\n  },\n  emptyState: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: spacing.xlarge,\n    minHeight: 400,\n  },\n  emptyIcon: {\n    width: 120,\n    height: 120,\n    borderRadius: 60,\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginBottom: spacing.medium,\n  },\n  emptyTitle: {\n    marginBottom: spacing.small,\n  },\n  emptyMessage: {\n    textAlign: 'center',\n    color: theme.colors.onSurfaceVariant,\n  },\n  fab: {\n    position: 'absolute',\n    right: 16,\n    bottom: 16,\n    backgroundColor: theme.colors.primary,\n  },\n});\n\nexport default MedicalRecordsScreen;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}