{"ast":null,"code":"var _jsxFileName = \"/workspaces/telemedicine-platform/mobile-app/src/screens/Appointments/AppointmentsScreen.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { Card, Title, Paragraph, Button, Avatar, Chip, FAB, SegmentedButtons, ActivityIndicator } from 'react-native-paper';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport { useAuth } from \"../../context/AuthContext\";\nimport { ApiClient } from \"../../services/ApiClient\";\nimport { theme, spacing } from \"../../utils/theme\";\nimport { format } from 'date-fns';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AppointmentsScreen = ({\n  navigation\n}) => {\n  const {\n    user\n  } = useAuth();\n  const [appointments, setAppointments] = useState([]);\n  const [filteredAppointments, setFilteredAppointments] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [refreshing, setRefreshing] = useState(false);\n  const [filter, setFilter] = useState('all');\n  const fetchAppointments = async () => {\n    try {\n      const response = await ApiClient.get('/api/appointments');\n      setAppointments(response.data);\n      filterAppointments(response.data, filter);\n    } catch (error) {\n      console.error('Error fetching appointments:', error);\n      Alert.alert('Error', 'Failed to load appointments');\n    } finally {\n      setIsLoading(false);\n      setRefreshing(false);\n    }\n  };\n  const filterAppointments = (appointmentList, currentFilter) => {\n    let filtered = appointmentList;\n    switch (currentFilter) {\n      case 'upcoming':\n        filtered = appointmentList.filter(apt => apt.status === 'scheduled' && new Date(apt.date) >= new Date());\n        break;\n      case 'completed':\n        filtered = appointmentList.filter(apt => apt.status === 'completed');\n        break;\n      case 'cancelled':\n        filtered = appointmentList.filter(apt => apt.status === 'cancelled');\n        break;\n      default:\n        filtered = appointmentList;\n    }\n    setFilteredAppointments(filtered);\n  };\n  useEffect(() => {\n    fetchAppointments();\n  }, []);\n  useEffect(() => {\n    filterAppointments(appointments, filter);\n  }, [filter, appointments]);\n  const onRefresh = () => {\n    setRefreshing(true);\n    fetchAppointments();\n  };\n  const handleFilterChange = value => {\n    setFilter(value);\n  };\n  const getStatusColor = status => {\n    switch (status) {\n      case 'scheduled':\n        return theme.colors.primary;\n      case 'completed':\n        return '#4CAF50';\n      case 'cancelled':\n        return '#f44336';\n      case 'pending':\n        return '#FF9800';\n      default:\n        return theme.colors.onSurfaceVariant;\n    }\n  };\n  const getStatusText = status => {\n    switch (status) {\n      case 'scheduled':\n        return 'Scheduled';\n      case 'completed':\n        return 'Completed';\n      case 'cancelled':\n        return 'Cancelled';\n      case 'pending':\n        return 'Pending';\n      default:\n        return status;\n    }\n  };\n  const handleAppointmentPress = appointment => {\n    navigation.navigate('AppointmentDetails', {\n      appointment\n    });\n  };\n  const handleVideoCall = appointment => {\n    if (appointment.meetingLink) {\n      navigation.navigate('VideoCall', {\n        meetingLink: appointment.meetingLink,\n        appointmentId: appointment.id\n      });\n    } else {\n      Alert.alert('Error', 'No meeting link available for this appointment');\n    }\n  };\n  const cancelAppointment = async appointmentId => {\n    Alert.alert('Cancel Appointment', 'Are you sure you want to cancel this appointment?', [{\n      text: 'No',\n      style: 'cancel'\n    }, {\n      text: 'Yes',\n      onPress: async () => {\n        try {\n          await ApiClient.put(`/api/appointments/${appointmentId}/cancel`);\n          fetchAppointments();\n          Alert.alert('Success', 'Appointment cancelled successfully');\n        } catch (error) {\n          Alert.alert('Error', 'Failed to cancel appointment');\n        }\n      }\n    }]);\n  };\n  const renderAppointmentCard = appointment => {\n    const isPatient = user?.role === 'patient';\n    const otherPerson = isPatient ? appointment.doctor : appointment.patient;\n    const canStartCall = appointment.status === 'scheduled' && new Date(appointment.date) <= new Date();\n    return _jsxDEV(Card, {\n      style: styles.appointmentCard,\n      children: _jsxDEV(Card.Content, {\n        children: [_jsxDEV(View, {\n          style: styles.appointmentHeader,\n          children: [_jsxDEV(View, {\n            style: styles.personInfo,\n            children: [_jsxDEV(Avatar.Text, {\n              size: 40,\n              label: otherPerson?.firstName?.[0] || 'U',\n              style: styles.avatar\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 15\n            }, this), _jsxDEV(View, {\n              style: styles.personDetails,\n              children: [_jsxDEV(Title, {\n                style: styles.personName,\n                children: [isPatient ? 'Dr. ' : '', otherPerson?.firstName, \" \", otherPerson?.lastName]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 17\n              }, this), isPatient && appointment.doctor?.specialization && _jsxDEV(Paragraph, {\n                style: styles.specialization,\n                children: appointment.doctor.specialization\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 13\n          }, this), _jsxDEV(Chip, {\n            style: [styles.statusChip, {\n              backgroundColor: getStatusColor(appointment.status)\n            }],\n            textStyle: styles.statusText,\n            children: getStatusText(appointment.status)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: styles.appointmentInfo,\n          children: [_jsxDEV(Paragraph, {\n            style: styles.dateTime,\n            children: [format(new Date(appointment.date), 'MMM dd, yyyy'), \" at \", appointment.time]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 13\n          }, this), _jsxDEV(Paragraph, {\n            style: styles.type,\n            children: [\"Type: \", appointment.type]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 13\n          }, this), appointment.notes && _jsxDEV(Paragraph, {\n            style: styles.notes,\n            children: [\"Notes: \", appointment.notes]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: styles.actionButtons,\n          children: [canStartCall && _jsxDEV(Button, {\n            mode: \"contained\",\n            onPress: () => handleVideoCall(appointment),\n            style: styles.actionButton,\n            icon: \"video\",\n            children: \"Start Call\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 15\n          }, this), appointment.status === 'scheduled' && _jsxDEV(Button, {\n            mode: \"outlined\",\n            onPress: () => cancelAppointment(appointment.id),\n            style: styles.actionButton,\n            icon: \"cancel\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 15\n          }, this), _jsxDEV(Button, {\n            mode: \"text\",\n            onPress: () => handleAppointmentPress(appointment),\n            style: styles.actionButton,\n            icon: \"information\",\n            children: \"Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this)\n    }, appointment.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }, this);\n  };\n  if (isLoading) {\n    return _jsxDEV(SafeAreaView, {\n      style: styles.loadingContainer,\n      children: [_jsxDEV(ActivityIndicator, {\n        size: \"large\",\n        color: theme.colors.primary\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 9\n      }, this), _jsxDEV(Title, {\n        style: styles.loadingText,\n        children: \"Loading appointments...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 7\n    }, this);\n  }\n  return _jsxDEV(SafeAreaView, {\n    style: styles.container,\n    children: [_jsxDEV(View, {\n      style: styles.header,\n      children: [_jsxDEV(Title, {\n        style: styles.title,\n        children: \"My Appointments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 9\n      }, this), _jsxDEV(SegmentedButtons, {\n        value: filter,\n        onValueChange: handleFilterChange,\n        buttons: [{\n          value: 'all',\n          label: 'All'\n        }, {\n          value: 'upcoming',\n          label: 'Upcoming'\n        }, {\n          value: 'completed',\n          label: 'Completed'\n        }, {\n          value: 'cancelled',\n          label: 'Cancelled'\n        }],\n        style: styles.filterButtons\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 7\n    }, this), _jsxDEV(ScrollView, {\n      contentContainerStyle: styles.scrollContainer,\n      refreshControl: _jsxDEV(RefreshControl, {\n        refreshing: refreshing,\n        onRefresh: onRefresh\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 11\n      }, this),\n      children: filteredAppointments.length === 0 ? _jsxDEV(View, {\n        style: styles.emptyState,\n        children: [_jsxDEV(Avatar.Icon, {\n          size: 80,\n          icon: \"calendar-blank\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 13\n        }, this), _jsxDEV(Title, {\n          style: styles.emptyTitle,\n          children: \"No appointments found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 13\n        }, this), _jsxDEV(Paragraph, {\n          style: styles.emptyMessage,\n          children: filter === 'all' ? 'You have no appointments scheduled.' : `You have no ${filter} appointments.`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 13\n        }, this), user?.role === 'patient' && _jsxDEV(Button, {\n          mode: \"contained\",\n          onPress: () => navigation.navigate('Doctors'),\n          style: styles.bookButton,\n          icon: \"calendar-plus\",\n          children: \"Book New Appointment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 11\n      }, this) : filteredAppointments.map(renderAppointmentCard)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 7\n    }, this), user?.role === 'patient' && _jsxDEV(FAB, {\n      icon: \"plus\",\n      style: styles.fab,\n      onPress: () => navigation.navigate('Doctors')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 277,\n    columnNumber: 5\n  }, this);\n};\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: theme.colors.background\n  },\n  loadingContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: theme.colors.background\n  },\n  loadingText: {\n    marginTop: spacing.medium\n  },\n  header: {\n    padding: spacing.medium,\n    backgroundColor: theme.colors.surface,\n    elevation: 2\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: spacing.medium\n  },\n  filterButtons: {\n    marginBottom: spacing.small\n  },\n  scrollContainer: {\n    padding: spacing.medium\n  },\n  appointmentCard: {\n    marginBottom: spacing.medium,\n    elevation: 2\n  },\n  appointmentHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: spacing.medium\n  },\n  personInfo: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    flex: 1\n  },\n  avatar: {\n    marginRight: spacing.medium\n  },\n  personDetails: {\n    flex: 1\n  },\n  personName: {\n    fontSize: 16,\n    fontWeight: 'bold'\n  },\n  specialization: {\n    color: theme.colors.onSurfaceVariant,\n    fontSize: 12\n  },\n  statusChip: {\n    alignSelf: 'flex-start'\n  },\n  statusText: {\n    color: '#fff',\n    fontSize: 12\n  },\n  appointmentInfo: {\n    marginBottom: spacing.medium\n  },\n  dateTime: {\n    fontSize: 14,\n    fontWeight: '500',\n    marginBottom: spacing.small\n  },\n  type: {\n    fontSize: 12,\n    color: theme.colors.onSurfaceVariant,\n    marginBottom: spacing.small\n  },\n  notes: {\n    fontSize: 12,\n    color: theme.colors.onSurfaceVariant\n  },\n  actionButtons: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    flexWrap: 'wrap'\n  },\n  actionButton: {\n    marginHorizontal: spacing.small,\n    marginVertical: spacing.small\n  },\n  emptyState: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: spacing.xlarge,\n    minHeight: 400\n  },\n  emptyTitle: {\n    marginTop: spacing.medium,\n    marginBottom: spacing.small\n  },\n  emptyMessage: {\n    textAlign: 'center',\n    color: theme.colors.onSurfaceVariant,\n    marginBottom: spacing.large\n  },\n  bookButton: {\n    marginTop: spacing.medium\n  },\n  fab: {\n    position: 'absolute',\n    right: 16,\n    bottom: 16,\n    backgroundColor: theme.colors.primary\n  }\n});\nexport default AppointmentsScreen;","map":{"version":3,"names":["React","useState","useEffect","View","StyleSheet","ScrollView","RefreshControl","Alert","Card","Title","Paragraph","Button","Avatar","Chip","FAB","SegmentedButtons","ActivityIndicator","SafeAreaView","useAuth","ApiClient","theme","spacing","format","jsxDEV","_jsxDEV","AppointmentsScreen","navigation","user","appointments","setAppointments","filteredAppointments","setFilteredAppointments","isLoading","setIsLoading","refreshing","setRefreshing","filter","setFilter","fetchAppointments","response","get","data","filterAppointments","error","console","alert","appointmentList","currentFilter","filtered","apt","status","Date","date","onRefresh","handleFilterChange","value","getStatusColor","colors","primary","onSurfaceVariant","getStatusText","handleAppointmentPress","appointment","navigate","handleVideoCall","meetingLink","appointmentId","id","cancelAppointment","text","style","onPress","put","renderAppointmentCard","isPatient","role","otherPerson","doctor","patient","canStartCall","styles","appointmentCard","children","Content","appointmentHeader","personInfo","Text","size","label","firstName","avatar","fileName","_jsxFileName","lineNumber","columnNumber","personDetails","personName","lastName","specialization","statusChip","backgroundColor","textStyle","statusText","appointmentInfo","dateTime","time","type","notes","actionButtons","mode","actionButton","icon","loadingContainer","color","loadingText","container","header","title","onValueChange","buttons","filterButtons","contentContainerStyle","scrollContainer","refreshControl","length","emptyState","Icon","emptyTitle","emptyMessage","bookButton","map","fab","create","flex","background","justifyContent","alignItems","marginTop","medium","padding","surface","elevation","fontSize","fontWeight","marginBottom","small","flexDirection","marginRight","alignSelf","flexWrap","marginHorizontal","marginVertical","xlarge","minHeight","textAlign","large","position","right","bottom"],"sources":["/workspaces/telemedicine-platform/mobile-app/src/screens/Appointments/AppointmentsScreen.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  View,\n  StyleSheet,\n  ScrollView,\n  RefreshControl,\n  Alert,\n} from 'react-native';\nimport {\n  Card,\n  Title,\n  Paragraph,\n  Button,\n  Avatar,\n  List,\n  Divider,\n  Chip,\n  FAB,\n  SegmentedButtons,\n  ActivityIndicator,\n} from 'react-native-paper';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport { useAuth } from '../../context/AuthContext';\nimport { ApiClient } from '../../services/ApiClient';\nimport { theme, spacing } from '../../utils/theme';\nimport { format } from 'date-fns';\n\ninterface AppointmentsScreenProps {\n  navigation: any;\n}\n\ninterface Appointment {\n  id: string;\n  date: string;\n  time: string;\n  status: 'scheduled' | 'completed' | 'cancelled' | 'pending';\n  type: 'consultation' | 'follow-up' | 'emergency';\n  patient?: {\n    id: string;\n    firstName: string;\n    lastName: string;\n    email: string;\n  };\n  doctor?: {\n    id: string;\n    firstName: string;\n    lastName: string;\n    specialization: string;\n  };\n  notes?: string;\n  meetingLink?: string;\n}\n\nconst AppointmentsScreen: React.FC<AppointmentsScreenProps> = ({ navigation }) => {\n  const { user } = useAuth();\n  const [appointments, setAppointments] = useState<Appointment[]>([]);\n  const [filteredAppointments, setFilteredAppointments] = useState<Appointment[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [refreshing, setRefreshing] = useState(false);\n  const [filter, setFilter] = useState('all');\n\n  const fetchAppointments = async () => {\n    try {\n      const response = await ApiClient.get('/api/appointments');\n      setAppointments(response.data);\n      filterAppointments(response.data, filter);\n    } catch (error) {\n      console.error('Error fetching appointments:', error);\n      Alert.alert('Error', 'Failed to load appointments');\n    } finally {\n      setIsLoading(false);\n      setRefreshing(false);\n    }\n  };\n\n  const filterAppointments = (appointmentList: Appointment[], currentFilter: string) => {\n    let filtered = appointmentList;\n    \n    switch (currentFilter) {\n      case 'upcoming':\n        filtered = appointmentList.filter(\n          (apt) => apt.status === 'scheduled' && new Date(apt.date) >= new Date()\n        );\n        break;\n      case 'completed':\n        filtered = appointmentList.filter((apt) => apt.status === 'completed');\n        break;\n      case 'cancelled':\n        filtered = appointmentList.filter((apt) => apt.status === 'cancelled');\n        break;\n      default:\n        filtered = appointmentList;\n    }\n    \n    setFilteredAppointments(filtered);\n  };\n\n  useEffect(() => {\n    fetchAppointments();\n  }, []);\n\n  useEffect(() => {\n    filterAppointments(appointments, filter);\n  }, [filter, appointments]);\n\n  const onRefresh = () => {\n    setRefreshing(true);\n    fetchAppointments();\n  };\n\n  const handleFilterChange = (value: string) => {\n    setFilter(value);\n  };\n\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case 'scheduled':\n        return theme.colors.primary;\n      case 'completed':\n        return '#4CAF50';\n      case 'cancelled':\n        return '#f44336';\n      case 'pending':\n        return '#FF9800';\n      default:\n        return theme.colors.onSurfaceVariant;\n    }\n  };\n\n  const getStatusText = (status: string) => {\n    switch (status) {\n      case 'scheduled':\n        return 'Scheduled';\n      case 'completed':\n        return 'Completed';\n      case 'cancelled':\n        return 'Cancelled';\n      case 'pending':\n        return 'Pending';\n      default:\n        return status;\n    }\n  };\n\n  const handleAppointmentPress = (appointment: Appointment) => {\n    navigation.navigate('AppointmentDetails', { appointment });\n  };\n\n  const handleVideoCall = (appointment: Appointment) => {\n    if (appointment.meetingLink) {\n      navigation.navigate('VideoCall', { \n        meetingLink: appointment.meetingLink,\n        appointmentId: appointment.id \n      });\n    } else {\n      Alert.alert('Error', 'No meeting link available for this appointment');\n    }\n  };\n\n  const cancelAppointment = async (appointmentId: string) => {\n    Alert.alert(\n      'Cancel Appointment',\n      'Are you sure you want to cancel this appointment?',\n      [\n        { text: 'No', style: 'cancel' },\n        {\n          text: 'Yes',\n          onPress: async () => {\n            try {\n              await ApiClient.put(`/api/appointments/${appointmentId}/cancel`);\n              fetchAppointments();\n              Alert.alert('Success', 'Appointment cancelled successfully');\n            } catch (error) {\n              Alert.alert('Error', 'Failed to cancel appointment');\n            }\n          },\n        },\n      ]\n    );\n  };\n\n  const renderAppointmentCard = (appointment: Appointment) => {\n    const isPatient = user?.role === 'patient';\n    const otherPerson = isPatient ? appointment.doctor : appointment.patient;\n    const canStartCall = appointment.status === 'scheduled' && \n                         new Date(appointment.date) <= new Date();\n\n    return (\n      <Card key={appointment.id} style={styles.appointmentCard}>\n        <Card.Content>\n          <View style={styles.appointmentHeader}>\n            <View style={styles.personInfo}>\n              <Avatar.Text\n                size={40}\n                label={otherPerson?.firstName?.[0] || 'U'}\n                style={styles.avatar}\n              />\n              <View style={styles.personDetails}>\n                <Title style={styles.personName}>\n                  {isPatient ? 'Dr. ' : ''}\n                  {otherPerson?.firstName} {otherPerson?.lastName}\n                </Title>\n                {isPatient && appointment.doctor?.specialization && (\n                  <Paragraph style={styles.specialization}>\n                    {appointment.doctor.specialization}\n                  </Paragraph>\n                )}\n              </View>\n            </View>\n            <Chip\n              style={[styles.statusChip, { backgroundColor: getStatusColor(appointment.status) }]}\n              textStyle={styles.statusText}\n            >\n              {getStatusText(appointment.status)}\n            </Chip>\n          </View>\n\n          <View style={styles.appointmentInfo}>\n            <Paragraph style={styles.dateTime}>\n              {format(new Date(appointment.date), 'MMM dd, yyyy')} at {appointment.time}\n            </Paragraph>\n            <Paragraph style={styles.type}>\n              Type: {appointment.type}\n            </Paragraph>\n            {appointment.notes && (\n              <Paragraph style={styles.notes}>\n                Notes: {appointment.notes}\n              </Paragraph>\n            )}\n          </View>\n\n          <View style={styles.actionButtons}>\n            {canStartCall && (\n              <Button\n                mode=\"contained\"\n                onPress={() => handleVideoCall(appointment)}\n                style={styles.actionButton}\n                icon=\"video\"\n              >\n                Start Call\n              </Button>\n            )}\n            {appointment.status === 'scheduled' && (\n              <Button\n                mode=\"outlined\"\n                onPress={() => cancelAppointment(appointment.id)}\n                style={styles.actionButton}\n                icon=\"cancel\"\n              >\n                Cancel\n              </Button>\n            )}\n            <Button\n              mode=\"text\"\n              onPress={() => handleAppointmentPress(appointment)}\n              style={styles.actionButton}\n              icon=\"information\"\n            >\n              Details\n            </Button>\n          </View>\n        </Card.Content>\n      </Card>\n    );\n  };\n\n  if (isLoading) {\n    return (\n      <SafeAreaView style={styles.loadingContainer}>\n        <ActivityIndicator size=\"large\" color={theme.colors.primary} />\n        <Title style={styles.loadingText}>Loading appointments...</Title>\n      </SafeAreaView>\n    );\n  }\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <View style={styles.header}>\n        <Title style={styles.title}>My Appointments</Title>\n        <SegmentedButtons\n          value={filter}\n          onValueChange={handleFilterChange}\n          buttons={[\n            { value: 'all', label: 'All' },\n            { value: 'upcoming', label: 'Upcoming' },\n            { value: 'completed', label: 'Completed' },\n            { value: 'cancelled', label: 'Cancelled' },\n          ]}\n          style={styles.filterButtons}\n        />\n      </View>\n\n      <ScrollView\n        contentContainerStyle={styles.scrollContainer}\n        refreshControl={\n          <RefreshControl refreshing={refreshing} onRefresh={onRefresh} />\n        }\n      >\n        {filteredAppointments.length === 0 ? (\n          <View style={styles.emptyState}>\n            <Avatar.Icon size={80} icon=\"calendar-blank\" />\n            <Title style={styles.emptyTitle}>No appointments found</Title>\n            <Paragraph style={styles.emptyMessage}>\n              {filter === 'all' \n                ? 'You have no appointments scheduled.'\n                : `You have no ${filter} appointments.`}\n            </Paragraph>\n            {user?.role === 'patient' && (\n              <Button\n                mode=\"contained\"\n                onPress={() => navigation.navigate('Doctors')}\n                style={styles.bookButton}\n                icon=\"calendar-plus\"\n              >\n                Book New Appointment\n              </Button>\n            )}\n          </View>\n        ) : (\n          filteredAppointments.map(renderAppointmentCard)\n        )}\n      </ScrollView>\n\n      {user?.role === 'patient' && (\n        <FAB\n          icon=\"plus\"\n          style={styles.fab}\n          onPress={() => navigation.navigate('Doctors')}\n        />\n      )}\n    </SafeAreaView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: theme.colors.background,\n  },\n  loadingContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: theme.colors.background,\n  },\n  loadingText: {\n    marginTop: spacing.medium,\n  },\n  header: {\n    padding: spacing.medium,\n    backgroundColor: theme.colors.surface,\n    elevation: 2,\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: spacing.medium,\n  },\n  filterButtons: {\n    marginBottom: spacing.small,\n  },\n  scrollContainer: {\n    padding: spacing.medium,\n  },\n  appointmentCard: {\n    marginBottom: spacing.medium,\n    elevation: 2,\n  },\n  appointmentHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: spacing.medium,\n  },\n  personInfo: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    flex: 1,\n  },\n  avatar: {\n    marginRight: spacing.medium,\n  },\n  personDetails: {\n    flex: 1,\n  },\n  personName: {\n    fontSize: 16,\n    fontWeight: 'bold',\n  },\n  specialization: {\n    color: theme.colors.onSurfaceVariant,\n    fontSize: 12,\n  },\n  statusChip: {\n    alignSelf: 'flex-start',\n  },\n  statusText: {\n    color: '#fff',\n    fontSize: 12,\n  },\n  appointmentInfo: {\n    marginBottom: spacing.medium,\n  },\n  dateTime: {\n    fontSize: 14,\n    fontWeight: '500',\n    marginBottom: spacing.small,\n  },\n  type: {\n    fontSize: 12,\n    color: theme.colors.onSurfaceVariant,\n    marginBottom: spacing.small,\n  },\n  notes: {\n    fontSize: 12,\n    color: theme.colors.onSurfaceVariant,\n  },\n  actionButtons: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    flexWrap: 'wrap',\n  },\n  actionButton: {\n    marginHorizontal: spacing.small,\n    marginVertical: spacing.small,\n  },\n  emptyState: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: spacing.xlarge,\n    minHeight: 400,\n  },\n  emptyTitle: {\n    marginTop: spacing.medium,\n    marginBottom: spacing.small,\n  },\n  emptyMessage: {\n    textAlign: 'center',\n    color: theme.colors.onSurfaceVariant,\n    marginBottom: spacing.large,\n  },\n  bookButton: {\n    marginTop: spacing.medium,\n  },\n  fab: {\n    position: 'absolute',\n    right: 16,\n    bottom: 16,\n    backgroundColor: theme.colors.primary,\n  },\n});\n\nexport default AppointmentsScreen;\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}