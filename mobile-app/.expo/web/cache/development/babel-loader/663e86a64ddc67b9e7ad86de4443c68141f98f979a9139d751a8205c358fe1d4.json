{"ast":null,"code":"import React from 'react';\nimport { useLogger, useGesture } from \"./contexts\";\nimport { useTimeout } from \"./hooks\";\nimport { noop } from \"./utils/func\";\nimport { mergeIfDefined } from \"./utils/obj\";\nexport const DEFAULT_DATA = {\n  text1: undefined,\n  text2: undefined\n};\nexport const DEFAULT_OPTIONS = {\n  type: 'success',\n  text1Style: null,\n  text2Style: null,\n  position: 'top',\n  autoHide: true,\n  swipeable: true,\n  visibilityTime: 4000,\n  topOffset: 40,\n  bottomOffset: 40,\n  keyboardOffset: 10,\n  avoidKeyboard: true,\n  onShow: noop,\n  onHide: noop,\n  onPress: noop,\n  props: {}\n};\nexport function useToast({\n  defaultOptions\n}) {\n  const {\n    log\n  } = useLogger();\n  const {\n    panning\n  } = useGesture();\n  const [isVisible, setIsVisible] = React.useState(false);\n  const [data, setData] = React.useState(DEFAULT_DATA);\n  const initialOptions = mergeIfDefined(DEFAULT_OPTIONS, defaultOptions);\n  const [options, setOptions] = React.useState(initialOptions);\n  const onAutoHide = React.useCallback(() => {\n    if (panning.current) {\n      log('Auto hiding was blocked due to panning');\n    } else {\n      log('Auto hiding');\n      setIsVisible(false);\n      options.onHide();\n    }\n  }, [log, options, panning]);\n  const {\n    startTimer,\n    clearTimer\n  } = useTimeout(onAutoHide, options.visibilityTime);\n  const hide = React.useCallback(() => {\n    log('Hiding');\n    setIsVisible(false);\n    clearTimer();\n    options.onHide();\n  }, [clearTimer, log, options]);\n  const show = React.useCallback(params => {\n    log(`Showing with params: ${JSON.stringify(params)}`);\n    const {\n      text1 = DEFAULT_DATA.text1,\n      text2 = DEFAULT_DATA.text2,\n      type = initialOptions.type,\n      text1Style = initialOptions.text1Style,\n      text2Style = initialOptions.text2Style,\n      position = initialOptions.position,\n      autoHide = initialOptions.autoHide,\n      visibilityTime = initialOptions.visibilityTime,\n      topOffset = initialOptions.topOffset,\n      bottomOffset = initialOptions.bottomOffset,\n      keyboardOffset = initialOptions.keyboardOffset,\n      avoidKeyboard = initialOptions.avoidKeyboard,\n      onShow = initialOptions.onShow,\n      onHide = initialOptions.onHide,\n      onPress = initialOptions.onPress,\n      swipeable = initialOptions.swipeable,\n      props = initialOptions.props\n    } = params;\n    setData({\n      text1,\n      text2\n    });\n    setOptions(mergeIfDefined(initialOptions, {\n      type,\n      text1Style,\n      text2Style,\n      position,\n      autoHide,\n      visibilityTime,\n      topOffset,\n      bottomOffset,\n      keyboardOffset,\n      avoidKeyboard,\n      onShow,\n      onHide,\n      onPress,\n      swipeable,\n      props\n    }));\n    setIsVisible(true);\n    onShow();\n  }, [initialOptions, log]);\n  React.useEffect(() => {\n    const {\n      autoHide\n    } = options;\n    if (isVisible) {\n      if (autoHide) {\n        startTimer();\n      } else {\n        clearTimer();\n      }\n    }\n  }, [isVisible, options, startTimer, clearTimer]);\n  return {\n    isVisible,\n    data,\n    options,\n    show,\n    hide\n  };\n}","map":{"version":3,"names":["React","useLogger","useGesture","useTimeout","noop","mergeIfDefined","DEFAULT_DATA","text1","undefined","text2","DEFAULT_OPTIONS","type","text1Style","text2Style","position","autoHide","swipeable","visibilityTime","topOffset","bottomOffset","keyboardOffset","avoidKeyboard","onShow","onHide","onPress","props","useToast","defaultOptions","log","panning","isVisible","setIsVisible","useState","data","setData","initialOptions","options","setOptions","onAutoHide","useCallback","current","startTimer","clearTimer","hide","show","params","JSON","stringify","useEffect"],"sources":["/workspaces/telemedicine-platform/mobile-app/node_modules/react-native-toast-message/lib/src/useToast.js"],"sourcesContent":["import React from 'react';\nimport { useLogger, useGesture } from './contexts';\nimport { useTimeout } from './hooks';\nimport { noop } from './utils/func';\nimport { mergeIfDefined } from './utils/obj';\nexport const DEFAULT_DATA = {\n    text1: undefined,\n    text2: undefined\n};\nexport const DEFAULT_OPTIONS = {\n    type: 'success',\n    text1Style: null,\n    text2Style: null,\n    position: 'top',\n    autoHide: true,\n    swipeable: true,\n    visibilityTime: 4000,\n    topOffset: 40,\n    bottomOffset: 40,\n    keyboardOffset: 10,\n    avoidKeyboard: true,\n    onShow: noop,\n    onHide: noop,\n    onPress: noop,\n    props: {}\n};\nexport function useToast({ defaultOptions }) {\n    const { log } = useLogger();\n    const { panning } = useGesture();\n    const [isVisible, setIsVisible] = React.useState(false);\n    const [data, setData] = React.useState(DEFAULT_DATA);\n    const initialOptions = mergeIfDefined(DEFAULT_OPTIONS, defaultOptions);\n    const [options, setOptions] = React.useState(initialOptions);\n    const onAutoHide = React.useCallback(() => {\n        if (panning.current) {\n            log('Auto hiding was blocked due to panning');\n        }\n        else {\n            log('Auto hiding');\n            setIsVisible(false);\n            options.onHide();\n        }\n    }, [log, options, panning]);\n    const { startTimer, clearTimer } = useTimeout(onAutoHide, options.visibilityTime);\n    const hide = React.useCallback(() => {\n        log('Hiding');\n        setIsVisible(false);\n        clearTimer();\n        options.onHide();\n    }, [clearTimer, log, options]);\n    const show = React.useCallback((params) => {\n        log(`Showing with params: ${JSON.stringify(params)}`);\n        const { text1 = DEFAULT_DATA.text1, text2 = DEFAULT_DATA.text2, type = initialOptions.type, text1Style = initialOptions.text1Style, text2Style = initialOptions.text2Style, position = initialOptions.position, autoHide = initialOptions.autoHide, visibilityTime = initialOptions.visibilityTime, topOffset = initialOptions.topOffset, bottomOffset = initialOptions.bottomOffset, keyboardOffset = initialOptions.keyboardOffset, avoidKeyboard = initialOptions.avoidKeyboard, onShow = initialOptions.onShow, onHide = initialOptions.onHide, onPress = initialOptions.onPress, swipeable = initialOptions.swipeable, props = initialOptions.props } = params;\n        setData({\n            text1,\n            text2\n        });\n        setOptions(mergeIfDefined(initialOptions, {\n            type,\n            text1Style,\n            text2Style,\n            position,\n            autoHide,\n            visibilityTime,\n            topOffset,\n            bottomOffset,\n            keyboardOffset,\n            avoidKeyboard,\n            onShow,\n            onHide,\n            onPress,\n            swipeable,\n            props\n        }));\n        // TODO: validate input\n        // TODO: use a queue when Toast is already visible\n        setIsVisible(true);\n        onShow();\n    }, [initialOptions, log]);\n    React.useEffect(() => {\n        const { autoHide } = options;\n        if (isVisible) {\n            if (autoHide) {\n                startTimer();\n            }\n            else {\n                clearTimer();\n            }\n        }\n    }, [isVisible, options, startTimer, clearTimer]);\n    return {\n        isVisible,\n        data,\n        options,\n        show,\n        hide\n    };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}