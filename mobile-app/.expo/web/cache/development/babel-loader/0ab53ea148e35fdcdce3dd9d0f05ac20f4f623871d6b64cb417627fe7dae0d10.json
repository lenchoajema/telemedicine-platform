{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { AuthService } from \"../services/AuthService\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar AuthContext = createContext(undefined);\nexport var useAuth = function useAuth() {\n  var context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\nexport var AuthProvider = function AuthProvider(_ref) {\n  var children = _ref.children;\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    user = _useState2[0],\n    setUser = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    token = _useState4[0],\n    setToken = _useState4[1];\n  var _useState5 = useState(true),\n    _useState6 = _slicedToArray(_useState5, 2),\n    isLoading = _useState6[0],\n    setIsLoading = _useState6[1];\n  var isAuthenticated = !!user && !!token;\n  useEffect(function () {\n    initializeAuth();\n  }, []);\n  var initializeAuth = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        setIsLoading(true);\n        var storedToken = yield AsyncStorage.getItem('authToken');\n        var storedUser = yield AsyncStorage.getItem('user');\n        if (storedToken && storedUser) {\n          setToken(storedToken);\n          setUser(JSON.parse(storedUser));\n          try {\n            yield AuthService.getCurrentUser(storedToken);\n          } catch (error) {\n            yield clearAuthData();\n          }\n        }\n      } catch (error) {\n        console.error('Error initializing auth:', error);\n        yield clearAuthData();\n      } finally {\n        setIsLoading(false);\n      }\n    });\n    return function initializeAuth() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var login = function () {\n    var _ref3 = _asyncToGenerator(function* (email, password) {\n      try {\n        setIsLoading(true);\n        var response = yield AuthService.login(email, password);\n        if (response.success && response.data) {\n          var _response$data = response.data,\n            userData = _response$data.user,\n            authToken = _response$data.token;\n          yield AsyncStorage.setItem('authToken', authToken);\n          yield AsyncStorage.setItem('user', JSON.stringify(userData));\n          setToken(authToken);\n          setUser(userData);\n          return true;\n        }\n        return false;\n      } catch (error) {\n        console.error('Login error:', error);\n        return false;\n      } finally {\n        setIsLoading(false);\n      }\n    });\n    return function login(_x, _x2) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var register = function () {\n    var _ref4 = _asyncToGenerator(function* (userData) {\n      try {\n        setIsLoading(true);\n        var response = yield AuthService.register(userData);\n        if (response.success && response.data) {\n          var _response$data2 = response.data,\n            newUser = _response$data2.user,\n            authToken = _response$data2.token;\n          yield AsyncStorage.setItem('authToken', authToken);\n          yield AsyncStorage.setItem('user', JSON.stringify(newUser));\n          setToken(authToken);\n          setUser(newUser);\n          return true;\n        }\n        return false;\n      } catch (error) {\n        console.error('Registration error:', error);\n        return false;\n      } finally {\n        setIsLoading(false);\n      }\n    });\n    return function register(_x3) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  var logout = function () {\n    var _ref5 = _asyncToGenerator(function* () {\n      try {\n        setIsLoading(true);\n        yield clearAuthData();\n      } catch (error) {\n        console.error('Logout error:', error);\n      } finally {\n        setIsLoading(false);\n      }\n    });\n    return function logout() {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n  var refreshUser = function () {\n    var _ref6 = _asyncToGenerator(function* () {\n      if (!token) return;\n      try {\n        var response = yield AuthService.getCurrentUser(token);\n        if (response.success && response.data) {\n          var userData = response.data.user;\n          yield AsyncStorage.setItem('user', JSON.stringify(userData));\n          setUser(userData);\n        }\n      } catch (error) {\n        console.error('Error refreshing user:', error);\n        yield clearAuthData();\n      }\n    });\n    return function refreshUser() {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n  var clearAuthData = function () {\n    var _ref7 = _asyncToGenerator(function* () {\n      yield AsyncStorage.removeItem('authToken');\n      yield AsyncStorage.removeItem('user');\n      setToken(null);\n      setUser(null);\n    });\n    return function clearAuthData() {\n      return _ref7.apply(this, arguments);\n    };\n  }();\n  var value = {\n    user: user,\n    token: token,\n    isAuthenticated: isAuthenticated,\n    isLoading: isLoading,\n    login: login,\n    register: register,\n    logout: logout,\n    refreshUser: refreshUser\n  };\n  return _jsx(AuthContext.Provider, {\n    value: value,\n    children: children\n  });\n};","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","AsyncStorage","AuthService","jsx","_jsx","AuthContext","undefined","useAuth","context","Error","AuthProvider","_ref","children","_useState","_useState2","_slicedToArray","user","setUser","_useState3","_useState4","token","setToken","_useState5","_useState6","isLoading","setIsLoading","isAuthenticated","initializeAuth","_ref2","_asyncToGenerator","storedToken","getItem","storedUser","JSON","parse","getCurrentUser","error","clearAuthData","console","apply","arguments","login","_ref3","email","password","response","success","data","_response$data","userData","authToken","setItem","stringify","_x","_x2","register","_ref4","_response$data2","newUser","_x3","logout","_ref5","refreshUser","_ref6","_ref7","removeItem","value","Provider"],"sources":["/workspaces/telemedicine-platform/mobile-app/src/context/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { AuthService } from '../services/AuthService';\n\ninterface User {\n  id: string;\n  email: string;\n  role: 'patient' | 'doctor' | 'admin';\n  profile: {\n    firstName: string;\n    lastName: string;\n    fullName: string;\n  };\n}\n\ninterface AuthContextType {\n  user: User | null;\n  token: string | null;\n  isAuthenticated: boolean;\n  isLoading: boolean;\n  login: (email: string, password: string) => Promise<boolean>;\n  register: (userData: any) => Promise<boolean>;\n  logout: () => Promise<void>;\n  refreshUser: () => Promise<void>;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\ninterface AuthProviderProps {\n  children: ReactNode;\n}\n\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [token, setToken] = useState<string | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n\n  const isAuthenticated = !!user && !!token;\n\n  // Initialize auth state from storage\n  useEffect(() => {\n    initializeAuth();\n  }, []);\n\n  const initializeAuth = async () => {\n    try {\n      setIsLoading(true);\n      const storedToken = await AsyncStorage.getItem('authToken');\n      const storedUser = await AsyncStorage.getItem('user');\n\n      if (storedToken && storedUser) {\n        setToken(storedToken);\n        setUser(JSON.parse(storedUser));\n        \n        // Verify token is still valid\n        try {\n          await AuthService.getCurrentUser(storedToken);\n        } catch (error) {\n          // Token is invalid, clear auth data\n          await clearAuthData();\n        }\n      }\n    } catch (error) {\n      console.error('Error initializing auth:', error);\n      await clearAuthData();\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const login = async (email: string, password: string): Promise<boolean> => {\n    try {\n      setIsLoading(true);\n      const response = await AuthService.login(email, password);\n      \n      if (response.success && response.data) {\n        const { user: userData, token: authToken } = response.data;\n        \n        await AsyncStorage.setItem('authToken', authToken);\n        await AsyncStorage.setItem('user', JSON.stringify(userData));\n        \n        setToken(authToken);\n        setUser(userData);\n        \n        return true;\n      }\n      \n      return false;\n    } catch (error) {\n      console.error('Login error:', error);\n      return false;\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const register = async (userData: any): Promise<boolean> => {\n    try {\n      setIsLoading(true);\n      const response = await AuthService.register(userData);\n      \n      if (response.success && response.data) {\n        const { user: newUser, token: authToken } = response.data;\n        \n        await AsyncStorage.setItem('authToken', authToken);\n        await AsyncStorage.setItem('user', JSON.stringify(newUser));\n        \n        setToken(authToken);\n        setUser(newUser);\n        \n        return true;\n      }\n      \n      return false;\n    } catch (error) {\n      console.error('Registration error:', error);\n      return false;\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const logout = async (): Promise<void> => {\n    try {\n      setIsLoading(true);\n      await clearAuthData();\n    } catch (error) {\n      console.error('Logout error:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const refreshUser = async (): Promise<void> => {\n    if (!token) return;\n    \n    try {\n      const response = await AuthService.getCurrentUser(token);\n      if (response.success && response.data) {\n        const userData = response.data.user;\n        await AsyncStorage.setItem('user', JSON.stringify(userData));\n        setUser(userData);\n      }\n    } catch (error) {\n      console.error('Error refreshing user:', error);\n      await clearAuthData();\n    }\n  };\n\n  const clearAuthData = async (): Promise<void> => {\n    await AsyncStorage.removeItem('authToken');\n    await AsyncStorage.removeItem('user');\n    setToken(null);\n    setUser(null);\n  };\n\n  const value: AuthContextType = {\n    user,\n    token,\n    isAuthenticated,\n    isLoading,\n    login,\n    register,\n    logout,\n    refreshUser,\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}