{"ast":null,"code":"var _jsxFileName = \"/workspaces/telemedicine-platform/mobile-app/src/navigation/AppNavigator.tsx\";\nimport React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { Ionicons } from '@expo/vector-icons';\nimport { useAuth } from \"../context/AuthContext\";\nimport LoginScreen from \"../screens/Auth/LoginScreen\";\nimport RegisterScreen from \"../screens/Auth/RegisterScreen\";\nimport HomeScreen from \"../screens/Home/HomeScreen\";\nimport AppointmentsScreen from \"../screens/Appointments/AppointmentsScreen\";\nimport VideoCallScreen from \"../screens/VideoCall/VideoCallScreenWeb\";\nimport ProfileScreen from \"../screens/Profile/ProfileScreen\";\nimport DoctorsScreen from \"../screens/Doctors/DoctorsScreen\";\nimport MedicalRecordsScreen from \"../screens/MedicalRecords/MedicalRecordsScreen\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Tab = createBottomTabNavigator();\nconst Stack = createStackNavigator();\nconst AuthStack = () => _jsxDEV(Stack.Navigator, {\n  screenOptions: {\n    headerShown: false\n  },\n  children: [_jsxDEV(Stack.Screen, {\n    name: \"Login\",\n    component: LoginScreen\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this), _jsxDEV(Stack.Screen, {\n    name: \"Register\",\n    component: RegisterScreen\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 23,\n  columnNumber: 3\n}, this);\nconst PatientTabs = () => _jsxDEV(Tab.Navigator, {\n  screenOptions: ({\n    route\n  }) => ({\n    tabBarIcon: ({\n      focused,\n      color,\n      size\n    }) => {\n      let iconName;\n      switch (route.name) {\n        case 'Home':\n          iconName = focused ? 'home' : 'home-outline';\n          break;\n        case 'Doctors':\n          iconName = focused ? 'medical' : 'medical-outline';\n          break;\n        case 'Appointments':\n          iconName = focused ? 'calendar' : 'calendar-outline';\n          break;\n        case 'Records':\n          iconName = focused ? 'document-text' : 'document-text-outline';\n          break;\n        case 'Profile':\n          iconName = focused ? 'person' : 'person-outline';\n          break;\n        default:\n          iconName = 'home-outline';\n      }\n      return _jsxDEV(Ionicons, {\n        name: iconName,\n        size: size,\n        color: color\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 16\n      }, this);\n    },\n    tabBarActiveTintColor: '#2a70e0',\n    tabBarInactiveTintColor: 'gray',\n    headerStyle: {\n      backgroundColor: '#2a70e0'\n    },\n    headerTintColor: '#fff',\n    headerTitleStyle: {\n      fontWeight: 'bold'\n    }\n  }),\n  children: [_jsxDEV(Tab.Screen, {\n    name: \"Home\",\n    component: HomeScreen,\n    options: {\n      title: 'Dashboard'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this), _jsxDEV(Tab.Screen, {\n    name: \"Doctors\",\n    component: DoctorsScreen,\n    options: {\n      title: 'Find Doctors'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this), _jsxDEV(Tab.Screen, {\n    name: \"Appointments\",\n    component: AppointmentsScreen,\n    options: {\n      title: 'My Appointments'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this), _jsxDEV(Tab.Screen, {\n    name: \"Records\",\n    component: MedicalRecordsScreen,\n    options: {\n      title: 'Medical Records'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this), _jsxDEV(Tab.Screen, {\n    name: \"Profile\",\n    component: ProfileScreen,\n    options: {\n      title: 'Profile'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 31,\n  columnNumber: 3\n}, this);\nconst DoctorTabs = () => _jsxDEV(Tab.Navigator, {\n  screenOptions: ({\n    route\n  }) => ({\n    tabBarIcon: ({\n      focused,\n      color,\n      size\n    }) => {\n      let iconName;\n      switch (route.name) {\n        case 'Dashboard':\n          iconName = focused ? 'home' : 'home-outline';\n          break;\n        case 'Patients':\n          iconName = focused ? 'people' : 'people-outline';\n          break;\n        case 'Schedule':\n          iconName = focused ? 'calendar' : 'calendar-outline';\n          break;\n        case 'Analytics':\n          iconName = focused ? 'analytics' : 'analytics-outline';\n          break;\n        case 'Profile':\n          iconName = focused ? 'person' : 'person-outline';\n          break;\n        default:\n          iconName = 'home-outline';\n      }\n      return _jsxDEV(Ionicons, {\n        name: iconName,\n        size: size,\n        color: color\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 16\n      }, this);\n    },\n    tabBarActiveTintColor: '#2a70e0',\n    tabBarInactiveTintColor: 'gray',\n    headerStyle: {\n      backgroundColor: '#2a70e0'\n    },\n    headerTintColor: '#fff',\n    headerTitleStyle: {\n      fontWeight: 'bold'\n    }\n  }),\n  children: [_jsxDEV(Tab.Screen, {\n    name: \"Dashboard\",\n    component: HomeScreen\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 5\n  }, this), _jsxDEV(Tab.Screen, {\n    name: \"Patients\",\n    component: AppointmentsScreen\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 5\n  }, this), _jsxDEV(Tab.Screen, {\n    name: \"Schedule\",\n    component: AppointmentsScreen\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 5\n  }, this), _jsxDEV(Tab.Screen, {\n    name: \"Analytics\",\n    component: HomeScreen\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 5\n  }, this), _jsxDEV(Tab.Screen, {\n    name: \"Profile\",\n    component: ProfileScreen\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 141,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 99,\n  columnNumber: 3\n}, this);\nconst AppStack = () => {\n  const {\n    user\n  } = useAuth();\n  return _jsxDEV(Stack.Navigator, {\n    children: [_jsxDEV(Stack.Screen, {\n      name: \"MainTabs\",\n      component: user?.role === 'doctor' ? DoctorTabs : PatientTabs,\n      options: {\n        headerShown: false\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this), _jsxDEV(Stack.Screen, {\n      name: \"VideoCall\",\n      component: VideoCallScreen,\n      options: {\n        title: 'Video Consultation',\n        headerStyle: {\n          backgroundColor: '#2a70e0'\n        },\n        headerTintColor: '#fff',\n        gestureEnabled: false\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 5\n  }, this);\n};\nexport const AppNavigator = () => {\n  const {\n    isAuthenticated,\n    isLoading\n  } = useAuth();\n  if (isLoading) {\n    return null;\n  }\n  return _jsxDEV(NavigationContainer, {\n    children: isAuthenticated ? _jsxDEV(AppStack, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 26\n    }, this) : _jsxDEV(AuthStack, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 41\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 179,\n    columnNumber: 5\n  }, this);\n};","map":{"version":3,"names":["React","NavigationContainer","createBottomTabNavigator","createStackNavigator","Ionicons","useAuth","LoginScreen","RegisterScreen","HomeScreen","AppointmentsScreen","VideoCallScreen","ProfileScreen","DoctorsScreen","MedicalRecordsScreen","jsxDEV","_jsxDEV","Tab","Stack","AuthStack","Navigator","screenOptions","headerShown","children","Screen","name","component","fileName","_jsxFileName","lineNumber","columnNumber","PatientTabs","route","tabBarIcon","focused","color","size","iconName","tabBarActiveTintColor","tabBarInactiveTintColor","headerStyle","backgroundColor","headerTintColor","headerTitleStyle","fontWeight","options","title","DoctorTabs","AppStack","user","role","gestureEnabled","AppNavigator","isAuthenticated","isLoading"],"sources":["/workspaces/telemedicine-platform/mobile-app/src/navigation/AppNavigator.tsx"],"sourcesContent":["import React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { Ionicons } from '@expo/vector-icons';\nimport { useAuth } from '../context/AuthContext';\n\n// Import screens\nimport LoginScreen from '../screens/Auth/LoginScreen';\nimport RegisterScreen from '../screens/Auth/RegisterScreen';\nimport HomeScreen from '../screens/Home/HomeScreen';\nimport AppointmentsScreen from '../screens/Appointments/AppointmentsScreen';\nimport VideoCallScreen from '../screens/VideoCall/VideoCallScreenWeb';\nimport ProfileScreen from '../screens/Profile/ProfileScreen';\nimport DoctorsScreen from '../screens/Doctors/DoctorsScreen';\nimport MedicalRecordsScreen from '../screens/MedicalRecords/MedicalRecordsScreen';\n\nconst Tab = createBottomTabNavigator();\nconst Stack = createStackNavigator();\n\n// Auth Stack\nconst AuthStack = () => (\n  <Stack.Navigator screenOptions={{ headerShown: false }}>\n    <Stack.Screen name=\"Login\" component={LoginScreen} />\n    <Stack.Screen name=\"Register\" component={RegisterScreen} />\n  </Stack.Navigator>\n);\n\n// Patient Tab Navigator\nconst PatientTabs = () => (\n  <Tab.Navigator\n    screenOptions={({ route }) => ({\n      tabBarIcon: ({ focused, color, size }) => {\n        let iconName: any;\n        \n        switch (route.name) {\n          case 'Home':\n            iconName = focused ? 'home' : 'home-outline';\n            break;\n          case 'Doctors':\n            iconName = focused ? 'medical' : 'medical-outline';\n            break;\n          case 'Appointments':\n            iconName = focused ? 'calendar' : 'calendar-outline';\n            break;\n          case 'Records':\n            iconName = focused ? 'document-text' : 'document-text-outline';\n            break;\n          case 'Profile':\n            iconName = focused ? 'person' : 'person-outline';\n            break;\n          default:\n            iconName = 'home-outline';\n        }\n\n        return <Ionicons name={iconName} size={size} color={color} />;\n      },\n      tabBarActiveTintColor: '#2a70e0',\n      tabBarInactiveTintColor: 'gray',\n      headerStyle: {\n        backgroundColor: '#2a70e0',\n      },\n      headerTintColor: '#fff',\n      headerTitleStyle: {\n        fontWeight: 'bold',\n      },\n    })}\n  >\n    <Tab.Screen \n      name=\"Home\" \n      component={HomeScreen}\n      options={{ title: 'Dashboard' }}\n    />\n    <Tab.Screen \n      name=\"Doctors\" \n      component={DoctorsScreen}\n      options={{ title: 'Find Doctors' }}\n    />\n    <Tab.Screen \n      name=\"Appointments\" \n      component={AppointmentsScreen}\n      options={{ title: 'My Appointments' }}\n    />\n    <Tab.Screen \n      name=\"Records\" \n      component={MedicalRecordsScreen}\n      options={{ title: 'Medical Records' }}\n    />\n    <Tab.Screen \n      name=\"Profile\" \n      component={ProfileScreen}\n      options={{ title: 'Profile' }}\n    />\n  </Tab.Navigator>\n);\n\n// Doctor Tab Navigator\nconst DoctorTabs = () => (\n  <Tab.Navigator\n    screenOptions={({ route }) => ({\n      tabBarIcon: ({ focused, color, size }) => {\n        let iconName: any;\n        \n        switch (route.name) {\n          case 'Dashboard':\n            iconName = focused ? 'home' : 'home-outline';\n            break;\n          case 'Patients':\n            iconName = focused ? 'people' : 'people-outline';\n            break;\n          case 'Schedule':\n            iconName = focused ? 'calendar' : 'calendar-outline';\n            break;\n          case 'Analytics':\n            iconName = focused ? 'analytics' : 'analytics-outline';\n            break;\n          case 'Profile':\n            iconName = focused ? 'person' : 'person-outline';\n            break;\n          default:\n            iconName = 'home-outline';\n        }\n\n        return <Ionicons name={iconName} size={size} color={color} />;\n      },\n      tabBarActiveTintColor: '#2a70e0',\n      tabBarInactiveTintColor: 'gray',\n      headerStyle: {\n        backgroundColor: '#2a70e0',\n      },\n      headerTintColor: '#fff',\n      headerTitleStyle: {\n        fontWeight: 'bold',\n      },\n    })}\n  >\n    <Tab.Screen name=\"Dashboard\" component={HomeScreen} />\n    <Tab.Screen name=\"Patients\" component={AppointmentsScreen} />\n    <Tab.Screen name=\"Schedule\" component={AppointmentsScreen} />\n    <Tab.Screen name=\"Analytics\" component={HomeScreen} />\n    <Tab.Screen name=\"Profile\" component={ProfileScreen} />\n  </Tab.Navigator>\n);\n\n// Main App Stack\nconst AppStack = () => {\n  const { user } = useAuth();\n  \n  return (\n    <Stack.Navigator>\n      <Stack.Screen \n        name=\"MainTabs\" \n        component={user?.role === 'doctor' ? DoctorTabs : PatientTabs}\n        options={{ headerShown: false }}\n      />\n      <Stack.Screen \n        name=\"VideoCall\" \n        component={VideoCallScreen}\n        options={{ \n          title: 'Video Consultation',\n          headerStyle: { backgroundColor: '#2a70e0' },\n          headerTintColor: '#fff',\n          gestureEnabled: false,\n        }}\n      />\n    </Stack.Navigator>\n  );\n};\n\n// Main App Navigator\nexport const AppNavigator = () => {\n  const { isAuthenticated, isLoading } = useAuth();\n\n  if (isLoading) {\n    return null; // Or loading screen\n  }\n\n  return (\n    <NavigationContainer>\n      {isAuthenticated ? <AppStack /> : <AuthStack />}\n    </NavigationContainer>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}