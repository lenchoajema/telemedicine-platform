{"ast":null,"code":"import React from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar GestureContext = React.createContext({\n  panning: {\n    current: false\n  }\n});\nfunction GestureProvider(_ref) {\n  var children = _ref.children,\n    _ref$panning = _ref.panning,\n    panning = _ref$panning === void 0 ? false : _ref$panning;\n  var panningRef = React.useRef(panning);\n  var value = {\n    panning: panningRef\n  };\n  return _jsx(GestureContext.Provider, {\n    value: value,\n    children: children\n  });\n}\nfunction useGesture() {\n  var ctx = React.useContext(GestureContext);\n  return ctx;\n}\nexport { GestureProvider, useGesture };","map":{"version":3,"names":["React","jsx","_jsx","GestureContext","createContext","panning","current","GestureProvider","_ref","children","_ref$panning","panningRef","useRef","value","Provider","useGesture","ctx","useContext"],"sources":["/workspaces/telemedicine-platform/mobile-app/node_modules/react-native-toast-message/lib/src/contexts/GestureContext.js"],"sourcesContent":["import React from 'react';\nconst GestureContext = React.createContext({\n    panning: { current: false }\n});\nfunction GestureProvider({ children, panning = false }) {\n    const panningRef = React.useRef(panning);\n    const value = { panning: panningRef };\n    return (<GestureContext.Provider value={value}>{children}</GestureContext.Provider>);\n}\nfunction useGesture() {\n    const ctx = React.useContext(GestureContext);\n    return ctx;\n}\nexport { GestureProvider, useGesture };\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAC1B,IAAMC,cAAc,GAAGH,KAAK,CAACI,aAAa,CAAC;EACvCC,OAAO,EAAE;IAAEC,OAAO,EAAE;EAAM;AAC9B,CAAC,CAAC;AACF,SAASC,eAAeA,CAAAC,IAAA,EAAgC;EAAA,IAA7BC,QAAQ,GAAAD,IAAA,CAARC,QAAQ;IAAAC,YAAA,GAAAF,IAAA,CAAEH,OAAO;IAAPA,OAAO,GAAAK,YAAA,cAAG,KAAK,GAAAA,YAAA;EAChD,IAAMC,UAAU,GAAGX,KAAK,CAACY,MAAM,CAACP,OAAO,CAAC;EACxC,IAAMQ,KAAK,GAAG;IAAER,OAAO,EAAEM;EAAW,CAAC;EACrC,OAAQT,IAAA,CAACC,cAAc,CAACW,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAAJ,QAAA,EAAEA;EAAQ,CAA0B,CAAC;AACvF;AACA,SAASM,UAAUA,CAAA,EAAG;EAClB,IAAMC,GAAG,GAAGhB,KAAK,CAACiB,UAAU,CAACd,cAAc,CAAC;EAC5C,OAAOa,GAAG;AACd;AACA,SAAST,eAAe,EAAEQ,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}