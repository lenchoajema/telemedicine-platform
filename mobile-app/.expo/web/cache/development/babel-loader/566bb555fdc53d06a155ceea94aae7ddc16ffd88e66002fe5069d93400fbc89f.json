{"ast":null,"code":"import React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { additiveInverseArray } from \"../utils/array\";\nimport { useKeyboard } from \"./useKeyboard\";\nexport function translateYOutputRangeFor({\n  position,\n  height,\n  topOffset,\n  bottomOffset,\n  keyboardHeight,\n  keyboardOffset,\n  avoidKeyboard\n}) {\n  const offset = position === 'bottom' ? bottomOffset : topOffset;\n  const keyboardAwareOffset = position === 'bottom' && avoidKeyboard ? keyboardHeight + keyboardOffset : 0;\n  const range = [-(height * 2), Math.max(offset, keyboardAwareOffset)];\n  const outputRange = position === 'bottom' ? additiveInverseArray(range) : range;\n  return outputRange;\n}\nconst useNativeDriver = Platform.select({\n  ios: true,\n  default: false\n});\nexport function useSlideAnimation({\n  position,\n  height,\n  topOffset,\n  bottomOffset,\n  keyboardOffset,\n  avoidKeyboard\n}) {\n  const animatedValue = React.useRef(new Animated.Value(0));\n  const {\n    keyboardHeight\n  } = useKeyboard();\n  const animate = React.useCallback(toValue => {\n    Animated.spring(animatedValue.current, {\n      toValue,\n      useNativeDriver,\n      friction: 8\n    }).start();\n  }, []);\n  const translateY = React.useMemo(() => animatedValue.current.interpolate({\n    inputRange: [0, 1],\n    outputRange: translateYOutputRangeFor({\n      position,\n      height,\n      topOffset,\n      bottomOffset,\n      keyboardHeight,\n      keyboardOffset,\n      avoidKeyboard\n    })\n  }), [position, height, topOffset, bottomOffset, keyboardHeight, keyboardOffset, avoidKeyboard]);\n  const opacity = animatedValue.current.interpolate({\n    inputRange: [0, 0.7, 1],\n    outputRange: [0, 1, 1]\n  });\n  return {\n    animatedValue,\n    animate,\n    animationStyles: {\n      opacity,\n      transform: [{\n        translateY\n      }]\n    }\n  };\n}","map":{"version":3,"names":["React","Animated","Platform","additiveInverseArray","useKeyboard","translateYOutputRangeFor","position","height","topOffset","bottomOffset","keyboardHeight","keyboardOffset","avoidKeyboard","offset","keyboardAwareOffset","range","Math","max","outputRange","useNativeDriver","select","ios","default","useSlideAnimation","animatedValue","useRef","Value","animate","useCallback","toValue","spring","current","friction","start","translateY","useMemo","interpolate","inputRange","opacity","animationStyles","transform"],"sources":["/workspaces/telemedicine-platform/mobile-app/node_modules/react-native-toast-message/lib/src/hooks/useSlideAnimation.js"],"sourcesContent":["import React from 'react';\nimport { Animated, Platform } from 'react-native';\nimport { additiveInverseArray } from '../utils/array';\nimport { useKeyboard } from './useKeyboard';\nexport function translateYOutputRangeFor({ position, height, topOffset, bottomOffset, keyboardHeight, keyboardOffset, avoidKeyboard }) {\n    const offset = position === 'bottom' ? bottomOffset : topOffset;\n    const keyboardAwareOffset = position === 'bottom' && avoidKeyboard ? keyboardHeight + keyboardOffset : 0;\n    const range = [-(height * 2), Math.max(offset, keyboardAwareOffset)];\n    const outputRange = position === 'bottom' ? additiveInverseArray(range) : range;\n    return outputRange;\n}\nconst useNativeDriver = Platform.select({\n    ios: true,\n    default: false\n});\nexport function useSlideAnimation({ position, height, topOffset, bottomOffset, keyboardOffset, avoidKeyboard }) {\n    const animatedValue = React.useRef(new Animated.Value(0));\n    const { keyboardHeight } = useKeyboard();\n    const animate = React.useCallback((toValue) => {\n        Animated.spring(animatedValue.current, {\n            toValue,\n            useNativeDriver,\n            friction: 8\n        }).start();\n    }, []);\n    const translateY = React.useMemo(() => animatedValue.current.interpolate({\n        inputRange: [0, 1],\n        outputRange: translateYOutputRangeFor({\n            position,\n            height,\n            topOffset,\n            bottomOffset,\n            keyboardHeight,\n            keyboardOffset,\n            avoidKeyboard\n        })\n    }), [position, height, topOffset, bottomOffset, keyboardHeight, keyboardOffset, avoidKeyboard]);\n    const opacity = animatedValue.current.interpolate({\n        inputRange: [0, 0.7, 1],\n        outputRange: [0, 1, 1]\n    });\n    return {\n        animatedValue,\n        animate,\n        animationStyles: {\n            opacity,\n            transform: [\n                {\n                    translateY\n                }\n            ]\n        }\n    };\n}\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,QAAA;AAAA,OAAAC,QAAA;AAE1B,SAASC,oBAAoB;AAC7B,SAASC,WAAW;AACpB,OAAO,SAASC,wBAAwBA,CAAC;EAAEC,QAAQ;EAAEC,MAAM;EAAEC,SAAS;EAAEC,YAAY;EAAEC,cAAc;EAAEC,cAAc;EAAEC;AAAc,CAAC,EAAE;EACnI,MAAMC,MAAM,GAAGP,QAAQ,KAAK,QAAQ,GAAGG,YAAY,GAAGD,SAAS;EAC/D,MAAMM,mBAAmB,GAAGR,QAAQ,KAAK,QAAQ,IAAIM,aAAa,GAAGF,cAAc,GAAGC,cAAc,GAAG,CAAC;EACxG,MAAMI,KAAK,GAAG,CAAC,EAAER,MAAM,GAAG,CAAC,CAAC,EAAES,IAAI,CAACC,GAAG,CAACJ,MAAM,EAAEC,mBAAmB,CAAC,CAAC;EACpE,MAAMI,WAAW,GAAGZ,QAAQ,KAAK,QAAQ,GAAGH,oBAAoB,CAACY,KAAK,CAAC,GAAGA,KAAK;EAC/E,OAAOG,WAAW;AACtB;AACA,MAAMC,eAAe,GAAGjB,QAAQ,CAACkB,MAAM,CAAC;EACpCC,GAAG,EAAE,IAAI;EACTC,OAAO,EAAE;AACb,CAAC,CAAC;AACF,OAAO,SAASC,iBAAiBA,CAAC;EAAEjB,QAAQ;EAAEC,MAAM;EAAEC,SAAS;EAAEC,YAAY;EAAEE,cAAc;EAAEC;AAAc,CAAC,EAAE;EAC5G,MAAMY,aAAa,GAAGxB,KAAK,CAACyB,MAAM,CAAC,IAAIxB,QAAQ,CAACyB,KAAK,CAAC,CAAC,CAAC,CAAC;EACzD,MAAM;IAAEhB;EAAe,CAAC,GAAGN,WAAW,CAAC,CAAC;EACxC,MAAMuB,OAAO,GAAG3B,KAAK,CAAC4B,WAAW,CAAEC,OAAO,IAAK;IAC3C5B,QAAQ,CAAC6B,MAAM,CAACN,aAAa,CAACO,OAAO,EAAE;MACnCF,OAAO;MACPV,eAAe;MACfa,QAAQ,EAAE;IACd,CAAC,CAAC,CAACC,KAAK,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EACN,MAAMC,UAAU,GAAGlC,KAAK,CAACmC,OAAO,CAAC,MAAMX,aAAa,CAACO,OAAO,CAACK,WAAW,CAAC;IACrEC,UAAU,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IAClBnB,WAAW,EAAEb,wBAAwB,CAAC;MAClCC,QAAQ;MACRC,MAAM;MACNC,SAAS;MACTC,YAAY;MACZC,cAAc;MACdC,cAAc;MACdC;IACJ,CAAC;EACL,CAAC,CAAC,EAAE,CAACN,QAAQ,EAAEC,MAAM,EAAEC,SAAS,EAAEC,YAAY,EAAEC,cAAc,EAAEC,cAAc,EAAEC,aAAa,CAAC,CAAC;EAC/F,MAAM0B,OAAO,GAAGd,aAAa,CAACO,OAAO,CAACK,WAAW,CAAC;IAC9CC,UAAU,EAAE,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC;IACvBnB,WAAW,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC;EACzB,CAAC,CAAC;EACF,OAAO;IACHM,aAAa;IACbG,OAAO;IACPY,eAAe,EAAE;MACbD,OAAO;MACPE,SAAS,EAAE,CACP;QACIN;MACJ,CAAC;IAET;EACJ,CAAC;AACL","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}