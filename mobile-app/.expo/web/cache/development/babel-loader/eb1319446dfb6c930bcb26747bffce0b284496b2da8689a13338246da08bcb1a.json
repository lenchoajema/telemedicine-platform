{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport NativeModules from \"react-native-web/dist/exports/NativeModules\";\nimport PermissionsAndroid from \"react-native-web/dist/exports/PermissionsAndroid\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nvar WebRTCModule = NativeModules.WebRTCModule;\nvar Permissions = function () {\n  function Permissions() {\n    _classCallCheck(this, Permissions);\n    this.RESULT = {\n      DENIED: 'denied',\n      GRANTED: 'granted',\n      PROMPT: 'prompt'\n    };\n    this.VALID_PERMISSIONS = ['camera', 'microphone'];\n    this._lastReq = Promise.resolve();\n  }\n  return _createClass(Permissions, [{\n    key: \"_requestPermissionAndroid\",\n    value: function _requestPermissionAndroid(perm) {\n      return new Promise(function (resolve) {\n        PermissionsAndroid.request(perm).then(function (granted) {\n          return resolve(granted === PermissionsAndroid.RESULTS.GRANTED);\n        }, function () {\n          return resolve(false);\n        });\n      });\n    }\n  }, {\n    key: \"_validatePermissionDescriptior\",\n    value: function _validatePermissionDescriptior(permissionDesc) {\n      if (typeof permissionDesc !== 'object') {\n        throw new TypeError('Argument 1 of Permissions.query is not an object.');\n      }\n      if (typeof permissionDesc.name === 'undefined') {\n        throw new TypeError('Missing required \\'name\\' member of PermissionDescriptor.');\n      }\n      if (this.VALID_PERMISSIONS.indexOf(permissionDesc.name) === -1) {\n        throw new TypeError('\\'name\\' member of PermissionDescriptor is not a valid value for enumeration PermissionName.');\n      }\n    }\n  }, {\n    key: \"query\",\n    value: function query(permissionDesc) {\n      var _this = this;\n      try {\n        this._validatePermissionDescriptior(permissionDesc);\n      } catch (e) {\n        return Promise.reject(e);\n      }\n      if (Platform.OS === 'android') {\n        var perm = permissionDesc.name === 'camera' ? PermissionsAndroid.PERMISSIONS.CAMERA : PermissionsAndroid.PERMISSIONS.RECORD_AUDIO;\n        return new Promise(function (resolve) {\n          PermissionsAndroid.check(perm).then(function (granted) {\n            return resolve(granted ? _this.RESULT.GRANTED : _this.RESULT.PROMPT);\n          }, function () {\n            return resolve(_this.RESULT.PROMPT);\n          });\n        });\n      } else if (Platform.OS === 'ios' || Platform.OS === 'macos') {\n        return WebRTCModule.checkPermission(permissionDesc.name);\n      } else {\n        return Promise.reject(new TypeError('Unsupported platform.'));\n      }\n    }\n  }, {\n    key: \"request\",\n    value: function request(permissionDesc) {\n      var _this2 = this;\n      try {\n        this._validatePermissionDescriptior(permissionDesc);\n      } catch (e) {\n        return Promise.reject(e);\n      }\n      if (Platform.OS === 'android') {\n        var perm = permissionDesc.name === 'camera' ? PermissionsAndroid.PERMISSIONS.CAMERA : PermissionsAndroid.PERMISSIONS.RECORD_AUDIO;\n        var requestPermission = function requestPermission() {\n          return _this2._requestPermissionAndroid(perm);\n        };\n        this._lastReq = this._lastReq.then(requestPermission, requestPermission);\n        return this._lastReq;\n      } else if (Platform.OS === 'ios' || Platform.OS === 'macos') {\n        return WebRTCModule.requestPermission(permissionDesc.name);\n      } else {\n        return Promise.reject(new TypeError('Unsupported platform.'));\n      }\n    }\n  }]);\n}();\nexport default new Permissions();","map":{"version":3,"names":["WebRTCModule","NativeModules","Permissions","_classCallCheck","RESULT","DENIED","GRANTED","PROMPT","VALID_PERMISSIONS","_lastReq","Promise","resolve","_createClass","key","value","_requestPermissionAndroid","perm","PermissionsAndroid","request","then","granted","RESULTS","_validatePermissionDescriptior","permissionDesc","TypeError","name","indexOf","query","_this","e","reject","Platform","OS","PERMISSIONS","CAMERA","RECORD_AUDIO","check","checkPermission","_this2","requestPermission"],"sources":["/workspaces/telemedicine-platform/mobile-app/node_modules/react-native-webrtc/src/Permissions.ts"],"sourcesContent":["\nimport { NativeModules, Permission, PermissionsAndroid, Platform } from 'react-native';\n\nconst { WebRTCModule } = NativeModules;\n\n/**\n * Type declaration for a permissions descriptor.\n */\ntype PermissionDescriptor = {\n    name: string;\n};\n\n/**\n * Class implementing a subset of W3C's Permissions API as defined by:\n * https://www.w3.org/TR/permissions/\n */\nclass Permissions {\n    /**\n     * Possible result values for {@link query}, in accordance with:\n     * https://www.w3.org/TR/permissions/#status-of-a-permission\n     */\n    RESULT = {\n        DENIED: 'denied',\n        GRANTED: 'granted',\n        PROMPT: 'prompt'\n    };\n\n    /**\n     * This implementation only supports requesting these permissions, a subset\n     * of: https://www.w3.org/TR/permissions/#permission-registry\n     */\n    VALID_PERMISSIONS = [ 'camera', 'microphone' ];\n\n    _lastReq: Promise<unknown> = Promise.resolve();\n\n    /**\n     * Helper for requesting Android permissions. On Android only one permission\n     * can be requested at a time (unless the multi-permission API is used,\n     * but we are not using that for symmetry with the W3C API for querying)\n     * so we'll queue them up.\n     *\n     * @param perm - The requested permission from\n     * {@link PermissionsAndroid.PERMISSIONS}\n     * https://facebook.github.io/react-native/docs/permissionsandroid#permissions-that-require-prompting-the-user\n     */\n    _requestPermissionAndroid(perm: Permission) {\n        return new Promise(resolve => {\n            PermissionsAndroid.request(perm).then(\n                granted => resolve(granted === PermissionsAndroid.RESULTS.GRANTED),\n                () => resolve(false)\n            );\n        });\n    }\n\n    /**\n     * Validates the given permission descriptor.\n     */\n    _validatePermissionDescriptior(permissionDesc) {\n        if (typeof permissionDesc !== 'object') {\n            throw new TypeError('Argument 1 of Permissions.query is not an object.');\n        }\n\n        if (typeof permissionDesc.name === 'undefined') {\n            throw new TypeError('Missing required \\'name\\' member of PermissionDescriptor.');\n        }\n\n        if (this.VALID_PERMISSIONS.indexOf(permissionDesc.name) === -1) {\n            throw new TypeError(\n                '\\'name\\' member of PermissionDescriptor is not a valid value for enumeration PermissionName.'\n            );\n        }\n    }\n\n    /**\n     * Method for querying the status of a permission, according to:\n     * https://www.w3.org/TR/permissions/#permissions-interface\n     */\n    query(permissionDesc: PermissionDescriptor) {\n        try {\n            this._validatePermissionDescriptior(permissionDesc);\n        } catch (e) {\n            return Promise.reject(e);\n        }\n\n        if (Platform.OS === 'android') {\n            const perm =\n                permissionDesc.name === 'camera'\n                    ? PermissionsAndroid.PERMISSIONS.CAMERA\n                    : PermissionsAndroid.PERMISSIONS.RECORD_AUDIO;\n\n            return new Promise(resolve => {\n                PermissionsAndroid.check(perm).then(\n                    granted => resolve(granted ? this.RESULT.GRANTED : this.RESULT.PROMPT),\n                    () => resolve(this.RESULT.PROMPT)\n                );\n            });\n        } else if (Platform.OS === 'ios' || Platform.OS === 'macos') {\n            return WebRTCModule.checkPermission(permissionDesc.name);\n        } else {\n            return Promise.reject(new TypeError('Unsupported platform.'));\n        }\n    }\n\n    /**\n     * Custom method NOT defined by W3C's permissions API, which allows the\n     * caller to request a permission.\n     */\n    request(permissionDesc: PermissionDescriptor) {\n        try {\n            this._validatePermissionDescriptior(permissionDesc);\n        } catch (e) {\n            return Promise.reject(e);\n        }\n\n        if (Platform.OS === 'android') {\n            const perm =\n                permissionDesc.name === 'camera'\n                    ? PermissionsAndroid.PERMISSIONS.CAMERA\n                    : PermissionsAndroid.PERMISSIONS.RECORD_AUDIO;\n            const requestPermission = () => this._requestPermissionAndroid(perm);\n\n            this._lastReq = this._lastReq.then(requestPermission, requestPermission);\n\n            return this._lastReq;\n        } else if (Platform.OS === 'ios' || Platform.OS === 'macos') {\n            return WebRTCModule.requestPermission(permissionDesc.name);\n        } else {\n            return Promise.reject(new TypeError('Unsupported platform.'));\n        }\n    }\n}\n\nexport default new Permissions();\n"],"mappings":";;;;;AAGA,IAAQA,YAAA,GAAiBC,aAAa,CAA9BD,YAAA;AAA8B,IAahCE,WAAW;EAAA,SAAAA,YAAA;IAAAC,eAAA,OAAAD,WAAA;IAAA,KAKbE,MAAM,GAAG;MACLC,MAAM,EAAE,QAAQ;MAChBC,OAAO,EAAE,SAAS;MAClBC,MAAM,EAAE;IACZ,CAAC;IAAA,KAMDC,iBAAiB,GAAG,CAAE,QAAQ,EAAE,YAAY,CAAE;IAAA,KAE9CC,QAAQ,GAAqBC,OAAO,CAACC,OAAO,CAAC,CAAC;EAAA;EAAA,OAAAC,YAAA,CAAAV,WAAA;IAAAW,GAAA;IAAAC,KAAA,EAY9C,SAAAC,yBAAyBA,CAACC,IAAgB,EAAE;MACxC,OAAO,IAAIN,OAAO,CAAC,UAAAC,OAAO,EAAI;QAC1BM,kBAAkB,CAACC,OAAO,CAACF,IAAI,CAAC,CAACG,IAAI,CACjC,UAAAC,OAAO;UAAA,OAAIT,OAAO,CAACS,OAAO,KAAKH,kBAAkB,CAACI,OAAO,CAACf,OAAO,CAAC;QAAA,GAClE;UAAA,OAAMK,OAAO,CAAC,KAAK,CACvB;QAAA,EAAC;MACL,CAAC,CAAC;IACN;EAAA;IAAAE,GAAA;IAAAC,KAAA,EAKA,SAAAQ,8BAA8BA,CAACC,cAAc,EAAE;MAC3C,IAAI,OAAOA,cAAc,KAAK,QAAQ,EAAE;QACpC,MAAM,IAAIC,SAAS,CAAC,mDAAmD,CAAC;MAC5E;MAEA,IAAI,OAAOD,cAAc,CAACE,IAAI,KAAK,WAAW,EAAE;QAC5C,MAAM,IAAID,SAAS,CAAC,2DAA2D,CAAC;MACpF;MAEA,IAAI,IAAI,CAAChB,iBAAiB,CAACkB,OAAO,CAACH,cAAc,CAACE,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE;QAC5D,MAAM,IAAID,SAAS,CACf,8FACJ,CAAC;MACL;IACJ;EAAA;IAAAX,GAAA;IAAAC,KAAA,EAMA,SAAAa,KAAKA,CAACJ,cAAoC,EAAE;MAAA,IAAAK,KAAA;MACxC,IAAI;QACA,IAAI,CAACN,8BAA8B,CAACC,cAAc,CAAC;MACvD,CAAC,CAAC,OAAOM,CAAC,EAAE;QACR,OAAOnB,OAAO,CAACoB,MAAM,CAACD,CAAC,CAAC;MAC5B;MAEA,IAAIE,QAAQ,CAACC,EAAE,KAAK,SAAS,EAAE;QAC3B,IAAMhB,IAAI,GACNO,cAAc,CAACE,IAAI,KAAK,QAAQ,GAC1BR,kBAAkB,CAACgB,WAAW,CAACC,MAAM,GACrCjB,kBAAkB,CAACgB,WAAW,CAACE,YAAY;QAErD,OAAO,IAAIzB,OAAO,CAAC,UAAAC,OAAO,EAAI;UAC1BM,kBAAkB,CAACmB,KAAK,CAACpB,IAAI,CAAC,CAACG,IAAI,CAC/B,UAAAC,OAAO;YAAA,OAAIT,OAAO,CAACS,OAAO,GAAGQ,KAAI,CAACxB,MAAM,CAACE,OAAO,GAAGsB,KAAI,CAACxB,MAAM,CAACG,MAAM,CAAC;UAAA,GACtE;YAAA,OAAMI,OAAO,CAACiB,KAAI,CAACxB,MAAM,CAACG,MAAM,CACpC;UAAA,EAAC;QACL,CAAC,CAAC;MACN,CAAC,MAAM,IAAIwB,QAAQ,CAACC,EAAE,KAAK,KAAK,IAAID,QAAQ,CAACC,EAAE,KAAK,OAAO,EAAE;QACzD,OAAOhC,YAAY,CAACqC,eAAe,CAACd,cAAc,CAACE,IAAI,CAAC;MAC5D,CAAC,MAAM;QACH,OAAOf,OAAO,CAACoB,MAAM,CAAC,IAAIN,SAAS,CAAC,uBAAuB,CAAC,CAAC;MACjE;IACJ;EAAA;IAAAX,GAAA;IAAAC,KAAA,EAMA,SAAAI,OAAOA,CAACK,cAAoC,EAAE;MAAA,IAAAe,MAAA;MAC1C,IAAI;QACA,IAAI,CAAChB,8BAA8B,CAACC,cAAc,CAAC;MACvD,CAAC,CAAC,OAAOM,CAAC,EAAE;QACR,OAAOnB,OAAO,CAACoB,MAAM,CAACD,CAAC,CAAC;MAC5B;MAEA,IAAIE,QAAQ,CAACC,EAAE,KAAK,SAAS,EAAE;QAC3B,IAAMhB,IAAI,GACNO,cAAc,CAACE,IAAI,KAAK,QAAQ,GAC1BR,kBAAkB,CAACgB,WAAW,CAACC,MAAM,GACrCjB,kBAAkB,CAACgB,WAAW,CAACE,YAAY;QACrD,IAAMI,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAA;UAAA,OAASD,MAAI,CAACvB,yBAAyB,CAACC,IAAI,CAAC;QAAA;QAEpE,IAAI,CAACP,QAAQ,GAAG,IAAI,CAACA,QAAQ,CAACU,IAAI,CAACoB,iBAAiB,EAAEA,iBAAiB,CAAC;QAExE,OAAO,IAAI,CAAC9B,QAAQ;MACxB,CAAC,MAAM,IAAIsB,QAAQ,CAACC,EAAE,KAAK,KAAK,IAAID,QAAQ,CAACC,EAAE,KAAK,OAAO,EAAE;QACzD,OAAOhC,YAAY,CAACuC,iBAAiB,CAAChB,cAAc,CAACE,IAAI,CAAC;MAC9D,CAAC,MAAM;QACH,OAAOf,OAAO,CAACoB,MAAM,CAAC,IAAIN,SAAS,CAAC,uBAAuB,CAAC,CAAC;MACjE;IACJ;EAAA;AAAA;AAGJ,eAAe,IAAItB,WAAW,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}