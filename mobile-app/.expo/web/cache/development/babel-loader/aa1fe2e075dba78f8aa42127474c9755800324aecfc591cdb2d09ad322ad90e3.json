{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { Card, Title, Paragraph, Button, Avatar, List, Divider, IconButton, Surface } from 'react-native-paper';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport { useAuth } from \"../../context/AuthContext\";\nimport { ApiClient } from \"../../services/ApiClient\";\nimport { theme, spacing } from \"../../utils/theme\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar HomeScreen = function HomeScreen(_ref) {\n  var _user$firstName;\n  var navigation = _ref.navigation;\n  var _useAuth = useAuth(),\n    user = _useAuth.user;\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    dashboardData = _useState2[0],\n    setDashboardData = _useState2[1];\n  var _useState3 = useState(true),\n    _useState4 = _slicedToArray(_useState3, 2),\n    isLoading = _useState4[0],\n    setIsLoading = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    refreshing = _useState6[0],\n    setRefreshing = _useState6[1];\n  var fetchDashboardData = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        var response = yield ApiClient.get('/api/dashboard');\n        setDashboardData(response.data);\n      } catch (error) {\n        console.error('Error fetching dashboard data:', error);\n        Alert.alert('Error', 'Failed to load dashboard data');\n      } finally {\n        setIsLoading(false);\n        setRefreshing(false);\n      }\n    });\n    return function fetchDashboardData() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  useEffect(function () {\n    fetchDashboardData();\n  }, []);\n  var onRefresh = function onRefresh() {\n    setRefreshing(true);\n    fetchDashboardData();\n  };\n  var navigateToAppointments = function navigateToAppointments() {\n    navigation.navigate('Appointments');\n  };\n  var navigateToBookAppointment = function navigateToBookAppointment() {\n    navigation.navigate('Doctors');\n  };\n  var navigateToProfile = function navigateToProfile() {\n    navigation.navigate('Profile');\n  };\n  var renderQuickActions = function renderQuickActions() {\n    if ((user == null ? void 0 : user.role) === 'patient') {\n      return _jsx(Card, {\n        style: styles.card,\n        children: _jsxs(Card.Content, {\n          children: [_jsx(Title, {\n            style: styles.cardTitle,\n            children: \"Quick Actions\"\n          }), _jsxs(View, {\n            style: styles.actionRow,\n            children: [_jsx(Button, {\n              mode: \"contained\",\n              onPress: navigateToBookAppointment,\n              style: styles.actionButton,\n              icon: \"calendar-plus\",\n              children: \"Book Appointment\"\n            }), _jsx(Button, {\n              mode: \"outlined\",\n              onPress: navigateToAppointments,\n              style: styles.actionButton,\n              icon: \"calendar\",\n              children: \"View Appointments\"\n            })]\n          })]\n        })\n      });\n    } else if ((user == null ? void 0 : user.role) === 'doctor') {\n      return _jsx(Card, {\n        style: styles.card,\n        children: _jsxs(Card.Content, {\n          children: [_jsx(Title, {\n            style: styles.cardTitle,\n            children: \"Quick Actions\"\n          }), _jsxs(View, {\n            style: styles.actionRow,\n            children: [_jsx(Button, {\n              mode: \"contained\",\n              onPress: navigateToAppointments,\n              style: styles.actionButton,\n              icon: \"calendar\",\n              children: \"My Schedule\"\n            }), _jsx(Button, {\n              mode: \"outlined\",\n              onPress: function onPress() {\n                return navigation.navigate('Patients');\n              },\n              style: styles.actionButton,\n              icon: \"account-group\",\n              children: \"My Patients\"\n            })]\n          })]\n        })\n      });\n    }\n    return null;\n  };\n  var renderUpcomingAppointments = function renderUpcomingAppointments() {\n    var _dashboardData$upcomi;\n    if (!(dashboardData != null && (_dashboardData$upcomi = dashboardData.upcomingAppointments) != null && _dashboardData$upcomi.length)) return null;\n    return _jsx(Card, {\n      style: styles.card,\n      children: _jsxs(Card.Content, {\n        children: [_jsx(Title, {\n          style: styles.cardTitle,\n          children: \"Upcoming Appointments\"\n        }), dashboardData.upcomingAppointments.slice(0, 3).map(function (appointment, index) {\n          var _appointment$doctor, _appointment$doctor2, _appointment$patient, _appointment$patient2;\n          return _jsxs(View, {\n            children: [_jsx(List.Item, {\n              title: (user == null ? void 0 : user.role) === 'patient' ? `Dr. ${(_appointment$doctor = appointment.doctor) == null ? void 0 : _appointment$doctor.firstName} ${(_appointment$doctor2 = appointment.doctor) == null ? void 0 : _appointment$doctor2.lastName}` : `${(_appointment$patient = appointment.patient) == null ? void 0 : _appointment$patient.firstName} ${(_appointment$patient2 = appointment.patient) == null ? void 0 : _appointment$patient2.lastName}`,\n              description: `${appointment.date} at ${appointment.time}`,\n              left: function left() {\n                return _jsx(Avatar.Icon, {\n                  size: 40,\n                  icon: (user == null ? void 0 : user.role) === 'patient' ? 'doctor' : 'account'\n                });\n              },\n              right: function right() {\n                return _jsx(IconButton, {\n                  icon: \"chevron-right\",\n                  onPress: function onPress() {\n                    return navigation.navigate('Appointments', {\n                      appointmentId: appointment.id\n                    });\n                  }\n                });\n              }\n            }), index < dashboardData.upcomingAppointments.length - 1 && _jsx(Divider, {})]\n          }, appointment.id || index);\n        }), _jsx(Button, {\n          mode: \"text\",\n          onPress: navigateToAppointments,\n          style: styles.viewAllButton,\n          children: \"View All Appointments\"\n        })]\n      })\n    });\n  };\n  var renderStats = function renderStats() {\n    if (!(dashboardData != null && dashboardData.quickStats)) return null;\n    var stats = dashboardData.quickStats;\n    return _jsxs(View, {\n      style: styles.statsContainer,\n      children: [_jsxs(Surface, {\n        style: styles.statCard,\n        children: [_jsx(Title, {\n          style: styles.statNumber,\n          children: stats.totalAppointments\n        }), _jsx(Paragraph, {\n          style: styles.statLabel,\n          children: \"Total\"\n        })]\n      }), _jsxs(Surface, {\n        style: styles.statCard,\n        children: [_jsx(Title, {\n          style: styles.statNumber,\n          children: stats.completedAppointments\n        }), _jsx(Paragraph, {\n          style: styles.statLabel,\n          children: \"Completed\"\n        })]\n      }), _jsxs(Surface, {\n        style: styles.statCard,\n        children: [_jsx(Title, {\n          style: styles.statNumber,\n          children: stats.pendingAppointments\n        }), _jsx(Paragraph, {\n          style: styles.statLabel,\n          children: \"Pending\"\n        })]\n      })]\n    });\n  };\n  return _jsx(SafeAreaView, {\n    style: styles.container,\n    children: _jsxs(ScrollView, {\n      contentContainerStyle: styles.scrollContainer,\n      refreshControl: _jsx(RefreshControl, {\n        refreshing: refreshing,\n        onRefresh: onRefresh\n      }),\n      children: [_jsxs(View, {\n        style: styles.header,\n        children: [_jsxs(View, {\n          style: styles.welcomeContainer,\n          children: [_jsx(Avatar.Text, {\n            size: 60,\n            label: (user == null ? void 0 : (_user$firstName = user.firstName) == null ? void 0 : _user$firstName[0]) || 'U',\n            style: styles.avatar\n          }), _jsxs(View, {\n            style: styles.welcomeText,\n            children: [_jsxs(Title, {\n              style: styles.welcomeTitle,\n              children: [\"Welcome back, \", user == null ? void 0 : user.firstName, \"!\"]\n            }), _jsx(Paragraph, {\n              style: styles.welcomeSubtitle,\n              children: (user == null ? void 0 : user.role) === 'patient' ? 'How can we help you today?' : 'Ready to help your patients?'\n            })]\n          })]\n        }), _jsx(IconButton, {\n          icon: \"bell\",\n          onPress: function onPress() {\n            return navigation.navigate('Notifications');\n          },\n          style: styles.notificationButton\n        })]\n      }), renderStats(), renderQuickActions(), renderUpcomingAppointments()]\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: theme.colors.background\n  },\n  scrollContainer: {\n    padding: spacing.medium\n  },\n  header: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    marginBottom: spacing.large\n  },\n  welcomeContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    flex: 1\n  },\n  avatar: {\n    marginRight: spacing.medium\n  },\n  welcomeText: {\n    flex: 1\n  },\n  welcomeTitle: {\n    fontSize: 20,\n    fontWeight: 'bold'\n  },\n  welcomeSubtitle: {\n    color: theme.colors.onSurfaceVariant\n  },\n  notificationButton: {\n    margin: 0\n  },\n  statsContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginBottom: spacing.large\n  },\n  statCard: {\n    flex: 1,\n    alignItems: 'center',\n    padding: spacing.medium,\n    marginHorizontal: spacing.small,\n    borderRadius: 8,\n    elevation: 2\n  },\n  statNumber: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: theme.colors.primary\n  },\n  statLabel: {\n    fontSize: 12,\n    color: theme.colors.onSurfaceVariant\n  },\n  card: {\n    marginBottom: spacing.large,\n    elevation: 2\n  },\n  cardTitle: {\n    marginBottom: spacing.medium\n  },\n  actionRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  actionButton: {\n    flex: 1,\n    marginHorizontal: spacing.small\n  },\n  viewAllButton: {\n    marginTop: spacing.small\n  }\n});\nexport default HomeScreen;","map":{"version":3,"names":["React","useState","useEffect","View","StyleSheet","ScrollView","RefreshControl","Alert","Card","Title","Paragraph","Button","Avatar","List","Divider","IconButton","Surface","SafeAreaView","useAuth","ApiClient","theme","spacing","jsx","_jsx","jsxs","_jsxs","HomeScreen","_ref","_user$firstName","navigation","_useAuth","user","_useState","_useState2","_slicedToArray","dashboardData","setDashboardData","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","refreshing","setRefreshing","fetchDashboardData","_ref2","_asyncToGenerator","response","get","data","error","console","alert","apply","arguments","onRefresh","navigateToAppointments","navigate","navigateToBookAppointment","navigateToProfile","renderQuickActions","role","style","styles","card","children","Content","cardTitle","actionRow","mode","onPress","actionButton","icon","renderUpcomingAppointments","_dashboardData$upcomi","upcomingAppointments","length","slice","map","appointment","index","_appointment$doctor","_appointment$doctor2","_appointment$patient","_appointment$patient2","Item","title","doctor","firstName","lastName","patient","description","date","time","left","Icon","size","right","appointmentId","id","viewAllButton","renderStats","quickStats","stats","statsContainer","statCard","statNumber","totalAppointments","statLabel","completedAppointments","pendingAppointments","container","contentContainerStyle","scrollContainer","refreshControl","header","welcomeContainer","Text","label","avatar","welcomeText","welcomeTitle","welcomeSubtitle","notificationButton","create","flex","backgroundColor","colors","background","padding","medium","flexDirection","alignItems","justifyContent","marginBottom","large","marginRight","fontSize","fontWeight","color","onSurfaceVariant","margin","marginHorizontal","small","borderRadius","elevation","primary","marginTop"],"sources":["/workspaces/telemedicine-platform/mobile-app/src/screens/Home/HomeScreen.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  View,\n  StyleSheet,\n  ScrollView,\n  RefreshControl,\n  Alert,\n} from 'react-native';\nimport {\n  Card,\n  Title,\n  Paragraph,\n  Button,\n  Avatar,\n  List,\n  Divider,\n  IconButton,\n  Surface,\n} from 'react-native-paper';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport { useAuth } from '../../context/AuthContext';\nimport { ApiClient } from '../../services/ApiClient';\nimport { theme, spacing } from '../../utils/theme';\n\ninterface HomeScreenProps {\n  navigation: any;\n}\n\ninterface DashboardData {\n  upcomingAppointments: any[];\n  recentActivities: any[];\n  quickStats: {\n    totalAppointments: number;\n    completedAppointments: number;\n    pendingAppointments: number;\n  };\n}\n\nconst HomeScreen: React.FC<HomeScreenProps> = ({ navigation }) => {\n  const { user } = useAuth();\n  const [dashboardData, setDashboardData] = useState<DashboardData | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [refreshing, setRefreshing] = useState(false);\n\n  const fetchDashboardData = async () => {\n    try {\n      const response = await ApiClient.get('/api/dashboard');\n      setDashboardData(response.data);\n    } catch (error) {\n      console.error('Error fetching dashboard data:', error);\n      Alert.alert('Error', 'Failed to load dashboard data');\n    } finally {\n      setIsLoading(false);\n      setRefreshing(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchDashboardData();\n  }, []);\n\n  const onRefresh = () => {\n    setRefreshing(true);\n    fetchDashboardData();\n  };\n\n  const navigateToAppointments = () => {\n    navigation.navigate('Appointments');\n  };\n\n  const navigateToBookAppointment = () => {\n    navigation.navigate('Doctors');\n  };\n\n  const navigateToProfile = () => {\n    navigation.navigate('Profile');\n  };\n\n  const renderQuickActions = () => {\n    if (user?.role === 'patient') {\n      return (\n        <Card style={styles.card}>\n          <Card.Content>\n            <Title style={styles.cardTitle}>Quick Actions</Title>\n            <View style={styles.actionRow}>\n              <Button\n                mode=\"contained\"\n                onPress={navigateToBookAppointment}\n                style={styles.actionButton}\n                icon=\"calendar-plus\"\n              >\n                Book Appointment\n              </Button>\n              <Button\n                mode=\"outlined\"\n                onPress={navigateToAppointments}\n                style={styles.actionButton}\n                icon=\"calendar\"\n              >\n                View Appointments\n              </Button>\n            </View>\n          </Card.Content>\n        </Card>\n      );\n    } else if (user?.role === 'doctor') {\n      return (\n        <Card style={styles.card}>\n          <Card.Content>\n            <Title style={styles.cardTitle}>Quick Actions</Title>\n            <View style={styles.actionRow}>\n              <Button\n                mode=\"contained\"\n                onPress={navigateToAppointments}\n                style={styles.actionButton}\n                icon=\"calendar\"\n              >\n                My Schedule\n              </Button>\n              <Button\n                mode=\"outlined\"\n                onPress={() => navigation.navigate('Patients')}\n                style={styles.actionButton}\n                icon=\"account-group\"\n              >\n                My Patients\n              </Button>\n            </View>\n          </Card.Content>\n        </Card>\n      );\n    }\n    return null;\n  };\n\n  const renderUpcomingAppointments = () => {\n    if (!dashboardData?.upcomingAppointments?.length) return null;\n\n    return (\n      <Card style={styles.card}>\n        <Card.Content>\n          <Title style={styles.cardTitle}>Upcoming Appointments</Title>\n          {dashboardData.upcomingAppointments.slice(0, 3).map((appointment, index) => (\n            <View key={appointment.id || index}>\n              <List.Item\n                title={user?.role === 'patient' ? \n                  `Dr. ${appointment.doctor?.firstName} ${appointment.doctor?.lastName}` :\n                  `${appointment.patient?.firstName} ${appointment.patient?.lastName}`\n                }\n                description={`${appointment.date} at ${appointment.time}`}\n                left={() => (\n                  <Avatar.Icon \n                    size={40} \n                    icon={user?.role === 'patient' ? 'doctor' : 'account'} \n                  />\n                )}\n                right={() => (\n                  <IconButton\n                    icon=\"chevron-right\"\n                    onPress={() => navigation.navigate('Appointments', { appointmentId: appointment.id })}\n                  />\n                )}\n              />\n              {index < dashboardData.upcomingAppointments.length - 1 && <Divider />}\n            </View>\n          ))}\n          <Button\n            mode=\"text\"\n            onPress={navigateToAppointments}\n            style={styles.viewAllButton}\n          >\n            View All Appointments\n          </Button>\n        </Card.Content>\n      </Card>\n    );\n  };\n\n  const renderStats = () => {\n    if (!dashboardData?.quickStats) return null;\n\n    const stats = dashboardData.quickStats;\n    return (\n      <View style={styles.statsContainer}>\n        <Surface style={styles.statCard}>\n          <Title style={styles.statNumber}>{stats.totalAppointments}</Title>\n          <Paragraph style={styles.statLabel}>Total</Paragraph>\n        </Surface>\n        <Surface style={styles.statCard}>\n          <Title style={styles.statNumber}>{stats.completedAppointments}</Title>\n          <Paragraph style={styles.statLabel}>Completed</Paragraph>\n        </Surface>\n        <Surface style={styles.statCard}>\n          <Title style={styles.statNumber}>{stats.pendingAppointments}</Title>\n          <Paragraph style={styles.statLabel}>Pending</Paragraph>\n        </Surface>\n      </View>\n    );\n  };\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <ScrollView\n        contentContainerStyle={styles.scrollContainer}\n        refreshControl={\n          <RefreshControl refreshing={refreshing} onRefresh={onRefresh} />\n        }\n      >\n        <View style={styles.header}>\n          <View style={styles.welcomeContainer}>\n            <Avatar.Text\n              size={60}\n              label={user?.firstName?.[0] || 'U'}\n              style={styles.avatar}\n            />\n            <View style={styles.welcomeText}>\n              <Title style={styles.welcomeTitle}>\n                Welcome back, {user?.firstName}!\n              </Title>\n              <Paragraph style={styles.welcomeSubtitle}>\n                {user?.role === 'patient' ? 'How can we help you today?' : 'Ready to help your patients?'}\n              </Paragraph>\n            </View>\n          </View>\n          <IconButton\n            icon=\"bell\"\n            onPress={() => navigation.navigate('Notifications')}\n            style={styles.notificationButton}\n          />\n        </View>\n\n        {renderStats()}\n        {renderQuickActions()}\n        {renderUpcomingAppointments()}\n      </ScrollView>\n    </SafeAreaView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: theme.colors.background,\n  },\n  scrollContainer: {\n    padding: spacing.medium,\n  },\n  header: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    marginBottom: spacing.large,\n  },\n  welcomeContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    flex: 1,\n  },\n  avatar: {\n    marginRight: spacing.medium,\n  },\n  welcomeText: {\n    flex: 1,\n  },\n  welcomeTitle: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  welcomeSubtitle: {\n    color: theme.colors.onSurfaceVariant,\n  },\n  notificationButton: {\n    margin: 0,\n  },\n  statsContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginBottom: spacing.large,\n  },\n  statCard: {\n    flex: 1,\n    alignItems: 'center',\n    padding: spacing.medium,\n    marginHorizontal: spacing.small,\n    borderRadius: 8,\n    elevation: 2,\n  },\n  statNumber: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: theme.colors.primary,\n  },\n  statLabel: {\n    fontSize: 12,\n    color: theme.colors.onSurfaceVariant,\n  },\n  card: {\n    marginBottom: spacing.large,\n    elevation: 2,\n  },\n  cardTitle: {\n    marginBottom: spacing.medium,\n  },\n  actionRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n  actionButton: {\n    flex: 1,\n    marginHorizontal: spacing.small,\n  },\n  viewAllButton: {\n    marginTop: spacing.small,\n  },\n});\n\nexport default HomeScreen;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}