{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { Card, Title, Paragraph, Button, Avatar, Chip, FAB, SegmentedButtons, ActivityIndicator } from 'react-native-paper';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport { useAuth } from \"../../context/AuthContext\";\nimport { ApiClient } from \"../../services/ApiClient\";\nimport { theme, spacing } from \"../../utils/theme\";\nimport { format } from 'date-fns';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar AppointmentsScreen = function AppointmentsScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useAuth = useAuth(),\n    user = _useAuth.user;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    appointments = _useState2[0],\n    setAppointments = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    filteredAppointments = _useState4[0],\n    setFilteredAppointments = _useState4[1];\n  var _useState5 = useState(true),\n    _useState6 = _slicedToArray(_useState5, 2),\n    isLoading = _useState6[0],\n    setIsLoading = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    refreshing = _useState8[0],\n    setRefreshing = _useState8[1];\n  var _useState9 = useState('all'),\n    _useState0 = _slicedToArray(_useState9, 2),\n    filter = _useState0[0],\n    setFilter = _useState0[1];\n  var fetchAppointments = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        var response = yield ApiClient.get('/api/appointments');\n        setAppointments(response.data);\n        filterAppointments(response.data, filter);\n      } catch (error) {\n        console.error('Error fetching appointments:', error);\n        Alert.alert('Error', 'Failed to load appointments');\n      } finally {\n        setIsLoading(false);\n        setRefreshing(false);\n      }\n    });\n    return function fetchAppointments() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var filterAppointments = function filterAppointments(appointmentList, currentFilter) {\n    var filtered = appointmentList;\n    switch (currentFilter) {\n      case 'upcoming':\n        filtered = appointmentList.filter(function (apt) {\n          return apt.status === 'scheduled' && new Date(apt.date) >= new Date();\n        });\n        break;\n      case 'completed':\n        filtered = appointmentList.filter(function (apt) {\n          return apt.status === 'completed';\n        });\n        break;\n      case 'cancelled':\n        filtered = appointmentList.filter(function (apt) {\n          return apt.status === 'cancelled';\n        });\n        break;\n      default:\n        filtered = appointmentList;\n    }\n    setFilteredAppointments(filtered);\n  };\n  useEffect(function () {\n    fetchAppointments();\n  }, []);\n  useEffect(function () {\n    filterAppointments(appointments, filter);\n  }, [filter, appointments]);\n  var onRefresh = function onRefresh() {\n    setRefreshing(true);\n    fetchAppointments();\n  };\n  var handleFilterChange = function handleFilterChange(value) {\n    setFilter(value);\n  };\n  var getStatusColor = function getStatusColor(status) {\n    switch (status) {\n      case 'scheduled':\n        return theme.colors.primary;\n      case 'completed':\n        return '#4CAF50';\n      case 'cancelled':\n        return '#f44336';\n      case 'pending':\n        return '#FF9800';\n      default:\n        return theme.colors.onSurfaceVariant;\n    }\n  };\n  var getStatusText = function getStatusText(status) {\n    switch (status) {\n      case 'scheduled':\n        return 'Scheduled';\n      case 'completed':\n        return 'Completed';\n      case 'cancelled':\n        return 'Cancelled';\n      case 'pending':\n        return 'Pending';\n      default:\n        return status;\n    }\n  };\n  var handleAppointmentPress = function handleAppointmentPress(appointment) {\n    navigation.navigate('AppointmentDetails', {\n      appointment: appointment\n    });\n  };\n  var handleVideoCall = function handleVideoCall(appointment) {\n    if (appointment.meetingLink) {\n      navigation.navigate('VideoCall', {\n        meetingLink: appointment.meetingLink,\n        appointmentId: appointment.id\n      });\n    } else {\n      Alert.alert('Error', 'No meeting link available for this appointment');\n    }\n  };\n  var cancelAppointment = function () {\n    var _ref3 = _asyncToGenerator(function* (appointmentId) {\n      Alert.alert('Cancel Appointment', 'Are you sure you want to cancel this appointment?', [{\n        text: 'No',\n        style: 'cancel'\n      }, {\n        text: 'Yes',\n        onPress: function () {\n          var _onPress = _asyncToGenerator(function* () {\n            try {\n              yield ApiClient.put(`/api/appointments/${appointmentId}/cancel`);\n              fetchAppointments();\n              Alert.alert('Success', 'Appointment cancelled successfully');\n            } catch (error) {\n              Alert.alert('Error', 'Failed to cancel appointment');\n            }\n          });\n          function onPress() {\n            return _onPress.apply(this, arguments);\n          }\n          return onPress;\n        }()\n      }]);\n    });\n    return function cancelAppointment(_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var renderAppointmentCard = function renderAppointmentCard(appointment) {\n    var _otherPerson$firstNam, _appointment$doctor;\n    var isPatient = (user == null ? void 0 : user.role) === 'patient';\n    var otherPerson = isPatient ? appointment.doctor : appointment.patient;\n    var canStartCall = appointment.status === 'scheduled' && new Date(appointment.date) <= new Date();\n    return _jsx(Card, {\n      style: styles.appointmentCard,\n      children: _jsxs(Card.Content, {\n        children: [_jsxs(View, {\n          style: styles.appointmentHeader,\n          children: [_jsxs(View, {\n            style: styles.personInfo,\n            children: [_jsx(Avatar.Text, {\n              size: 40,\n              label: (otherPerson == null ? void 0 : (_otherPerson$firstNam = otherPerson.firstName) == null ? void 0 : _otherPerson$firstNam[0]) || 'U',\n              style: styles.avatar\n            }), _jsxs(View, {\n              style: styles.personDetails,\n              children: [_jsxs(Title, {\n                style: styles.personName,\n                children: [isPatient ? 'Dr. ' : '', otherPerson == null ? void 0 : otherPerson.firstName, \" \", otherPerson == null ? void 0 : otherPerson.lastName]\n              }), isPatient && ((_appointment$doctor = appointment.doctor) == null ? void 0 : _appointment$doctor.specialization) && _jsx(Paragraph, {\n                style: styles.specialization,\n                children: appointment.doctor.specialization\n              })]\n            })]\n          }), _jsx(Chip, {\n            style: [styles.statusChip, {\n              backgroundColor: getStatusColor(appointment.status)\n            }],\n            textStyle: styles.statusText,\n            children: getStatusText(appointment.status)\n          })]\n        }), _jsxs(View, {\n          style: styles.appointmentInfo,\n          children: [_jsxs(Paragraph, {\n            style: styles.dateTime,\n            children: [format(new Date(appointment.date), 'MMM dd, yyyy'), \" at \", appointment.time]\n          }), _jsxs(Paragraph, {\n            style: styles.type,\n            children: [\"Type: \", appointment.type]\n          }), appointment.notes && _jsxs(Paragraph, {\n            style: styles.notes,\n            children: [\"Notes: \", appointment.notes]\n          })]\n        }), _jsxs(View, {\n          style: styles.actionButtons,\n          children: [canStartCall && _jsx(Button, {\n            mode: \"contained\",\n            onPress: function onPress() {\n              return handleVideoCall(appointment);\n            },\n            style: styles.actionButton,\n            icon: \"video\",\n            children: \"Start Call\"\n          }), appointment.status === 'scheduled' && _jsx(Button, {\n            mode: \"outlined\",\n            onPress: function onPress() {\n              return cancelAppointment(appointment.id);\n            },\n            style: styles.actionButton,\n            icon: \"cancel\",\n            children: \"Cancel\"\n          }), _jsx(Button, {\n            mode: \"text\",\n            onPress: function onPress() {\n              return handleAppointmentPress(appointment);\n            },\n            style: styles.actionButton,\n            icon: \"information\",\n            children: \"Details\"\n          })]\n        })]\n      })\n    }, appointment.id);\n  };\n  if (isLoading) {\n    return _jsxs(SafeAreaView, {\n      style: styles.loadingContainer,\n      children: [_jsx(ActivityIndicator, {\n        size: \"large\",\n        color: theme.colors.primary\n      }), _jsx(Title, {\n        style: styles.loadingText,\n        children: \"Loading appointments...\"\n      })]\n    });\n  }\n  return _jsxs(SafeAreaView, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: styles.header,\n      children: [_jsx(Title, {\n        style: styles.title,\n        children: \"My Appointments\"\n      }), _jsx(SegmentedButtons, {\n        value: filter,\n        onValueChange: handleFilterChange,\n        buttons: [{\n          value: 'all',\n          label: 'All'\n        }, {\n          value: 'upcoming',\n          label: 'Upcoming'\n        }, {\n          value: 'completed',\n          label: 'Completed'\n        }, {\n          value: 'cancelled',\n          label: 'Cancelled'\n        }],\n        style: styles.filterButtons\n      })]\n    }), _jsx(ScrollView, {\n      contentContainerStyle: styles.scrollContainer,\n      refreshControl: _jsx(RefreshControl, {\n        refreshing: refreshing,\n        onRefresh: onRefresh\n      }),\n      children: filteredAppointments.length === 0 ? _jsxs(View, {\n        style: styles.emptyState,\n        children: [_jsx(Avatar.Icon, {\n          size: 80,\n          icon: \"calendar-blank\"\n        }), _jsx(Title, {\n          style: styles.emptyTitle,\n          children: \"No appointments found\"\n        }), _jsx(Paragraph, {\n          style: styles.emptyMessage,\n          children: filter === 'all' ? 'You have no appointments scheduled.' : `You have no ${filter} appointments.`\n        }), (user == null ? void 0 : user.role) === 'patient' && _jsx(Button, {\n          mode: \"contained\",\n          onPress: function onPress() {\n            return navigation.navigate('Doctors');\n          },\n          style: styles.bookButton,\n          icon: \"calendar-plus\",\n          children: \"Book New Appointment\"\n        })]\n      }) : filteredAppointments.map(renderAppointmentCard)\n    }), (user == null ? void 0 : user.role) === 'patient' && _jsx(FAB, {\n      icon: \"plus\",\n      style: styles.fab,\n      onPress: function onPress() {\n        return navigation.navigate('Doctors');\n      }\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: theme.colors.background\n  },\n  loadingContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: theme.colors.background\n  },\n  loadingText: {\n    marginTop: spacing.medium\n  },\n  header: {\n    padding: spacing.medium,\n    backgroundColor: theme.colors.surface,\n    elevation: 2\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: spacing.medium\n  },\n  filterButtons: {\n    marginBottom: spacing.small\n  },\n  scrollContainer: {\n    padding: spacing.medium\n  },\n  appointmentCard: {\n    marginBottom: spacing.medium,\n    elevation: 2\n  },\n  appointmentHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: spacing.medium\n  },\n  personInfo: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    flex: 1\n  },\n  avatar: {\n    marginRight: spacing.medium\n  },\n  personDetails: {\n    flex: 1\n  },\n  personName: {\n    fontSize: 16,\n    fontWeight: 'bold'\n  },\n  specialization: {\n    color: theme.colors.onSurfaceVariant,\n    fontSize: 12\n  },\n  statusChip: {\n    alignSelf: 'flex-start'\n  },\n  statusText: {\n    color: '#fff',\n    fontSize: 12\n  },\n  appointmentInfo: {\n    marginBottom: spacing.medium\n  },\n  dateTime: {\n    fontSize: 14,\n    fontWeight: '500',\n    marginBottom: spacing.small\n  },\n  type: {\n    fontSize: 12,\n    color: theme.colors.onSurfaceVariant,\n    marginBottom: spacing.small\n  },\n  notes: {\n    fontSize: 12,\n    color: theme.colors.onSurfaceVariant\n  },\n  actionButtons: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    flexWrap: 'wrap'\n  },\n  actionButton: {\n    marginHorizontal: spacing.small,\n    marginVertical: spacing.small\n  },\n  emptyState: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: spacing.xlarge,\n    minHeight: 400\n  },\n  emptyTitle: {\n    marginTop: spacing.medium,\n    marginBottom: spacing.small\n  },\n  emptyMessage: {\n    textAlign: 'center',\n    color: theme.colors.onSurfaceVariant,\n    marginBottom: spacing.large\n  },\n  bookButton: {\n    marginTop: spacing.medium\n  },\n  fab: {\n    position: 'absolute',\n    right: 16,\n    bottom: 16,\n    backgroundColor: theme.colors.primary\n  }\n});\nexport default AppointmentsScreen;","map":{"version":3,"names":["React","useState","useEffect","View","StyleSheet","ScrollView","RefreshControl","Alert","Card","Title","Paragraph","Button","Avatar","Chip","FAB","SegmentedButtons","ActivityIndicator","SafeAreaView","useAuth","ApiClient","theme","spacing","format","jsx","_jsx","jsxs","_jsxs","AppointmentsScreen","_ref","navigation","_useAuth","user","_useState","_useState2","_slicedToArray","appointments","setAppointments","_useState3","_useState4","filteredAppointments","setFilteredAppointments","_useState5","_useState6","isLoading","setIsLoading","_useState7","_useState8","refreshing","setRefreshing","_useState9","_useState0","filter","setFilter","fetchAppointments","_ref2","_asyncToGenerator","response","get","data","filterAppointments","error","console","alert","apply","arguments","appointmentList","currentFilter","filtered","apt","status","Date","date","onRefresh","handleFilterChange","value","getStatusColor","colors","primary","onSurfaceVariant","getStatusText","handleAppointmentPress","appointment","navigate","handleVideoCall","meetingLink","appointmentId","id","cancelAppointment","_ref3","text","style","onPress","_onPress","put","_x","renderAppointmentCard","_otherPerson$firstNam","_appointment$doctor","isPatient","role","otherPerson","doctor","patient","canStartCall","styles","appointmentCard","children","Content","appointmentHeader","personInfo","Text","size","label","firstName","avatar","personDetails","personName","lastName","specialization","statusChip","backgroundColor","textStyle","statusText","appointmentInfo","dateTime","time","type","notes","actionButtons","mode","actionButton","icon","loadingContainer","color","loadingText","container","header","title","onValueChange","buttons","filterButtons","contentContainerStyle","scrollContainer","refreshControl","length","emptyState","Icon","emptyTitle","emptyMessage","bookButton","map","fab","create","flex","background","justifyContent","alignItems","marginTop","medium","padding","surface","elevation","fontSize","fontWeight","marginBottom","small","flexDirection","marginRight","alignSelf","flexWrap","marginHorizontal","marginVertical","xlarge","minHeight","textAlign","large","position","right","bottom"],"sources":["/workspaces/telemedicine-platform/mobile-app/src/screens/Appointments/AppointmentsScreen.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  View,\n  StyleSheet,\n  ScrollView,\n  RefreshControl,\n  Alert,\n} from 'react-native';\nimport {\n  Card,\n  Title,\n  Paragraph,\n  Button,\n  Avatar,\n  List,\n  Divider,\n  Chip,\n  FAB,\n  SegmentedButtons,\n  ActivityIndicator,\n} from 'react-native-paper';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport { useAuth } from '../../context/AuthContext';\nimport { ApiClient } from '../../services/ApiClient';\nimport { theme, spacing } from '../../utils/theme';\nimport { format } from 'date-fns';\n\ninterface AppointmentsScreenProps {\n  navigation: any;\n}\n\ninterface Appointment {\n  id: string;\n  date: string;\n  time: string;\n  status: 'scheduled' | 'completed' | 'cancelled' | 'pending';\n  type: 'consultation' | 'follow-up' | 'emergency';\n  patient?: {\n    id: string;\n    firstName: string;\n    lastName: string;\n    email: string;\n  };\n  doctor?: {\n    id: string;\n    firstName: string;\n    lastName: string;\n    specialization: string;\n  };\n  notes?: string;\n  meetingLink?: string;\n}\n\nconst AppointmentsScreen: React.FC<AppointmentsScreenProps> = ({ navigation }) => {\n  const { user } = useAuth();\n  const [appointments, setAppointments] = useState<Appointment[]>([]);\n  const [filteredAppointments, setFilteredAppointments] = useState<Appointment[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [refreshing, setRefreshing] = useState(false);\n  const [filter, setFilter] = useState('all');\n\n  const fetchAppointments = async () => {\n    try {\n      const response = await ApiClient.get('/api/appointments');\n      setAppointments(response.data);\n      filterAppointments(response.data, filter);\n    } catch (error) {\n      console.error('Error fetching appointments:', error);\n      Alert.alert('Error', 'Failed to load appointments');\n    } finally {\n      setIsLoading(false);\n      setRefreshing(false);\n    }\n  };\n\n  const filterAppointments = (appointmentList: Appointment[], currentFilter: string) => {\n    let filtered = appointmentList;\n    \n    switch (currentFilter) {\n      case 'upcoming':\n        filtered = appointmentList.filter(\n          (apt) => apt.status === 'scheduled' && new Date(apt.date) >= new Date()\n        );\n        break;\n      case 'completed':\n        filtered = appointmentList.filter((apt) => apt.status === 'completed');\n        break;\n      case 'cancelled':\n        filtered = appointmentList.filter((apt) => apt.status === 'cancelled');\n        break;\n      default:\n        filtered = appointmentList;\n    }\n    \n    setFilteredAppointments(filtered);\n  };\n\n  useEffect(() => {\n    fetchAppointments();\n  }, []);\n\n  useEffect(() => {\n    filterAppointments(appointments, filter);\n  }, [filter, appointments]);\n\n  const onRefresh = () => {\n    setRefreshing(true);\n    fetchAppointments();\n  };\n\n  const handleFilterChange = (value: string) => {\n    setFilter(value);\n  };\n\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case 'scheduled':\n        return theme.colors.primary;\n      case 'completed':\n        return '#4CAF50';\n      case 'cancelled':\n        return '#f44336';\n      case 'pending':\n        return '#FF9800';\n      default:\n        return theme.colors.onSurfaceVariant;\n    }\n  };\n\n  const getStatusText = (status: string) => {\n    switch (status) {\n      case 'scheduled':\n        return 'Scheduled';\n      case 'completed':\n        return 'Completed';\n      case 'cancelled':\n        return 'Cancelled';\n      case 'pending':\n        return 'Pending';\n      default:\n        return status;\n    }\n  };\n\n  const handleAppointmentPress = (appointment: Appointment) => {\n    navigation.navigate('AppointmentDetails', { appointment });\n  };\n\n  const handleVideoCall = (appointment: Appointment) => {\n    if (appointment.meetingLink) {\n      navigation.navigate('VideoCall', { \n        meetingLink: appointment.meetingLink,\n        appointmentId: appointment.id \n      });\n    } else {\n      Alert.alert('Error', 'No meeting link available for this appointment');\n    }\n  };\n\n  const cancelAppointment = async (appointmentId: string) => {\n    Alert.alert(\n      'Cancel Appointment',\n      'Are you sure you want to cancel this appointment?',\n      [\n        { text: 'No', style: 'cancel' },\n        {\n          text: 'Yes',\n          onPress: async () => {\n            try {\n              await ApiClient.put(`/api/appointments/${appointmentId}/cancel`);\n              fetchAppointments();\n              Alert.alert('Success', 'Appointment cancelled successfully');\n            } catch (error) {\n              Alert.alert('Error', 'Failed to cancel appointment');\n            }\n          },\n        },\n      ]\n    );\n  };\n\n  const renderAppointmentCard = (appointment: Appointment) => {\n    const isPatient = user?.role === 'patient';\n    const otherPerson = isPatient ? appointment.doctor : appointment.patient;\n    const canStartCall = appointment.status === 'scheduled' && \n                         new Date(appointment.date) <= new Date();\n\n    return (\n      <Card key={appointment.id} style={styles.appointmentCard}>\n        <Card.Content>\n          <View style={styles.appointmentHeader}>\n            <View style={styles.personInfo}>\n              <Avatar.Text\n                size={40}\n                label={otherPerson?.firstName?.[0] || 'U'}\n                style={styles.avatar}\n              />\n              <View style={styles.personDetails}>\n                <Title style={styles.personName}>\n                  {isPatient ? 'Dr. ' : ''}\n                  {otherPerson?.firstName} {otherPerson?.lastName}\n                </Title>\n                {isPatient && appointment.doctor?.specialization && (\n                  <Paragraph style={styles.specialization}>\n                    {appointment.doctor.specialization}\n                  </Paragraph>\n                )}\n              </View>\n            </View>\n            <Chip\n              style={[styles.statusChip, { backgroundColor: getStatusColor(appointment.status) }]}\n              textStyle={styles.statusText}\n            >\n              {getStatusText(appointment.status)}\n            </Chip>\n          </View>\n\n          <View style={styles.appointmentInfo}>\n            <Paragraph style={styles.dateTime}>\n              {format(new Date(appointment.date), 'MMM dd, yyyy')} at {appointment.time}\n            </Paragraph>\n            <Paragraph style={styles.type}>\n              Type: {appointment.type}\n            </Paragraph>\n            {appointment.notes && (\n              <Paragraph style={styles.notes}>\n                Notes: {appointment.notes}\n              </Paragraph>\n            )}\n          </View>\n\n          <View style={styles.actionButtons}>\n            {canStartCall && (\n              <Button\n                mode=\"contained\"\n                onPress={() => handleVideoCall(appointment)}\n                style={styles.actionButton}\n                icon=\"video\"\n              >\n                Start Call\n              </Button>\n            )}\n            {appointment.status === 'scheduled' && (\n              <Button\n                mode=\"outlined\"\n                onPress={() => cancelAppointment(appointment.id)}\n                style={styles.actionButton}\n                icon=\"cancel\"\n              >\n                Cancel\n              </Button>\n            )}\n            <Button\n              mode=\"text\"\n              onPress={() => handleAppointmentPress(appointment)}\n              style={styles.actionButton}\n              icon=\"information\"\n            >\n              Details\n            </Button>\n          </View>\n        </Card.Content>\n      </Card>\n    );\n  };\n\n  if (isLoading) {\n    return (\n      <SafeAreaView style={styles.loadingContainer}>\n        <ActivityIndicator size=\"large\" color={theme.colors.primary} />\n        <Title style={styles.loadingText}>Loading appointments...</Title>\n      </SafeAreaView>\n    );\n  }\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <View style={styles.header}>\n        <Title style={styles.title}>My Appointments</Title>\n        <SegmentedButtons\n          value={filter}\n          onValueChange={handleFilterChange}\n          buttons={[\n            { value: 'all', label: 'All' },\n            { value: 'upcoming', label: 'Upcoming' },\n            { value: 'completed', label: 'Completed' },\n            { value: 'cancelled', label: 'Cancelled' },\n          ]}\n          style={styles.filterButtons}\n        />\n      </View>\n\n      <ScrollView\n        contentContainerStyle={styles.scrollContainer}\n        refreshControl={\n          <RefreshControl refreshing={refreshing} onRefresh={onRefresh} />\n        }\n      >\n        {filteredAppointments.length === 0 ? (\n          <View style={styles.emptyState}>\n            <Avatar.Icon size={80} icon=\"calendar-blank\" />\n            <Title style={styles.emptyTitle}>No appointments found</Title>\n            <Paragraph style={styles.emptyMessage}>\n              {filter === 'all' \n                ? 'You have no appointments scheduled.'\n                : `You have no ${filter} appointments.`}\n            </Paragraph>\n            {user?.role === 'patient' && (\n              <Button\n                mode=\"contained\"\n                onPress={() => navigation.navigate('Doctors')}\n                style={styles.bookButton}\n                icon=\"calendar-plus\"\n              >\n                Book New Appointment\n              </Button>\n            )}\n          </View>\n        ) : (\n          filteredAppointments.map(renderAppointmentCard)\n        )}\n      </ScrollView>\n\n      {user?.role === 'patient' && (\n        <FAB\n          icon=\"plus\"\n          style={styles.fab}\n          onPress={() => navigation.navigate('Doctors')}\n        />\n      )}\n    </SafeAreaView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: theme.colors.background,\n  },\n  loadingContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: theme.colors.background,\n  },\n  loadingText: {\n    marginTop: spacing.medium,\n  },\n  header: {\n    padding: spacing.medium,\n    backgroundColor: theme.colors.surface,\n    elevation: 2,\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: spacing.medium,\n  },\n  filterButtons: {\n    marginBottom: spacing.small,\n  },\n  scrollContainer: {\n    padding: spacing.medium,\n  },\n  appointmentCard: {\n    marginBottom: spacing.medium,\n    elevation: 2,\n  },\n  appointmentHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: spacing.medium,\n  },\n  personInfo: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    flex: 1,\n  },\n  avatar: {\n    marginRight: spacing.medium,\n  },\n  personDetails: {\n    flex: 1,\n  },\n  personName: {\n    fontSize: 16,\n    fontWeight: 'bold',\n  },\n  specialization: {\n    color: theme.colors.onSurfaceVariant,\n    fontSize: 12,\n  },\n  statusChip: {\n    alignSelf: 'flex-start',\n  },\n  statusText: {\n    color: '#fff',\n    fontSize: 12,\n  },\n  appointmentInfo: {\n    marginBottom: spacing.medium,\n  },\n  dateTime: {\n    fontSize: 14,\n    fontWeight: '500',\n    marginBottom: spacing.small,\n  },\n  type: {\n    fontSize: 12,\n    color: theme.colors.onSurfaceVariant,\n    marginBottom: spacing.small,\n  },\n  notes: {\n    fontSize: 12,\n    color: theme.colors.onSurfaceVariant,\n  },\n  actionButtons: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    flexWrap: 'wrap',\n  },\n  actionButton: {\n    marginHorizontal: spacing.small,\n    marginVertical: spacing.small,\n  },\n  emptyState: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: spacing.xlarge,\n    minHeight: 400,\n  },\n  emptyTitle: {\n    marginTop: spacing.medium,\n    marginBottom: spacing.small,\n  },\n  emptyMessage: {\n    textAlign: 'center',\n    color: theme.colors.onSurfaceVariant,\n    marginBottom: spacing.large,\n  },\n  bookButton: {\n    marginTop: spacing.medium,\n  },\n  fab: {\n    position: 'absolute',\n    right: 16,\n    bottom: 16,\n    backgroundColor: theme.colors.primary,\n  },\n});\n\nexport default AppointmentsScreen;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}