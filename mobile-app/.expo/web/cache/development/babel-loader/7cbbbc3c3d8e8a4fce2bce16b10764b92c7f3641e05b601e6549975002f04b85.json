{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _set from \"@babel/runtime/helpers/set\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _wrapNativeSuper from \"@babel/runtime/helpers/wrapNativeSuper\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nfunction _superPropSet(t, e, o, r, p, f) { return _set(_getPrototypeOf(f ? t.prototype : t), e, o, r, p); }\nfunction _superPropGet(t, o, e, r) { var p = _get(_getPrototypeOf(1 & r ? t.prototype : t), o, e); return 2 & r && \"function\" == typeof p ? function (t) { return p.apply(e, t); } : p; }\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction assertType(condition, message) {\n  if (!condition) {\n    for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n      args[_key - 2] = arguments[_key];\n    }\n    throw new TypeError(format(message, args));\n  }\n}\nfunction format(message, args) {\n  var i = 0;\n  return message.replace(/%[os]/g, function () {\n    return anyToString(args[i++]);\n  });\n}\nfunction anyToString(x) {\n  if (typeof x !== \"object\" || x === null) {\n    return String(x);\n  }\n  return Object.prototype.toString.call(x);\n}\nvar currentErrorHandler;\nfunction setErrorHandler(value) {\n  assertType(typeof value === \"function\" || value === undefined, \"The error handler must be a function or undefined, but got %o.\", value);\n  currentErrorHandler = value;\n}\nfunction reportError(maybeError) {\n  try {\n    var error = maybeError instanceof Error ? maybeError : new Error(anyToString(maybeError));\n    if (currentErrorHandler) {\n      currentErrorHandler(error);\n      return;\n    }\n    if (typeof dispatchEvent === \"function\" && typeof ErrorEvent === \"function\") {\n      dispatchEvent(new ErrorEvent(\"error\", {\n        error: error,\n        message: error.message\n      }));\n    } else if (typeof process !== \"undefined\" && typeof process.emit === \"function\") {\n      process.emit(\"uncaughtException\", error);\n      return;\n    }\n    console.error(error);\n  } catch (_a) {}\n}\nvar Global = typeof window !== \"undefined\" ? window : typeof self !== \"undefined\" ? self : typeof global !== \"undefined\" ? global : typeof globalThis !== \"undefined\" ? globalThis : undefined;\nvar currentWarnHandler;\nfunction setWarningHandler(value) {\n  assertType(typeof value === \"function\" || value === undefined, \"The warning handler must be a function or undefined, but got %o.\", value);\n  currentWarnHandler = value;\n}\nvar Warning = function () {\n  function Warning(code, message) {\n    _classCallCheck(this, Warning);\n    this.code = code;\n    this.message = message;\n  }\n  return _createClass(Warning, [{\n    key: \"warn\",\n    value: function warn() {\n      var _a;\n      try {\n        var _console;\n        for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n          args[_key2] = arguments[_key2];\n        }\n        if (currentWarnHandler) {\n          currentWarnHandler(_objectSpread(_objectSpread({}, this), {}, {\n            args: args\n          }));\n          return;\n        }\n        var stack = ((_a = new Error().stack) !== null && _a !== void 0 ? _a : \"\").replace(/^(?:(?:[\\0-\\t\\x0B\\f\\x0E-\\u2027\\u202A-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])+?\\n){2}/g, \"\\n\");\n        (_console = console).warn.apply(_console, [this.message].concat(args, [stack]));\n      } catch (_b) {}\n    }\n  }]);\n}();\nvar InitEventWasCalledWhileDispatching = new Warning(\"W01\", \"Unable to initialize event under dispatching.\");\nvar FalsyWasAssignedToCancelBubble = new Warning(\"W02\", \"Assigning any falsy value to 'cancelBubble' property has no effect.\");\nvar TruthyWasAssignedToReturnValue = new Warning(\"W03\", \"Assigning any truthy value to 'returnValue' property has no effect.\");\nvar NonCancelableEventWasCanceled = new Warning(\"W04\", \"Unable to preventDefault on non-cancelable events.\");\nvar CanceledInPassiveListener = new Warning(\"W05\", \"Unable to preventDefault inside passive event listener invocation.\");\nvar EventListenerWasDuplicated = new Warning(\"W06\", \"An event listener wasn't added because it has been added already: %o, %o\");\nvar OptionWasIgnored = new Warning(\"W07\", \"The %o option value was abandoned because the event listener wasn't added as duplicated.\");\nvar InvalidEventListener = new Warning(\"W08\", \"The 'callback' argument must be a function or an object that has 'handleEvent' method: %o\");\nvar InvalidAttributeHandler = new Warning(\"W09\", \"Event attribute handler must be a function: %o\");\nvar Event = function () {\n  function Event(type, eventInitDict) {\n    _classCallCheck(this, Event);\n    Object.defineProperty(this, \"isTrusted\", {\n      value: false,\n      enumerable: true\n    });\n    var opts = eventInitDict !== null && eventInitDict !== void 0 ? eventInitDict : {};\n    internalDataMap.set(this, {\n      type: String(type),\n      bubbles: Boolean(opts.bubbles),\n      cancelable: Boolean(opts.cancelable),\n      composed: Boolean(opts.composed),\n      target: null,\n      currentTarget: null,\n      stopPropagationFlag: false,\n      stopImmediatePropagationFlag: false,\n      canceledFlag: false,\n      inPassiveListenerFlag: false,\n      dispatchFlag: false,\n      timeStamp: Date.now()\n    });\n  }\n  return _createClass(Event, [{\n    key: \"type\",\n    get: function get() {\n      return $(this).type;\n    }\n  }, {\n    key: \"target\",\n    get: function get() {\n      return $(this).target;\n    }\n  }, {\n    key: \"srcElement\",\n    get: function get() {\n      return $(this).target;\n    }\n  }, {\n    key: \"currentTarget\",\n    get: function get() {\n      return $(this).currentTarget;\n    }\n  }, {\n    key: \"composedPath\",\n    value: function composedPath() {\n      var currentTarget = $(this).currentTarget;\n      if (currentTarget) {\n        return [currentTarget];\n      }\n      return [];\n    }\n  }, {\n    key: \"NONE\",\n    get: function get() {\n      return NONE;\n    }\n  }, {\n    key: \"CAPTURING_PHASE\",\n    get: function get() {\n      return CAPTURING_PHASE;\n    }\n  }, {\n    key: \"AT_TARGET\",\n    get: function get() {\n      return AT_TARGET;\n    }\n  }, {\n    key: \"BUBBLING_PHASE\",\n    get: function get() {\n      return BUBBLING_PHASE;\n    }\n  }, {\n    key: \"eventPhase\",\n    get: function get() {\n      return $(this).dispatchFlag ? 2 : 0;\n    }\n  }, {\n    key: \"stopPropagation\",\n    value: function stopPropagation() {\n      $(this).stopPropagationFlag = true;\n    }\n  }, {\n    key: \"cancelBubble\",\n    get: function get() {\n      return $(this).stopPropagationFlag;\n    },\n    set: function set(value) {\n      if (value) {\n        $(this).stopPropagationFlag = true;\n      } else {\n        FalsyWasAssignedToCancelBubble.warn();\n      }\n    }\n  }, {\n    key: \"stopImmediatePropagation\",\n    value: function stopImmediatePropagation() {\n      var data = $(this);\n      data.stopPropagationFlag = data.stopImmediatePropagationFlag = true;\n    }\n  }, {\n    key: \"bubbles\",\n    get: function get() {\n      return $(this).bubbles;\n    }\n  }, {\n    key: \"cancelable\",\n    get: function get() {\n      return $(this).cancelable;\n    }\n  }, {\n    key: \"returnValue\",\n    get: function get() {\n      return !$(this).canceledFlag;\n    },\n    set: function set(value) {\n      if (!value) {\n        setCancelFlag($(this));\n      } else {\n        TruthyWasAssignedToReturnValue.warn();\n      }\n    }\n  }, {\n    key: \"preventDefault\",\n    value: function preventDefault() {\n      setCancelFlag($(this));\n    }\n  }, {\n    key: \"defaultPrevented\",\n    get: function get() {\n      return $(this).canceledFlag;\n    }\n  }, {\n    key: \"composed\",\n    get: function get() {\n      return $(this).composed;\n    }\n  }, {\n    key: \"isTrusted\",\n    get: function get() {\n      return false;\n    }\n  }, {\n    key: \"timeStamp\",\n    get: function get() {\n      return $(this).timeStamp;\n    }\n  }, {\n    key: \"initEvent\",\n    value: function initEvent(type) {\n      var bubbles = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var cancelable = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      var data = $(this);\n      if (data.dispatchFlag) {\n        InitEventWasCalledWhileDispatching.warn();\n        return;\n      }\n      internalDataMap.set(this, _objectSpread(_objectSpread({}, data), {}, {\n        type: String(type),\n        bubbles: Boolean(bubbles),\n        cancelable: Boolean(cancelable),\n        target: null,\n        currentTarget: null,\n        stopPropagationFlag: false,\n        stopImmediatePropagationFlag: false,\n        canceledFlag: false\n      }));\n    }\n  }], [{\n    key: \"NONE\",\n    get: function get() {\n      return NONE;\n    }\n  }, {\n    key: \"CAPTURING_PHASE\",\n    get: function get() {\n      return CAPTURING_PHASE;\n    }\n  }, {\n    key: \"AT_TARGET\",\n    get: function get() {\n      return AT_TARGET;\n    }\n  }, {\n    key: \"BUBBLING_PHASE\",\n    get: function get() {\n      return BUBBLING_PHASE;\n    }\n  }]);\n}();\nvar NONE = 0;\nvar CAPTURING_PHASE = 1;\nvar AT_TARGET = 2;\nvar BUBBLING_PHASE = 3;\nvar internalDataMap = new WeakMap();\nfunction $(event) {\n  var name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"this\";\n  var retv = internalDataMap.get(event);\n  assertType(retv != null, \"'%s' must be an object that Event constructor created, but got another one: %o\", name, event);\n  return retv;\n}\nfunction setCancelFlag(data) {\n  if (data.inPassiveListenerFlag) {\n    CanceledInPassiveListener.warn();\n    return;\n  }\n  if (!data.cancelable) {\n    NonCancelableEventWasCanceled.warn();\n    return;\n  }\n  data.canceledFlag = true;\n}\nObject.defineProperty(Event, \"NONE\", {\n  enumerable: true\n});\nObject.defineProperty(Event, \"CAPTURING_PHASE\", {\n  enumerable: true\n});\nObject.defineProperty(Event, \"AT_TARGET\", {\n  enumerable: true\n});\nObject.defineProperty(Event, \"BUBBLING_PHASE\", {\n  enumerable: true\n});\nvar keys = Object.getOwnPropertyNames(Event.prototype);\nfor (var i = 0; i < keys.length; ++i) {\n  if (keys[i] === \"constructor\") {\n    continue;\n  }\n  Object.defineProperty(Event.prototype, keys[i], {\n    enumerable: true\n  });\n}\nif (typeof Global !== \"undefined\" && typeof Global.Event !== \"undefined\") {\n  Object.setPrototypeOf(Event.prototype, Global.Event.prototype);\n}\nfunction createInvalidStateError(message) {\n  if (Global.DOMException) {\n    return new Global.DOMException(message, \"InvalidStateError\");\n  }\n  if (DOMException == null) {\n    DOMException = function (_Error) {\n      function DOMException(msg) {\n        var _this;\n        _classCallCheck(this, DOMException);\n        _this = _callSuper(this, DOMException, [msg]);\n        if (Error.captureStackTrace) {\n          Error.captureStackTrace(_this, DOMException);\n        }\n        return _this;\n      }\n      _inherits(DOMException, _Error);\n      return _createClass(DOMException, [{\n        key: \"code\",\n        get: function get() {\n          return 11;\n        }\n      }, {\n        key: \"name\",\n        get: function get() {\n          return \"InvalidStateError\";\n        }\n      }]);\n    }(_wrapNativeSuper(Error));\n    Object.defineProperties(DOMException.prototype, {\n      code: {\n        enumerable: true\n      },\n      name: {\n        enumerable: true\n      }\n    });\n    defineErrorCodeProperties(DOMException);\n    defineErrorCodeProperties(DOMException.prototype);\n  }\n  return new DOMException(message);\n}\nvar DOMException;\nvar ErrorCodeMap = {\n  INDEX_SIZE_ERR: 1,\n  DOMSTRING_SIZE_ERR: 2,\n  HIERARCHY_REQUEST_ERR: 3,\n  WRONG_DOCUMENT_ERR: 4,\n  INVALID_CHARACTER_ERR: 5,\n  NO_DATA_ALLOWED_ERR: 6,\n  NO_MODIFICATION_ALLOWED_ERR: 7,\n  NOT_FOUND_ERR: 8,\n  NOT_SUPPORTED_ERR: 9,\n  INUSE_ATTRIBUTE_ERR: 10,\n  INVALID_STATE_ERR: 11,\n  SYNTAX_ERR: 12,\n  INVALID_MODIFICATION_ERR: 13,\n  NAMESPACE_ERR: 14,\n  INVALID_ACCESS_ERR: 15,\n  VALIDATION_ERR: 16,\n  TYPE_MISMATCH_ERR: 17,\n  SECURITY_ERR: 18,\n  NETWORK_ERR: 19,\n  ABORT_ERR: 20,\n  URL_MISMATCH_ERR: 21,\n  QUOTA_EXCEEDED_ERR: 22,\n  TIMEOUT_ERR: 23,\n  INVALID_NODE_TYPE_ERR: 24,\n  DATA_CLONE_ERR: 25\n};\nfunction defineErrorCodeProperties(obj) {\n  var keys = Object.keys(ErrorCodeMap);\n  var _loop = function _loop() {\n    var key = keys[_i];\n    var value = ErrorCodeMap[key];\n    Object.defineProperty(obj, key, {\n      get: function get() {\n        return value;\n      },\n      configurable: true,\n      enumerable: true\n    });\n  };\n  for (var _i = 0; _i < keys.length; ++_i) {\n    _loop();\n  }\n}\nvar EventWrapper = function (_Event) {\n  function EventWrapper(event) {\n    var _this2;\n    _classCallCheck(this, EventWrapper);\n    _this2 = _callSuper(this, EventWrapper, [event.type, {\n      bubbles: event.bubbles,\n      cancelable: event.cancelable,\n      composed: event.composed\n    }]);\n    if (event.cancelBubble) {\n      _superPropGet((_this2, EventWrapper), \"stopPropagation\", _this2, 3)([]);\n    }\n    if (event.defaultPrevented) {\n      _superPropGet((_this2, EventWrapper), \"preventDefault\", _this2, 3)([]);\n    }\n    internalDataMap$1.set(_this2, {\n      original: event\n    });\n    var keys = Object.keys(event);\n    for (var _i2 = 0; _i2 < keys.length; ++_i2) {\n      var key = keys[_i2];\n      if (!(key in _this2)) {\n        Object.defineProperty(_this2, key, defineRedirectDescriptor(event, key));\n      }\n    }\n    return _this2;\n  }\n  _inherits(EventWrapper, _Event);\n  return _createClass(EventWrapper, [{\n    key: \"stopPropagation\",\n    value: function stopPropagation() {\n      _superPropGet(EventWrapper, \"stopPropagation\", this, 3)([]);\n      var _$$ = $$1(this),\n        original = _$$.original;\n      if (\"stopPropagation\" in original) {\n        original.stopPropagation();\n      }\n    }\n  }, {\n    key: \"cancelBubble\",\n    get: function get() {\n      return _superPropGet(EventWrapper, \"cancelBubble\", this, 1);\n    },\n    set: function set(value) {\n      _superPropSet(EventWrapper, \"cancelBubble\", value, this, 1, 1);\n      var _$$2 = $$1(this),\n        original = _$$2.original;\n      if (\"cancelBubble\" in original) {\n        original.cancelBubble = value;\n      }\n    }\n  }, {\n    key: \"stopImmediatePropagation\",\n    value: function stopImmediatePropagation() {\n      _superPropGet(EventWrapper, \"stopImmediatePropagation\", this, 3)([]);\n      var _$$3 = $$1(this),\n        original = _$$3.original;\n      if (\"stopImmediatePropagation\" in original) {\n        original.stopImmediatePropagation();\n      }\n    }\n  }, {\n    key: \"returnValue\",\n    get: function get() {\n      return _superPropGet(EventWrapper, \"returnValue\", this, 1);\n    },\n    set: function set(value) {\n      _superPropSet(EventWrapper, \"returnValue\", value, this, 1, 1);\n      var _$$4 = $$1(this),\n        original = _$$4.original;\n      if (\"returnValue\" in original) {\n        original.returnValue = value;\n      }\n    }\n  }, {\n    key: \"preventDefault\",\n    value: function preventDefault() {\n      _superPropGet(EventWrapper, \"preventDefault\", this, 3)([]);\n      var _$$5 = $$1(this),\n        original = _$$5.original;\n      if (\"preventDefault\" in original) {\n        original.preventDefault();\n      }\n    }\n  }, {\n    key: \"timeStamp\",\n    get: function get() {\n      var _$$6 = $$1(this),\n        original = _$$6.original;\n      if (\"timeStamp\" in original) {\n        return original.timeStamp;\n      }\n      return _superPropGet(EventWrapper, \"timeStamp\", this, 1);\n    }\n  }], [{\n    key: \"wrap\",\n    value: function wrap(event) {\n      return new (getWrapperClassOf(event))(event);\n    }\n  }]);\n}(Event);\nvar internalDataMap$1 = new WeakMap();\nfunction $$1(event) {\n  var retv = internalDataMap$1.get(event);\n  assertType(retv != null, \"'this' is expected an Event object, but got\", event);\n  return retv;\n}\nvar wrapperClassCache = new WeakMap();\nwrapperClassCache.set(Object.prototype, EventWrapper);\nif (typeof Global !== \"undefined\" && typeof Global.Event !== \"undefined\") {\n  wrapperClassCache.set(Global.Event.prototype, EventWrapper);\n}\nfunction getWrapperClassOf(originalEvent) {\n  var prototype = Object.getPrototypeOf(originalEvent);\n  if (prototype == null) {\n    return EventWrapper;\n  }\n  var wrapper = wrapperClassCache.get(prototype);\n  if (wrapper == null) {\n    wrapper = defineWrapper(getWrapperClassOf(prototype), prototype);\n    wrapperClassCache.set(prototype, wrapper);\n  }\n  return wrapper;\n}\nfunction defineWrapper(BaseEventWrapper, originalPrototype) {\n  var CustomEventWrapper = function (_BaseEventWrapper) {\n    function CustomEventWrapper() {\n      _classCallCheck(this, CustomEventWrapper);\n      return _callSuper(this, CustomEventWrapper, arguments);\n    }\n    _inherits(CustomEventWrapper, _BaseEventWrapper);\n    return _createClass(CustomEventWrapper);\n  }(BaseEventWrapper);\n  var keys = Object.keys(originalPrototype);\n  for (var _i3 = 0; _i3 < keys.length; ++_i3) {\n    Object.defineProperty(CustomEventWrapper.prototype, keys[_i3], defineRedirectDescriptor(originalPrototype, keys[_i3]));\n  }\n  return CustomEventWrapper;\n}\nfunction defineRedirectDescriptor(obj, key) {\n  var d = Object.getOwnPropertyDescriptor(obj, key);\n  return {\n    get: function get() {\n      var original = $$1(this).original;\n      var value = original[key];\n      if (typeof value === \"function\") {\n        return value.bind(original);\n      }\n      return value;\n    },\n    set: function set(value) {\n      var original = $$1(this).original;\n      original[key] = value;\n    },\n    configurable: d.configurable,\n    enumerable: d.enumerable\n  };\n}\nfunction createListener(callback, capture, passive, once, signal, signalListener) {\n  return {\n    callback: callback,\n    flags: (capture ? 1 : 0) | (passive ? 2 : 0) | (once ? 4 : 0),\n    signal: signal,\n    signalListener: signalListener\n  };\n}\nfunction setRemoved(listener) {\n  listener.flags |= 8;\n}\nfunction isCapture(listener) {\n  return (listener.flags & 1) === 1;\n}\nfunction isPassive(listener) {\n  return (listener.flags & 2) === 2;\n}\nfunction isOnce(listener) {\n  return (listener.flags & 4) === 4;\n}\nfunction isRemoved(listener) {\n  return (listener.flags & 8) === 8;\n}\nfunction invokeCallback(_ref, target, event) {\n  var callback = _ref.callback;\n  try {\n    if (typeof callback === \"function\") {\n      callback.call(target, event);\n    } else if (typeof callback.handleEvent === \"function\") {\n      callback.handleEvent(event);\n    }\n  } catch (thrownError) {\n    reportError(thrownError);\n  }\n}\nfunction findIndexOfListener(_ref2, callback, capture) {\n  var listeners = _ref2.listeners;\n  for (var _i4 = 0; _i4 < listeners.length; ++_i4) {\n    if (listeners[_i4].callback === callback && isCapture(listeners[_i4]) === capture) {\n      return _i4;\n    }\n  }\n  return -1;\n}\nfunction addListener(list, callback, capture, passive, once, signal) {\n  var signalListener;\n  if (signal) {\n    signalListener = removeListener.bind(null, list, callback, capture);\n    signal.addEventListener(\"abort\", signalListener);\n  }\n  var listener = createListener(callback, capture, passive, once, signal, signalListener);\n  if (list.cow) {\n    list.cow = false;\n    list.listeners = [].concat(_toConsumableArray(list.listeners), [listener]);\n  } else {\n    list.listeners.push(listener);\n  }\n  return listener;\n}\nfunction removeListener(list, callback, capture) {\n  var index = findIndexOfListener(list, callback, capture);\n  if (index !== -1) {\n    return removeListenerAt(list, index);\n  }\n  return false;\n}\nfunction removeListenerAt(list, index) {\n  var disableCow = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  var listener = list.listeners[index];\n  setRemoved(listener);\n  if (listener.signal) {\n    listener.signal.removeEventListener(\"abort\", listener.signalListener);\n  }\n  if (list.cow && !disableCow) {\n    list.cow = false;\n    list.listeners = list.listeners.filter(function (_, i) {\n      return i !== index;\n    });\n    return false;\n  }\n  list.listeners.splice(index, 1);\n  return true;\n}\nfunction createListenerListMap() {\n  return Object.create(null);\n}\nfunction ensureListenerList(listenerMap, type) {\n  var _a;\n  return (_a = listenerMap[type]) !== null && _a !== void 0 ? _a : listenerMap[type] = {\n    attrCallback: undefined,\n    attrListener: undefined,\n    cow: false,\n    listeners: []\n  };\n}\nvar EventTarget = function () {\n  function EventTarget() {\n    _classCallCheck(this, EventTarget);\n    internalDataMap$2.set(this, createListenerListMap());\n  }\n  return _createClass(EventTarget, [{\n    key: \"addEventListener\",\n    value: function addEventListener(type0, callback0, options0) {\n      var listenerMap = $$2(this);\n      var _normalizeAddOptions = normalizeAddOptions(type0, callback0, options0),\n        callback = _normalizeAddOptions.callback,\n        capture = _normalizeAddOptions.capture,\n        once = _normalizeAddOptions.once,\n        passive = _normalizeAddOptions.passive,\n        signal = _normalizeAddOptions.signal,\n        type = _normalizeAddOptions.type;\n      if (callback == null || (signal === null || signal === void 0 ? void 0 : signal.aborted)) {\n        return;\n      }\n      var list = ensureListenerList(listenerMap, type);\n      var i = findIndexOfListener(list, callback, capture);\n      if (i !== -1) {\n        warnDuplicate(list.listeners[i], passive, once, signal);\n        return;\n      }\n      addListener(list, callback, capture, passive, once, signal);\n    }\n  }, {\n    key: \"removeEventListener\",\n    value: function removeEventListener(type0, callback0, options0) {\n      var listenerMap = $$2(this);\n      var _normalizeOptions = normalizeOptions(type0, callback0, options0),\n        callback = _normalizeOptions.callback,\n        capture = _normalizeOptions.capture,\n        type = _normalizeOptions.type;\n      var list = listenerMap[type];\n      if (callback != null && list) {\n        removeListener(list, callback, capture);\n      }\n    }\n  }, {\n    key: \"dispatchEvent\",\n    value: function dispatchEvent(e) {\n      var list = $$2(this)[String(e.type)];\n      if (list == null) {\n        return true;\n      }\n      var event = e instanceof Event ? e : EventWrapper.wrap(e);\n      var eventData = $(event, \"event\");\n      if (eventData.dispatchFlag) {\n        throw createInvalidStateError(\"This event has been in dispatching.\");\n      }\n      eventData.dispatchFlag = true;\n      eventData.target = eventData.currentTarget = this;\n      if (!eventData.stopPropagationFlag) {\n        var cow = list.cow,\n          listeners = list.listeners;\n        list.cow = true;\n        for (var _i5 = 0; _i5 < listeners.length; ++_i5) {\n          var listener = listeners[_i5];\n          if (isRemoved(listener)) {\n            continue;\n          }\n          if (isOnce(listener) && removeListenerAt(list, _i5, !cow)) {\n            _i5 -= 1;\n          }\n          eventData.inPassiveListenerFlag = isPassive(listener);\n          invokeCallback(listener, this, event);\n          eventData.inPassiveListenerFlag = false;\n          if (eventData.stopImmediatePropagationFlag) {\n            break;\n          }\n        }\n        if (!cow) {\n          list.cow = false;\n        }\n      }\n      eventData.target = null;\n      eventData.currentTarget = null;\n      eventData.stopImmediatePropagationFlag = false;\n      eventData.stopPropagationFlag = false;\n      eventData.dispatchFlag = false;\n      return !eventData.canceledFlag;\n    }\n  }]);\n}();\nvar internalDataMap$2 = new WeakMap();\nfunction $$2(target) {\n  var name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"this\";\n  var retv = internalDataMap$2.get(target);\n  assertType(retv != null, \"'%s' must be an object that EventTarget constructor created, but got another one: %o\", name, target);\n  return retv;\n}\nfunction normalizeAddOptions(type, callback, options) {\n  var _a;\n  assertCallback(callback);\n  if (typeof options === \"object\" && options !== null) {\n    return {\n      type: String(type),\n      callback: callback !== null && callback !== void 0 ? callback : undefined,\n      capture: Boolean(options.capture),\n      passive: Boolean(options.passive),\n      once: Boolean(options.once),\n      signal: (_a = options.signal) !== null && _a !== void 0 ? _a : undefined\n    };\n  }\n  return {\n    type: String(type),\n    callback: callback !== null && callback !== void 0 ? callback : undefined,\n    capture: Boolean(options),\n    passive: false,\n    once: false,\n    signal: undefined\n  };\n}\nfunction normalizeOptions(type, callback, options) {\n  assertCallback(callback);\n  if (typeof options === \"object\" && options !== null) {\n    return {\n      type: String(type),\n      callback: callback !== null && callback !== void 0 ? callback : undefined,\n      capture: Boolean(options.capture)\n    };\n  }\n  return {\n    type: String(type),\n    callback: callback !== null && callback !== void 0 ? callback : undefined,\n    capture: Boolean(options)\n  };\n}\nfunction assertCallback(callback) {\n  if (typeof callback === \"function\" || typeof callback === \"object\" && callback !== null && typeof callback.handleEvent === \"function\") {\n    return;\n  }\n  if (callback == null || typeof callback === \"object\") {\n    InvalidEventListener.warn(callback);\n    return;\n  }\n  throw new TypeError(format(InvalidEventListener.message, [callback]));\n}\nfunction warnDuplicate(listener, passive, once, signal) {\n  EventListenerWasDuplicated.warn(isCapture(listener) ? \"capture\" : \"bubble\", listener.callback);\n  if (isPassive(listener) !== passive) {\n    OptionWasIgnored.warn(\"passive\");\n  }\n  if (isOnce(listener) !== once) {\n    OptionWasIgnored.warn(\"once\");\n  }\n  if (listener.signal !== signal) {\n    OptionWasIgnored.warn(\"signal\");\n  }\n}\nvar keys$1 = Object.getOwnPropertyNames(EventTarget.prototype);\nfor (var _i6 = 0; _i6 < keys$1.length; ++_i6) {\n  if (keys$1[_i6] === \"constructor\") {\n    continue;\n  }\n  Object.defineProperty(EventTarget.prototype, keys$1[_i6], {\n    enumerable: true\n  });\n}\nif (typeof Global !== \"undefined\" && typeof Global.EventTarget !== \"undefined\") {\n  Object.setPrototypeOf(EventTarget.prototype, Global.EventTarget.prototype);\n}\nfunction getEventAttributeValue(target, type) {\n  var _a, _b;\n  var listMap = $$2(target, \"target\");\n  return (_b = (_a = listMap[type]) === null || _a === void 0 ? void 0 : _a.attrCallback) !== null && _b !== void 0 ? _b : null;\n}\nfunction setEventAttributeValue(target, type, callback) {\n  if (callback != null && typeof callback !== \"function\") {\n    InvalidAttributeHandler.warn(callback);\n  }\n  if (typeof callback === \"function\" || typeof callback === \"object\" && callback !== null) {\n    upsertEventAttributeListener(target, type, callback);\n  } else {\n    removeEventAttributeListener(target, type);\n  }\n}\nfunction upsertEventAttributeListener(target, type, callback) {\n  var list = ensureListenerList($$2(target, \"target\"), String(type));\n  list.attrCallback = callback;\n  if (list.attrListener == null) {\n    list.attrListener = addListener(list, defineEventAttributeCallback(list), false, false, false, undefined);\n  }\n}\nfunction removeEventAttributeListener(target, type) {\n  var listMap = $$2(target, \"target\");\n  var list = listMap[String(type)];\n  if (list && list.attrListener) {\n    removeListener(list, list.attrListener.callback, false);\n    list.attrCallback = list.attrListener = undefined;\n  }\n}\nfunction defineEventAttributeCallback(list) {\n  return function (event) {\n    var callback = list.attrCallback;\n    if (typeof callback === \"function\") {\n      callback.call(this, event);\n    }\n  };\n}\nfunction defineCustomEventTarget() {\n  var CustomEventTarget = function (_EventTarget) {\n    function CustomEventTarget() {\n      _classCallCheck(this, CustomEventTarget);\n      return _callSuper(this, CustomEventTarget, arguments);\n    }\n    _inherits(CustomEventTarget, _EventTarget);\n    return _createClass(CustomEventTarget);\n  }(EventTarget);\n  for (var _i7 = 0; _i7 < arguments.length; ++_i7) {\n    defineEventAttribute(CustomEventTarget.prototype, _i7 < 0 || arguments.length <= _i7 ? undefined : arguments[_i7]);\n  }\n  return CustomEventTarget;\n}\nfunction defineEventAttribute(target, type, _eventClass) {\n  Object.defineProperty(target, `on${type}`, {\n    get: function get() {\n      return getEventAttributeValue(this, type);\n    },\n    set: function set(value) {\n      setEventAttributeValue(this, type, value);\n    },\n    configurable: true,\n    enumerable: true\n  });\n}\nexport default EventTarget;\nexport { Event, EventTarget, defineCustomEventTarget, defineEventAttribute, getEventAttributeValue, setErrorHandler, setEventAttributeValue, setWarningHandler };","map":{"version":3,"names":["assertType","condition","message","_len","arguments","length","args","Array","_key","TypeError","format","i","replace","anyToString","x","String","Object","prototype","toString","call","currentErrorHandler","setErrorHandler","value","undefined","reportError","maybeError","error","Error","dispatchEvent","ErrorEvent","process","emit","console","_a","Global","window","self","global","globalThis","currentWarnHandler","setWarningHandler","Warning","code","_classCallCheck","_createClass","key","warn","_console","_len2","_key2","_objectSpread","stack","apply","concat","_b","InitEventWasCalledWhileDispatching","FalsyWasAssignedToCancelBubble","TruthyWasAssignedToReturnValue","NonCancelableEventWasCanceled","CanceledInPassiveListener","EventListenerWasDuplicated","OptionWasIgnored","InvalidEventListener","InvalidAttributeHandler","Event","type","eventInitDict","defineProperty","enumerable","opts","internalDataMap","set","bubbles","Boolean","cancelable","composed","target","currentTarget","stopPropagationFlag","stopImmediatePropagationFlag","canceledFlag","inPassiveListenerFlag","dispatchFlag","timeStamp","Date","now","get","$","composedPath","NONE","CAPTURING_PHASE","AT_TARGET","BUBBLING_PHASE","stopPropagation","stopImmediatePropagation","data","setCancelFlag","preventDefault","initEvent","WeakMap","event","name","retv","keys","getOwnPropertyNames","setPrototypeOf","createInvalidStateError","DOMException","_Error","msg","_this","_callSuper","captureStackTrace","_inherits","_wrapNativeSuper","defineProperties","defineErrorCodeProperties","ErrorCodeMap","INDEX_SIZE_ERR","DOMSTRING_SIZE_ERR","HIERARCHY_REQUEST_ERR","WRONG_DOCUMENT_ERR","INVALID_CHARACTER_ERR","NO_DATA_ALLOWED_ERR","NO_MODIFICATION_ALLOWED_ERR","NOT_FOUND_ERR","NOT_SUPPORTED_ERR","INUSE_ATTRIBUTE_ERR","INVALID_STATE_ERR","SYNTAX_ERR","INVALID_MODIFICATION_ERR","NAMESPACE_ERR","INVALID_ACCESS_ERR","VALIDATION_ERR","TYPE_MISMATCH_ERR","SECURITY_ERR","NETWORK_ERR","ABORT_ERR","URL_MISMATCH_ERR","QUOTA_EXCEEDED_ERR","TIMEOUT_ERR","INVALID_NODE_TYPE_ERR","DATA_CLONE_ERR","obj","_loop","configurable","EventWrapper","_Event","_this2","cancelBubble","_superPropGet","defaultPrevented","internalDataMap$1","original","defineRedirectDescriptor","_$$","$$1","_superPropSet","_$$2","_$$3","_$$4","returnValue","_$$5","_$$6","wrap","getWrapperClassOf","wrapperClassCache","originalEvent","getPrototypeOf","wrapper","defineWrapper","BaseEventWrapper","originalPrototype","CustomEventWrapper","_BaseEventWrapper","d","getOwnPropertyDescriptor","bind","createListener","callback","capture","passive","once","signal","signalListener","flags","setRemoved","listener","isCapture","isPassive","isOnce","isRemoved","invokeCallback","_ref","handleEvent","thrownError","findIndexOfListener","_ref2","listeners","addListener","list","removeListener","addEventListener","cow","_toConsumableArray","push","index","removeListenerAt","disableCow","removeEventListener","filter","_","splice","createListenerListMap","create","ensureListenerList","listenerMap","attrCallback","attrListener","EventTarget","internalDataMap$2","type0","callback0","options0","$$2","_normalizeAddOptions","normalizeAddOptions","aborted","warnDuplicate","_normalizeOptions","normalizeOptions","e","eventData","options","assertCallback","keys$1","getEventAttributeValue","listMap","setEventAttributeValue","upsertEventAttributeListener","removeEventAttributeListener","defineEventAttributeCallback","defineCustomEventTarget","CustomEventTarget","_EventTarget","defineEventAttribute","_eventClass"],"sources":["/workspaces/telemedicine-platform/mobile-app/node_modules/react-native-webrtc/node_modules/src/lib/misc.ts","/workspaces/telemedicine-platform/mobile-app/node_modules/react-native-webrtc/node_modules/src/lib/error-handler.ts","/workspaces/telemedicine-platform/mobile-app/node_modules/react-native-webrtc/node_modules/src/lib/global.ts","/workspaces/telemedicine-platform/mobile-app/node_modules/react-native-webrtc/node_modules/src/lib/warning-handler.ts","/workspaces/telemedicine-platform/mobile-app/node_modules/react-native-webrtc/node_modules/src/lib/warnings.ts","/workspaces/telemedicine-platform/mobile-app/node_modules/react-native-webrtc/node_modules/src/lib/event.ts","/workspaces/telemedicine-platform/mobile-app/node_modules/react-native-webrtc/node_modules/src/lib/dom-exception.ts","/workspaces/telemedicine-platform/mobile-app/node_modules/react-native-webrtc/node_modules/src/lib/event-wrapper.ts","/workspaces/telemedicine-platform/mobile-app/node_modules/react-native-webrtc/node_modules/src/lib/listener.ts","/workspaces/telemedicine-platform/mobile-app/node_modules/react-native-webrtc/node_modules/src/lib/listener-list.ts","/workspaces/telemedicine-platform/mobile-app/node_modules/react-native-webrtc/node_modules/src/lib/listener-list-map.ts","/workspaces/telemedicine-platform/mobile-app/node_modules/react-native-webrtc/node_modules/src/lib/event-target.ts","/workspaces/telemedicine-platform/mobile-app/node_modules/react-native-webrtc/node_modules/src/lib/event-attribute-handler.ts","/workspaces/telemedicine-platform/mobile-app/node_modules/react-native-webrtc/node_modules/src/lib/legacy.ts"],"sourcesContent":["/**\n * Assert a condition.\n * @param condition The condition that it should satisfy.\n * @param message The error message.\n * @param args The arguments for replacing placeholders in the message.\n */\nexport function assertType(\n    condition: boolean,\n    message: string,\n    ...args: any[]\n): asserts condition {\n    if (!condition) {\n        throw new TypeError(format(message, args))\n    }\n}\n\n/**\n * Convert a text and arguments to one string.\n * @param message The formating text\n * @param args The arguments.\n */\nexport function format(message: string, args: any[]): string {\n    let i = 0\n    return message.replace(/%[os]/gu, () => anyToString(args[i++]))\n}\n\n/**\n * Convert a value to a string representation.\n * @param x The value to get the string representation.\n */\nexport function anyToString(x: any): string {\n    if (typeof x !== \"object\" || x === null) {\n        return String(x)\n    }\n    return Object.prototype.toString.call(x)\n}\n","import { anyToString, assertType } from \"./misc\"\n\ndeclare const console: any\ndeclare const dispatchEvent: any\ndeclare const ErrorEvent: any\ndeclare const process: any\n\nlet currentErrorHandler: setErrorHandler.ErrorHandler | undefined\n\n/**\n * Set the error handler.\n * @param value The error handler to set.\n */\nexport function setErrorHandler(\n    value: setErrorHandler.ErrorHandler | undefined,\n): void {\n    assertType(\n        typeof value === \"function\" || value === undefined,\n        \"The error handler must be a function or undefined, but got %o.\",\n        value,\n    )\n    currentErrorHandler = value\n}\nexport namespace setErrorHandler {\n    /**\n     * The error handler.\n     * @param error The thrown error object.\n     */\n    export type ErrorHandler = (error: Error) => void\n}\n\n/**\n * Print a error message.\n * @param maybeError The error object.\n */\nexport function reportError(maybeError: unknown): void {\n    try {\n        const error =\n            maybeError instanceof Error\n                ? maybeError\n                : new Error(anyToString(maybeError))\n\n        // Call the user-defined error handler if exists.\n        if (currentErrorHandler) {\n            currentErrorHandler(error)\n            return\n        }\n\n        // Dispatch an `error` event if this is on a browser.\n        if (\n            typeof dispatchEvent === \"function\" &&\n            typeof ErrorEvent === \"function\"\n        ) {\n            dispatchEvent(\n                new ErrorEvent(\"error\", { error, message: error.message }),\n            )\n        }\n\n        // Emit an `uncaughtException` event if this is on Node.js.\n        //istanbul ignore else\n        else if (\n            typeof process !== \"undefined\" &&\n            typeof process.emit === \"function\"\n        ) {\n            process.emit(\"uncaughtException\", error)\n            return\n        }\n\n        // Otherwise, print the error.\n        console.error(error)\n    } catch {\n        // ignore.\n    }\n}\n","declare const globalThis: any\ndeclare const window: any\ndeclare const self: any\ndeclare const global: any\n\n/**\n * The global object.\n */\n//istanbul ignore next\nexport const Global: any =\n    typeof window !== \"undefined\"\n        ? window\n        : typeof self !== \"undefined\"\n        ? self\n        : typeof global !== \"undefined\"\n        ? global\n        : typeof globalThis !== \"undefined\"\n        ? globalThis\n        : undefined\n","import { assertType } from \"./misc\"\n\ndeclare const console: any\n\nlet currentWarnHandler: setWarningHandler.WarningHandler | undefined\n\n/**\n * Set the warning handler.\n * @param value The warning handler to set.\n */\nexport function setWarningHandler(\n    value: setWarningHandler.WarningHandler | undefined,\n): void {\n    assertType(\n        typeof value === \"function\" || value === undefined,\n        \"The warning handler must be a function or undefined, but got %o.\",\n        value,\n    )\n    currentWarnHandler = value\n}\nexport namespace setWarningHandler {\n    /**\n     * The warning information.\n     */\n    export interface Warning {\n        /**\n         * The code of this warning.\n         */\n        code: string\n        /**\n         * The message in English.\n         */\n        message: string\n        /**\n         * The arguments for replacing placeholders in the text.\n         */\n        args: any[]\n    }\n\n    /**\n     * The warning handler.\n     * @param warning The warning.\n     */\n    export type WarningHandler = (warning: Warning) => void\n}\n\n/**\n * The warning information.\n */\nexport class Warning<TArgs extends any[]> {\n    readonly code: string\n    readonly message: string\n\n    constructor(code: string, message: string) {\n        this.code = code\n        this.message = message\n    }\n\n    /**\n     * Report this warning.\n     * @param args The arguments of the warning.\n     */\n    warn(...args: TArgs): void {\n        try {\n            // Call the user-defined warning handler if exists.\n            if (currentWarnHandler) {\n                currentWarnHandler({ ...this, args })\n                return\n            }\n\n            // Otherwise, print the warning.\n            const stack = (new Error().stack ?? \"\").replace(\n                /^(?:.+?\\n){2}/gu,\n                \"\\n\",\n            )\n            console.warn(this.message, ...args, stack)\n        } catch {\n            // Ignore.\n        }\n    }\n}\n","import { EventTarget } from \"./event-target\" // Used as only type, so no circular.\nimport { Warning } from \"./warning-handler\"\n\nexport const InitEventWasCalledWhileDispatching = new Warning<[]>(\n    \"W01\",\n    \"Unable to initialize event under dispatching.\",\n)\n\nexport const FalsyWasAssignedToCancelBubble = new Warning<[]>(\n    \"W02\",\n    \"Assigning any falsy value to 'cancelBubble' property has no effect.\",\n)\n\nexport const TruthyWasAssignedToReturnValue = new Warning<[]>(\n    \"W03\",\n    \"Assigning any truthy value to 'returnValue' property has no effect.\",\n)\n\nexport const NonCancelableEventWasCanceled = new Warning<[]>(\n    \"W04\",\n    \"Unable to preventDefault on non-cancelable events.\",\n)\n\nexport const CanceledInPassiveListener = new Warning<[]>(\n    \"W05\",\n    \"Unable to preventDefault inside passive event listener invocation.\",\n)\n\nexport const EventListenerWasDuplicated = new Warning<\n    [type: \"bubble\" | \"capture\", callback: EventTarget.EventListener<any, any>]\n>(\n    \"W06\",\n    \"An event listener wasn't added because it has been added already: %o, %o\",\n)\n\nexport const OptionWasIgnored = new Warning<\n    [name: \"passive\" | \"once\" | \"signal\"]\n>(\n    \"W07\",\n    \"The %o option value was abandoned because the event listener wasn't added as duplicated.\",\n)\n\nexport const InvalidEventListener = new Warning<\n    [callback: EventTarget.EventListener<any, any> | {} | null | undefined]\n>(\n    \"W08\",\n    \"The 'callback' argument must be a function or an object that has 'handleEvent' method: %o\",\n)\n\nexport const InvalidAttributeHandler = new Warning<\n    [callback: EventTarget.EventListener<any, any> | {}]\n>(\"W09\", \"Event attribute handler must be a function: %o\")\n","import { EventTarget } from \"./event-target\" // Used as only type, so no circular.\nimport { Global } from \"./global\"\nimport { assertType } from \"./misc\"\nimport {\n    CanceledInPassiveListener,\n    FalsyWasAssignedToCancelBubble,\n    InitEventWasCalledWhileDispatching,\n    NonCancelableEventWasCanceled,\n    TruthyWasAssignedToReturnValue,\n} from \"./warnings\"\n\n/*eslint-disable class-methods-use-this */\n\n/**\n * An implementation of `Event` interface, that wraps a given event object.\n * `EventTarget` shim can control the internal state of this `Event` objects.\n * @see https://dom.spec.whatwg.org/#event\n */\nexport class Event<TEventType extends string = string> {\n    /**\n     * @see https://dom.spec.whatwg.org/#dom-event-none\n     */\n    static get NONE(): number {\n        return NONE\n    }\n\n    /**\n     * @see https://dom.spec.whatwg.org/#dom-event-capturing_phase\n     */\n    static get CAPTURING_PHASE(): number {\n        return CAPTURING_PHASE\n    }\n\n    /**\n     * @see https://dom.spec.whatwg.org/#dom-event-at_target\n     */\n    static get AT_TARGET(): number {\n        return AT_TARGET\n    }\n\n    /**\n     * @see https://dom.spec.whatwg.org/#dom-event-bubbling_phase\n     */\n    static get BUBBLING_PHASE(): number {\n        return BUBBLING_PHASE\n    }\n\n    /**\n     * Initialize this event instance.\n     * @param type The type of this event.\n     * @param eventInitDict Options to initialize.\n     * @see https://dom.spec.whatwg.org/#dom-event-event\n     */\n    constructor(type: TEventType, eventInitDict?: Event.EventInit) {\n        Object.defineProperty(this, \"isTrusted\", {\n            value: false,\n            enumerable: true,\n        })\n\n        const opts = eventInitDict ?? {}\n        internalDataMap.set(this, {\n            type: String(type),\n            bubbles: Boolean(opts.bubbles),\n            cancelable: Boolean(opts.cancelable),\n            composed: Boolean(opts.composed),\n            target: null,\n            currentTarget: null,\n            stopPropagationFlag: false,\n            stopImmediatePropagationFlag: false,\n            canceledFlag: false,\n            inPassiveListenerFlag: false,\n            dispatchFlag: false,\n            timeStamp: Date.now(),\n        })\n    }\n\n    /**\n     * The type of this event.\n     * @see https://dom.spec.whatwg.org/#dom-event-type\n     */\n    get type(): TEventType {\n        return $(this).type as TEventType\n    }\n\n    /**\n     * The event target of the current dispatching.\n     * @see https://dom.spec.whatwg.org/#dom-event-target\n     */\n    get target(): EventTarget | null {\n        return $(this).target\n    }\n\n    /**\n     * The event target of the current dispatching.\n     * @deprecated Use the `target` property instead.\n     * @see https://dom.spec.whatwg.org/#dom-event-srcelement\n     */\n    get srcElement(): EventTarget | null {\n        return $(this).target\n    }\n\n    /**\n     * The event target of the current dispatching.\n     * @see https://dom.spec.whatwg.org/#dom-event-currenttarget\n     */\n    get currentTarget(): EventTarget | null {\n        return $(this).currentTarget\n    }\n\n    /**\n     * The event target of the current dispatching.\n     * This doesn't support node tree.\n     * @see https://dom.spec.whatwg.org/#dom-event-composedpath\n     */\n    composedPath(): EventTarget[] {\n        const currentTarget = $(this).currentTarget\n        if (currentTarget) {\n            return [currentTarget]\n        }\n        return []\n    }\n\n    /**\n     * @see https://dom.spec.whatwg.org/#dom-event-none\n     */\n    get NONE(): number {\n        return NONE\n    }\n\n    /**\n     * @see https://dom.spec.whatwg.org/#dom-event-capturing_phase\n     */\n    get CAPTURING_PHASE(): number {\n        return CAPTURING_PHASE\n    }\n\n    /**\n     * @see https://dom.spec.whatwg.org/#dom-event-at_target\n     */\n    get AT_TARGET(): number {\n        return AT_TARGET\n    }\n\n    /**\n     * @see https://dom.spec.whatwg.org/#dom-event-bubbling_phase\n     */\n    get BUBBLING_PHASE(): number {\n        return BUBBLING_PHASE\n    }\n\n    /**\n     * The current event phase.\n     * @see https://dom.spec.whatwg.org/#dom-event-eventphase\n     */\n    get eventPhase(): number {\n        return $(this).dispatchFlag ? 2 : 0\n    }\n\n    /**\n     * Stop event bubbling.\n     * Because this shim doesn't support node tree, this merely changes the `cancelBubble` property value.\n     * @see https://dom.spec.whatwg.org/#dom-event-stoppropagation\n     */\n    stopPropagation(): void {\n        $(this).stopPropagationFlag = true\n    }\n\n    /**\n     * `true` if event bubbling was stopped.\n     * @deprecated\n     * @see https://dom.spec.whatwg.org/#dom-event-cancelbubble\n     */\n    get cancelBubble(): boolean {\n        return $(this).stopPropagationFlag\n    }\n\n    /**\n     * Stop event bubbling if `true` is set.\n     * @deprecated Use the `stopPropagation()` method instead.\n     * @see https://dom.spec.whatwg.org/#dom-event-cancelbubble\n     */\n    set cancelBubble(value: boolean) {\n        if (value) {\n            $(this).stopPropagationFlag = true\n        } else {\n            FalsyWasAssignedToCancelBubble.warn()\n        }\n    }\n\n    /**\n     * Stop event bubbling and subsequent event listener callings.\n     * @see https://dom.spec.whatwg.org/#dom-event-stopimmediatepropagation\n     */\n    stopImmediatePropagation(): void {\n        const data = $(this)\n        data.stopPropagationFlag = data.stopImmediatePropagationFlag = true\n    }\n\n    /**\n     * `true` if this event will bubble.\n     * @see https://dom.spec.whatwg.org/#dom-event-bubbles\n     */\n    get bubbles(): boolean {\n        return $(this).bubbles\n    }\n\n    /**\n     * `true` if this event can be canceled by the `preventDefault()` method.\n     * @see https://dom.spec.whatwg.org/#dom-event-cancelable\n     */\n    get cancelable(): boolean {\n        return $(this).cancelable\n    }\n\n    /**\n     * `true` if the default behavior will act.\n     * @deprecated Use the `defaultPrevented` proeprty instead.\n     * @see https://dom.spec.whatwg.org/#dom-event-returnvalue\n     */\n    get returnValue(): boolean {\n        return !$(this).canceledFlag\n    }\n\n    /**\n     * Cancel the default behavior if `false` is set.\n     * @deprecated Use the `preventDefault()` method instead.\n     * @see https://dom.spec.whatwg.org/#dom-event-returnvalue\n     */\n    set returnValue(value: boolean) {\n        if (!value) {\n            setCancelFlag($(this))\n        } else {\n            TruthyWasAssignedToReturnValue.warn()\n        }\n    }\n\n    /**\n     * Cancel the default behavior.\n     * @see https://dom.spec.whatwg.org/#dom-event-preventdefault\n     */\n    preventDefault(): void {\n        setCancelFlag($(this))\n    }\n\n    /**\n     * `true` if the default behavior was canceled.\n     * @see https://dom.spec.whatwg.org/#dom-event-defaultprevented\n     */\n    get defaultPrevented(): boolean {\n        return $(this).canceledFlag\n    }\n\n    /**\n     * @see https://dom.spec.whatwg.org/#dom-event-composed\n     */\n    get composed(): boolean {\n        return $(this).composed\n    }\n\n    /**\n     * @see https://dom.spec.whatwg.org/#dom-event-istrusted\n     */\n    //istanbul ignore next\n    get isTrusted(): boolean {\n        return false\n    }\n\n    /**\n     * @see https://dom.spec.whatwg.org/#dom-event-timestamp\n     */\n    get timeStamp(): number {\n        return $(this).timeStamp\n    }\n\n    /**\n     * @deprecated Don't use this method. The constructor did initialization.\n     */\n    initEvent(type: string, bubbles = false, cancelable = false) {\n        const data = $(this)\n        if (data.dispatchFlag) {\n            InitEventWasCalledWhileDispatching.warn()\n            return\n        }\n\n        internalDataMap.set(this, {\n            ...data,\n            type: String(type),\n            bubbles: Boolean(bubbles),\n            cancelable: Boolean(cancelable),\n            target: null,\n            currentTarget: null,\n            stopPropagationFlag: false,\n            stopImmediatePropagationFlag: false,\n            canceledFlag: false,\n        })\n    }\n}\n\n/*eslint-enable class-methods-use-this */\n\nexport namespace Event {\n    /**\n     * The options of the `Event` constructor.\n     * @see https://dom.spec.whatwg.org/#dictdef-eventinit\n     */\n    export interface EventInit {\n        bubbles?: boolean\n        cancelable?: boolean\n        composed?: boolean\n    }\n}\n\nexport { $ as getEventInternalData }\n\n//------------------------------------------------------------------------------\n// Helpers\n//------------------------------------------------------------------------------\n\nconst NONE = 0\nconst CAPTURING_PHASE = 1\nconst AT_TARGET = 2\nconst BUBBLING_PHASE = 3\n\n/**\n * Private data.\n */\ninterface EventInternalData {\n    /**\n     * The value of `type` attribute.\n     */\n    readonly type: string\n    /**\n     * The value of `bubbles` attribute.\n     */\n    readonly bubbles: boolean\n    /**\n     * The value of `cancelable` attribute.\n     */\n    readonly cancelable: boolean\n    /**\n     * The value of `composed` attribute.\n     */\n    readonly composed: boolean\n    /**\n     * The value of `timeStamp` attribute.\n     */\n    readonly timeStamp: number\n\n    /**\n     * @see https://dom.spec.whatwg.org/#dom-event-target\n     */\n    target: EventTarget | null\n    /**\n     * @see https://dom.spec.whatwg.org/#dom-event-currenttarget\n     */\n    currentTarget: EventTarget | null\n    /**\n     * @see https://dom.spec.whatwg.org/#stop-propagation-flag\n     */\n    stopPropagationFlag: boolean\n    /**\n     * @see https://dom.spec.whatwg.org/#stop-immediate-propagation-flag\n     */\n    stopImmediatePropagationFlag: boolean\n    /**\n     * @see https://dom.spec.whatwg.org/#canceled-flag\n     */\n    canceledFlag: boolean\n    /**\n     * @see https://dom.spec.whatwg.org/#in-passive-listener-flag\n     */\n    inPassiveListenerFlag: boolean\n    /**\n     * @see https://dom.spec.whatwg.org/#dispatch-flag\n     */\n    dispatchFlag: boolean\n}\n\n/**\n * Private data for event wrappers.\n */\nconst internalDataMap = new WeakMap<any, EventInternalData>()\n\n/**\n * Get private data.\n * @param event The event object to get private data.\n * @param name The variable name to report.\n * @returns The private data of the event.\n */\nfunction $(event: unknown, name = \"this\"): EventInternalData {\n    const retv = internalDataMap.get(event)\n    assertType(\n        retv != null,\n        \"'%s' must be an object that Event constructor created, but got another one: %o\",\n        name,\n        event,\n    )\n    return retv\n}\n\n/**\n * https://dom.spec.whatwg.org/#set-the-canceled-flag\n * @param data private data.\n */\nfunction setCancelFlag(data: EventInternalData) {\n    if (data.inPassiveListenerFlag) {\n        CanceledInPassiveListener.warn()\n        return\n    }\n    if (!data.cancelable) {\n        NonCancelableEventWasCanceled.warn()\n        return\n    }\n\n    data.canceledFlag = true\n}\n\n// Set enumerable\nObject.defineProperty(Event, \"NONE\", { enumerable: true })\nObject.defineProperty(Event, \"CAPTURING_PHASE\", { enumerable: true })\nObject.defineProperty(Event, \"AT_TARGET\", { enumerable: true })\nObject.defineProperty(Event, \"BUBBLING_PHASE\", { enumerable: true })\nconst keys = Object.getOwnPropertyNames(Event.prototype)\nfor (let i = 0; i < keys.length; ++i) {\n    if (keys[i] === \"constructor\") {\n        continue\n    }\n    Object.defineProperty(Event.prototype, keys[i], { enumerable: true })\n}\n\n// Ensure `event instanceof window.Event` is `true`.\nif (typeof Global !== \"undefined\" && typeof Global.Event !== \"undefined\") {\n    Object.setPrototypeOf(Event.prototype, Global.Event.prototype)\n}\n","import { Global } from \"./global\"\n\n/**\n * Create a new InvalidStateError instance.\n * @param message The error message.\n */\nexport function createInvalidStateError(message: string): Error {\n    if (Global.DOMException) {\n        return new Global.DOMException(message, \"InvalidStateError\")\n    }\n\n    if (DOMException == null) {\n        DOMException = class DOMException extends Error {\n            constructor(msg: string) {\n                super(msg)\n                if ((Error as any).captureStackTrace) {\n                    ;(Error as any).captureStackTrace(this, DOMException)\n                }\n            }\n            // eslint-disable-next-line class-methods-use-this\n            get code() {\n                return 11\n            }\n            // eslint-disable-next-line class-methods-use-this\n            get name() {\n                return \"InvalidStateError\"\n            }\n        }\n        Object.defineProperties(DOMException.prototype, {\n            code: { enumerable: true },\n            name: { enumerable: true },\n        })\n        defineErrorCodeProperties(DOMException)\n        defineErrorCodeProperties(DOMException.prototype)\n    }\n    return new DOMException(message)\n}\n\n//------------------------------------------------------------------------------\n// Helpers\n//------------------------------------------------------------------------------\n\nlet DOMException: { new (message: string): Error } | undefined\n\nconst ErrorCodeMap = {\n    INDEX_SIZE_ERR: 1,\n    DOMSTRING_SIZE_ERR: 2,\n    HIERARCHY_REQUEST_ERR: 3,\n    WRONG_DOCUMENT_ERR: 4,\n    INVALID_CHARACTER_ERR: 5,\n    NO_DATA_ALLOWED_ERR: 6,\n    NO_MODIFICATION_ALLOWED_ERR: 7,\n    NOT_FOUND_ERR: 8,\n    NOT_SUPPORTED_ERR: 9,\n    INUSE_ATTRIBUTE_ERR: 10,\n    INVALID_STATE_ERR: 11,\n    SYNTAX_ERR: 12,\n    INVALID_MODIFICATION_ERR: 13,\n    NAMESPACE_ERR: 14,\n    INVALID_ACCESS_ERR: 15,\n    VALIDATION_ERR: 16,\n    TYPE_MISMATCH_ERR: 17,\n    SECURITY_ERR: 18,\n    NETWORK_ERR: 19,\n    ABORT_ERR: 20,\n    URL_MISMATCH_ERR: 21,\n    QUOTA_EXCEEDED_ERR: 22,\n    TIMEOUT_ERR: 23,\n    INVALID_NODE_TYPE_ERR: 24,\n    DATA_CLONE_ERR: 25,\n}\ntype ErrorCodeMap = typeof ErrorCodeMap\n\nfunction defineErrorCodeProperties(obj: any): void {\n    const keys = Object.keys(ErrorCodeMap) as (keyof ErrorCodeMap)[]\n    for (let i = 0; i < keys.length; ++i) {\n        const key = keys[i]\n        const value = ErrorCodeMap[key]\n        Object.defineProperty(obj, key, {\n            get() {\n                return value\n            },\n            configurable: true,\n            enumerable: true,\n        })\n    }\n}\n","import { Event } from \"./event\"\nimport { Global } from \"./global\"\nimport { assertType } from \"./misc\"\n\n/**\n * An implementation of `Event` interface, that wraps a given event object.\n * This class controls the internal state of `Event`.\n * @see https://dom.spec.whatwg.org/#interface-event\n */\nexport class EventWrapper<TEventType extends string> extends Event<TEventType> {\n    /**\n     * Wrap a given event object to control states.\n     * @param event The event-like object to wrap.\n     */\n    static wrap<T extends EventLike>(event: T): EventWrapperOf<T> {\n        return new (getWrapperClassOf(event))(event)\n    }\n\n    protected constructor(event: Event<TEventType>) {\n        super(event.type, {\n            bubbles: event.bubbles,\n            cancelable: event.cancelable,\n            composed: event.composed,\n        })\n\n        if (event.cancelBubble) {\n            super.stopPropagation()\n        }\n        if (event.defaultPrevented) {\n            super.preventDefault()\n        }\n\n        internalDataMap.set(this, { original: event })\n\n        // Define accessors\n        const keys = Object.keys(event)\n        for (let i = 0; i < keys.length; ++i) {\n            const key = keys[i]\n            if (!(key in this)) {\n                Object.defineProperty(\n                    this,\n                    key,\n                    defineRedirectDescriptor(event, key),\n                )\n            }\n        }\n    }\n\n    stopPropagation(): void {\n        super.stopPropagation()\n\n        const { original } = $(this)\n        if (\"stopPropagation\" in original) {\n            original.stopPropagation!()\n        }\n    }\n\n    get cancelBubble(): boolean {\n        return super.cancelBubble\n    }\n    set cancelBubble(value: boolean) {\n        super.cancelBubble = value\n\n        const { original } = $(this)\n        if (\"cancelBubble\" in original) {\n            original.cancelBubble = value\n        }\n    }\n\n    stopImmediatePropagation(): void {\n        super.stopImmediatePropagation()\n\n        const { original } = $(this)\n        if (\"stopImmediatePropagation\" in original) {\n            original.stopImmediatePropagation!()\n        }\n    }\n\n    get returnValue(): boolean {\n        return super.returnValue\n    }\n    set returnValue(value: boolean) {\n        super.returnValue = value\n\n        const { original } = $(this)\n        if (\"returnValue\" in original) {\n            original.returnValue = value\n        }\n    }\n\n    preventDefault(): void {\n        super.preventDefault()\n\n        const { original } = $(this)\n        if (\"preventDefault\" in original) {\n            original.preventDefault!()\n        }\n    }\n\n    get timeStamp(): number {\n        const { original } = $(this)\n        if (\"timeStamp\" in original) {\n            return original.timeStamp!\n        }\n        return super.timeStamp\n    }\n}\n\n//------------------------------------------------------------------------------\n// Helpers\n//------------------------------------------------------------------------------\n\ntype EventLike = { readonly type: string } & Partial<Event>\ntype EventWrapperOf<T extends EventLike> = Event<T[\"type\"]> &\n    Omit<T, keyof Event>\n\ninterface EventWrapperInternalData {\n    readonly original: EventLike\n}\n\n/**\n * Private data for event wrappers.\n */\nconst internalDataMap = new WeakMap<any, EventWrapperInternalData>()\n\n/**\n * Get private data.\n * @param event The event object to get private data.\n * @returns The private data of the event.\n */\nfunction $(event: unknown): EventWrapperInternalData {\n    const retv = internalDataMap.get(event)\n    assertType(\n        retv != null,\n        \"'this' is expected an Event object, but got\",\n        event,\n    )\n    return retv\n}\n\n/**\n * Cache for wrapper classes.\n * @type {WeakMap<Object, Function>}\n * @private\n */\nconst wrapperClassCache = new WeakMap()\n\n// Make association for wrappers.\nwrapperClassCache.set(Object.prototype, EventWrapper)\nif (typeof Global !== \"undefined\" && typeof Global.Event !== \"undefined\") {\n    wrapperClassCache.set(Global.Event.prototype, EventWrapper)\n}\n\n/**\n * Get the wrapper class of a given prototype.\n * @param originalEvent The event object to wrap.\n */\nfunction getWrapperClassOf<T extends EventLike>(\n    originalEvent: T,\n): { new (e: T): EventWrapperOf<T> } {\n    const prototype = Object.getPrototypeOf(originalEvent)\n    if (prototype == null) {\n        return EventWrapper as any\n    }\n\n    let wrapper: any = wrapperClassCache.get(prototype)\n    if (wrapper == null) {\n        wrapper = defineWrapper(getWrapperClassOf(prototype), prototype)\n        wrapperClassCache.set(prototype, wrapper)\n    }\n\n    return wrapper\n}\n\n/**\n * Define new wrapper class.\n * @param BaseEventWrapper The base wrapper class.\n * @param originalPrototype The prototype of the original event.\n */\nfunction defineWrapper(BaseEventWrapper: any, originalPrototype: any): any {\n    class CustomEventWrapper extends BaseEventWrapper {}\n\n    const keys = Object.keys(originalPrototype)\n    for (let i = 0; i < keys.length; ++i) {\n        Object.defineProperty(\n            CustomEventWrapper.prototype,\n            keys[i],\n            defineRedirectDescriptor(originalPrototype, keys[i]),\n        )\n    }\n\n    return CustomEventWrapper\n}\n\n/**\n * Get the property descriptor to redirect a given property.\n */\nfunction defineRedirectDescriptor(obj: any, key: string): PropertyDescriptor {\n    const d = Object.getOwnPropertyDescriptor(obj, key)!\n    return {\n        get() {\n            const original: any = $(this).original\n            const value = original[key]\n            if (typeof value === \"function\") {\n                return value.bind(original)\n            }\n            return value\n        },\n        set(value: any) {\n            const original: any = $(this).original\n            original[key] = value\n        },\n        configurable: d.configurable,\n        enumerable: d.enumerable,\n    }\n}\n","import { reportError } from \"./error-handler\"\nimport { Event } from \"./event\" // Used as only type, so no circular.\nimport { EventTarget } from \"./event-target\" // Used as only type, so no circular.\n\n/**\n * The event listener concept.\n * @see https://dom.spec.whatwg.org/#concept-event-listener\n */\nexport interface Listener {\n    /**\n     * The callback function.\n     */\n    readonly callback: Listener.Callback<any, any>\n    /**\n     * The flags of this listener.\n     * This is writable to add the removed flag.\n     */\n    flags: ListenerFlags\n    /**\n     * The `AbortSignal` to remove this listener.\n     */\n    readonly signal: Listener.AbortSignal | undefined\n    /**\n     * The `abort` event listener for the `signal`.\n     * To remove it from the `signal`.\n     */\n    readonly signalListener: (() => void) | undefined\n}\n\nexport namespace Listener {\n    export type Callback<\n        TEventTarget extends EventTarget<any, any>,\n        TEvent extends Event\n    > = CallbackFunction<TEventTarget, TEvent> | CallbackObject<TEvent>\n\n    export interface CallbackFunction<\n        TEventTarget extends EventTarget<any, any>,\n        TEvent extends Event\n    > {\n        (this: TEventTarget, event: TEvent): void\n    }\n\n    export interface CallbackObject<TEvent extends Event> {\n        handleEvent(event: TEvent): void\n    }\n\n    export interface AbortSignal {\n        addEventListener(type: string, callback: Callback<any, Event>): void\n        removeEventListener(type: string, callback: Callback<any, Event>): void\n    }\n}\n\n/**\n * Create a new listener.\n * @param callback The callback function.\n * @param capture The capture flag.\n * @param passive The passive flag.\n * @param once The once flag.\n * @param signal The abort signal.\n * @param signalListener The abort event listener for the abort signal.\n */\nexport function createListener(\n    callback: Listener.Callback<any, any>,\n    capture: boolean,\n    passive: boolean,\n    once: boolean,\n    signal: Listener.AbortSignal | undefined,\n    signalListener: (() => void) | undefined,\n): Listener {\n    return {\n        callback,\n        flags:\n            (capture ? ListenerFlags.Capture : 0) |\n            (passive ? ListenerFlags.Passive : 0) |\n            (once ? ListenerFlags.Once : 0),\n        signal,\n        signalListener,\n    }\n}\n\n/**\n * Set the `removed` flag to the given listener.\n * @param listener The listener to check.\n */\nexport function setRemoved(listener: Listener): void {\n    listener.flags |= ListenerFlags.Removed\n}\n\n/**\n * Check if the given listener has the `capture` flag or not.\n * @param listener The listener to check.\n */\nexport function isCapture(listener: Listener): boolean {\n    return (listener.flags & ListenerFlags.Capture) === ListenerFlags.Capture\n}\n\n/**\n * Check if the given listener has the `passive` flag or not.\n * @param listener The listener to check.\n */\nexport function isPassive(listener: Listener): boolean {\n    return (listener.flags & ListenerFlags.Passive) === ListenerFlags.Passive\n}\n\n/**\n * Check if the given listener has the `once` flag or not.\n * @param listener The listener to check.\n */\nexport function isOnce(listener: Listener): boolean {\n    return (listener.flags & ListenerFlags.Once) === ListenerFlags.Once\n}\n\n/**\n * Check if the given listener has the `removed` flag or not.\n * @param listener The listener to check.\n */\nexport function isRemoved(listener: Listener): boolean {\n    return (listener.flags & ListenerFlags.Removed) === ListenerFlags.Removed\n}\n\n/**\n * Call an event listener.\n * @param listener The listener to call.\n * @param target The event target object for `thisArg`.\n * @param event The event object for the first argument.\n * @param attribute `true` if this callback is an event attribute handler.\n */\nexport function invokeCallback(\n    { callback }: Listener,\n    target: EventTarget<any, any>,\n    event: Event<any>,\n): void {\n    try {\n        if (typeof callback === \"function\") {\n            callback.call(target, event)\n        } else if (typeof callback.handleEvent === \"function\") {\n            callback.handleEvent(event)\n        }\n    } catch (thrownError) {\n        reportError(thrownError)\n    }\n}\n\n//------------------------------------------------------------------------------\n// Helpers\n//------------------------------------------------------------------------------\n\n/**\n * The flags of listeners.\n */\nconst enum ListenerFlags {\n    Capture = 0x01,\n    Passive = 0x02,\n    Once = 0x04,\n    Removed = 0x08,\n}\n","import { createListener, isCapture, Listener, setRemoved } from \"./listener\"\n\n/**\n * Information of an listener list.\n */\nexport interface ListenerList {\n    /**\n     * The callback function of the event attribute handler.\n     */\n    attrCallback: Listener.CallbackFunction<any, any> | undefined\n    /**\n     * The listener of the event attribute handler.\n     */\n    attrListener: Listener | undefined\n    /**\n     * `true` if the `dispatchEvent` method is traversing the current `listeners` array.\n     */\n    cow: boolean\n    /**\n     * The listeners.\n     * This is writable for copy-on-write.\n     */\n    listeners: Listener[]\n}\n\n/**\n * Find the index of given listener.\n * This returns `-1` if not found.\n * @param list The listener list.\n * @param callback The callback function to find.\n * @param capture The capture flag to find.\n */\nexport function findIndexOfListener(\n    { listeners }: ListenerList,\n    callback: Listener.Callback<any, any>,\n    capture: boolean,\n): number {\n    for (let i = 0; i < listeners.length; ++i) {\n        if (\n            listeners[i].callback === callback &&\n            isCapture(listeners[i]) === capture\n        ) {\n            return i\n        }\n    }\n    return -1\n}\n\n/**\n * Add the given listener.\n * Does copy-on-write if needed.\n * @param list The listener list.\n * @param callback The callback function.\n * @param capture The capture flag.\n * @param passive The passive flag.\n * @param once The once flag.\n * @param signal The abort signal.\n */\nexport function addListener(\n    list: ListenerList,\n    callback: Listener.Callback<any, any>,\n    capture: boolean,\n    passive: boolean,\n    once: boolean,\n    signal: Listener.AbortSignal | undefined,\n): Listener {\n    let signalListener: (() => void) | undefined\n    if (signal) {\n        signalListener = removeListener.bind(null, list, callback, capture)\n        signal.addEventListener(\"abort\", signalListener)\n    }\n\n    const listener = createListener(\n        callback,\n        capture,\n        passive,\n        once,\n        signal,\n        signalListener,\n    )\n\n    if (list.cow) {\n        list.cow = false\n        list.listeners = [...list.listeners, listener]\n    } else {\n        list.listeners.push(listener)\n    }\n\n    return listener\n}\n\n/**\n * Remove a listener.\n * @param list The listener list.\n * @param callback The callback function to find.\n * @param capture The capture flag to find.\n * @returns `true` if it mutated the list directly.\n */\nexport function removeListener(\n    list: ListenerList,\n    callback: Listener.Callback<any, any>,\n    capture: boolean,\n): boolean {\n    const index = findIndexOfListener(list, callback, capture)\n    if (index !== -1) {\n        return removeListenerAt(list, index)\n    }\n    return false\n}\n\n/**\n * Remove a listener.\n * @param list The listener list.\n * @param index The index of the target listener.\n * @param disableCow Disable copy-on-write if true.\n * @returns `true` if it mutated the `listeners` array directly.\n */\nexport function removeListenerAt(\n    list: ListenerList,\n    index: number,\n    disableCow = false,\n): boolean {\n    const listener = list.listeners[index]\n\n    // Set the removed flag.\n    setRemoved(listener)\n\n    // Dispose the abort signal listener if exists.\n    if (listener.signal) {\n        listener.signal.removeEventListener(\"abort\", listener.signalListener!)\n    }\n\n    // Remove it from the array.\n    if (list.cow && !disableCow) {\n        list.cow = false\n        list.listeners = list.listeners.filter((_, i) => i !== index)\n        return false\n    }\n    list.listeners.splice(index, 1)\n    return true\n}\n","import { ListenerList } from \"./listener-list\"\n\n/**\n * The map from event types to each listener list.\n */\nexport interface ListenerListMap {\n    [type: string]: ListenerList | undefined\n}\n\n/**\n * Create a new `ListenerListMap` object.\n */\nexport function createListenerListMap(): ListenerListMap {\n    return Object.create(null)\n}\n\n/**\n * Get the listener list of the given type.\n * If the listener list has not been initialized, initialize and return it.\n * @param listenerMap The listener list map.\n * @param type The event type to get.\n */\nexport function ensureListenerList(\n    listenerMap: Record<string, ListenerList | undefined>,\n    type: string,\n): ListenerList {\n    return (listenerMap[type] ??= {\n        attrCallback: undefined,\n        attrListener: undefined,\n        cow: false,\n        listeners: [],\n    })\n}\n","import { createInvalidStateError } from \"./dom-exception\"\nimport { Event, getEventInternalData } from \"./event\"\nimport { EventWrapper } from \"./event-wrapper\"\nimport { Global } from \"./global\"\nimport {\n    invokeCallback,\n    isCapture,\n    isOnce,\n    isPassive,\n    isRemoved,\n    Listener,\n} from \"./listener\"\nimport {\n    addListener,\n    findIndexOfListener,\n    removeListener,\n    removeListenerAt,\n} from \"./listener-list\"\nimport {\n    createListenerListMap,\n    ensureListenerList,\n    ListenerListMap,\n} from \"./listener-list-map\"\nimport { assertType, format } from \"./misc\"\nimport {\n    EventListenerWasDuplicated,\n    InvalidEventListener,\n    OptionWasIgnored,\n} from \"./warnings\"\n\n/**\n * An implementation of the `EventTarget` interface.\n * @see https://dom.spec.whatwg.org/#eventtarget\n */\nexport class EventTarget<\n    TEventMap extends Record<string, Event> = Record<string, Event>,\n    TMode extends \"standard\" | \"strict\" = \"standard\"\n> {\n    /**\n     * Initialize this instance.\n     */\n    constructor() {\n        internalDataMap.set(this, createListenerListMap())\n    }\n\n    /**\n     * Add an event listener.\n     * @param type The event type.\n     * @param callback The event listener.\n     * @param options Options.\n     */\n    addEventListener<T extends string & keyof TEventMap>(\n        type: T,\n        callback?: EventTarget.EventListener<this, TEventMap[T]> | null,\n        options?: EventTarget.AddOptions,\n    ): void\n\n    /**\n     * Add an event listener.\n     * @param type The event type.\n     * @param callback The event listener.\n     * @param options Options.\n     */\n    addEventListener(\n        type: string,\n        callback?: EventTarget.FallbackEventListener<this, TMode>,\n        options?: EventTarget.AddOptions,\n    ): void\n\n    /**\n     * Add an event listener.\n     * @param type The event type.\n     * @param callback The event listener.\n     * @param capture The capture flag.\n     * @deprecated Use `{capture: boolean}` object instead of a boolean value.\n     */\n    addEventListener<T extends string & keyof TEventMap>(\n        type: T,\n        callback:\n            | EventTarget.EventListener<this, TEventMap[T]>\n            | null\n            | undefined,\n        capture: boolean,\n    ): void\n\n    /**\n     * Add an event listener.\n     * @param type The event type.\n     * @param callback The event listener.\n     * @param capture The capture flag.\n     * @deprecated Use `{capture: boolean}` object instead of a boolean value.\n     */\n    addEventListener(\n        type: string,\n        callback: EventTarget.FallbackEventListener<this, TMode>,\n        capture: boolean,\n    ): void\n\n    // Implementation\n    addEventListener<T extends string & keyof TEventMap>(\n        type0: T,\n        callback0?: EventTarget.EventListener<this, TEventMap[T]> | null,\n        options0?: boolean | EventTarget.AddOptions,\n    ): void {\n        const listenerMap = $(this)\n        const {\n            callback,\n            capture,\n            once,\n            passive,\n            signal,\n            type,\n        } = normalizeAddOptions(type0, callback0, options0)\n        if (callback == null || signal?.aborted) {\n            return\n        }\n        const list = ensureListenerList(listenerMap, type)\n\n        // Find existing listener.\n        const i = findIndexOfListener(list, callback, capture)\n        if (i !== -1) {\n            warnDuplicate(list.listeners[i], passive, once, signal)\n            return\n        }\n\n        // Add the new listener.\n        addListener(list, callback, capture, passive, once, signal)\n    }\n\n    /**\n     * Remove an added event listener.\n     * @param type The event type.\n     * @param callback The event listener.\n     * @param options Options.\n     */\n    removeEventListener<T extends string & keyof TEventMap>(\n        type: T,\n        callback?: EventTarget.EventListener<this, TEventMap[T]> | null,\n        options?: EventTarget.Options,\n    ): void\n\n    /**\n     * Remove an added event listener.\n     * @param type The event type.\n     * @param callback The event listener.\n     * @param options Options.\n     */\n    removeEventListener(\n        type: string,\n        callback?: EventTarget.FallbackEventListener<this, TMode>,\n        options?: EventTarget.Options,\n    ): void\n\n    /**\n     * Remove an added event listener.\n     * @param type The event type.\n     * @param callback The event listener.\n     * @param capture The capture flag.\n     * @deprecated Use `{capture: boolean}` object instead of a boolean value.\n     */\n    removeEventListener<T extends string & keyof TEventMap>(\n        type: T,\n        callback:\n            | EventTarget.EventListener<this, TEventMap[T]>\n            | null\n            | undefined,\n        capture: boolean,\n    ): void\n\n    /**\n     * Remove an added event listener.\n     * @param type The event type.\n     * @param callback The event listener.\n     * @param capture The capture flag.\n     * @deprecated Use `{capture: boolean}` object instead of a boolean value.\n     */\n    removeEventListener(\n        type: string,\n        callback: EventTarget.FallbackEventListener<this, TMode>,\n        capture: boolean,\n    ): void\n\n    // Implementation\n    removeEventListener<T extends string & keyof TEventMap>(\n        type0: T,\n        callback0?: EventTarget.EventListener<this, TEventMap[T]> | null,\n        options0?: boolean | EventTarget.Options,\n    ): void {\n        const listenerMap = $(this)\n        const { callback, capture, type } = normalizeOptions(\n            type0,\n            callback0,\n            options0,\n        )\n        const list = listenerMap[type]\n\n        if (callback != null && list) {\n            removeListener(list, callback, capture)\n        }\n    }\n\n    /**\n     * Dispatch an event.\n     * @param event The `Event` object to dispatch.\n     */\n    dispatchEvent<T extends string & keyof TEventMap>(\n        event: EventTarget.EventData<TEventMap, TMode, T>,\n    ): boolean\n\n    /**\n     * Dispatch an event.\n     * @param event The `Event` object to dispatch.\n     */\n    dispatchEvent(event: EventTarget.FallbackEvent<TMode>): boolean\n\n    // Implementation\n    dispatchEvent(\n        e:\n            | EventTarget.EventData<TEventMap, TMode, string>\n            | EventTarget.FallbackEvent<TMode>,\n    ): boolean {\n        const list = $(this)[String(e.type)]\n        if (list == null) {\n            return true\n        }\n\n        const event = e instanceof Event ? e : EventWrapper.wrap(e)\n        const eventData = getEventInternalData(event, \"event\")\n        if (eventData.dispatchFlag) {\n            throw createInvalidStateError(\"This event has been in dispatching.\")\n        }\n\n        eventData.dispatchFlag = true\n        eventData.target = eventData.currentTarget = this\n\n        if (!eventData.stopPropagationFlag) {\n            const { cow, listeners } = list\n\n            // Set copy-on-write flag.\n            list.cow = true\n\n            // Call listeners.\n            for (let i = 0; i < listeners.length; ++i) {\n                const listener = listeners[i]\n\n                // Skip if removed.\n                if (isRemoved(listener)) {\n                    continue\n                }\n\n                // Remove this listener if has the `once` flag.\n                if (isOnce(listener) && removeListenerAt(list, i, !cow)) {\n                    // Because this listener was removed, the next index is the\n                    // same as the current value.\n                    i -= 1\n                }\n\n                // Call this listener with the `passive` flag.\n                eventData.inPassiveListenerFlag = isPassive(listener)\n                invokeCallback(listener, this, event)\n                eventData.inPassiveListenerFlag = false\n\n                // Stop if the `event.stopImmediatePropagation()` method was called.\n                if (eventData.stopImmediatePropagationFlag) {\n                    break\n                }\n            }\n\n            // Restore copy-on-write flag.\n            if (!cow) {\n                list.cow = false\n            }\n        }\n\n        eventData.target = null\n        eventData.currentTarget = null\n        eventData.stopImmediatePropagationFlag = false\n        eventData.stopPropagationFlag = false\n        eventData.dispatchFlag = false\n\n        return !eventData.canceledFlag\n    }\n}\n\nexport namespace EventTarget {\n    /**\n     * The event listener.\n     */\n    export type EventListener<\n        TEventTarget extends EventTarget<any, any>,\n        TEvent extends Event\n    > = CallbackFunction<TEventTarget, TEvent> | CallbackObject<TEvent>\n\n    /**\n     * The event listener function.\n     */\n    export interface CallbackFunction<\n        TEventTarget extends EventTarget<any, any>,\n        TEvent extends Event\n    > {\n        (this: TEventTarget, event: TEvent): void\n    }\n\n    /**\n     * The event listener object.\n     * @see https://dom.spec.whatwg.org/#callbackdef-eventlistener\n     */\n    export interface CallbackObject<TEvent extends Event> {\n        handleEvent(event: TEvent): void\n    }\n\n    /**\n     * The common options for both `addEventListener` and `removeEventListener` methods.\n     * @see https://dom.spec.whatwg.org/#dictdef-eventlisteneroptions\n     */\n    export interface Options {\n        capture?: boolean\n    }\n\n    /**\n     * The options for the `addEventListener` methods.\n     * @see https://dom.spec.whatwg.org/#dictdef-addeventlisteneroptions\n     */\n    export interface AddOptions extends Options {\n        passive?: boolean\n        once?: boolean\n        signal?: AbortSignal | null | undefined\n    }\n\n    /**\n     * The abort signal.\n     * @see https://dom.spec.whatwg.org/#abortsignal\n     */\n    export interface AbortSignal extends EventTarget<{ abort: Event }> {\n        readonly aborted: boolean\n        onabort: CallbackFunction<this, Event> | null\n    }\n\n    /**\n     * The event data to dispatch in strict mode.\n     */\n    export type EventData<\n        TEventMap extends Record<string, Event>,\n        TMode extends \"standard\" | \"strict\",\n        TEventType extends string\n    > = TMode extends \"strict\"\n        ? IsValidEventMap<TEventMap> extends true\n            ? ExplicitType<TEventType> &\n                  Omit<TEventMap[TEventType], keyof Event> &\n                  Partial<Omit<Event, \"type\">>\n            : never\n        : never\n\n    /**\n     * Define explicit `type` property if `T` is a string literal.\n     * Otherwise, never.\n     */\n    export type ExplicitType<T extends string> = string extends T\n        ? never\n        : { readonly type: T }\n\n    /**\n     * The event listener type in standard mode.\n     * Otherwise, never.\n     */\n    export type FallbackEventListener<\n        TEventTarget extends EventTarget<any, any>,\n        TMode extends \"standard\" | \"strict\"\n    > = TMode extends \"standard\"\n        ? EventListener<TEventTarget, Event> | null | undefined\n        : never\n\n    /**\n     * The event type in standard mode.\n     * Otherwise, never.\n     */\n    export type FallbackEvent<\n        TMode extends \"standard\" | \"strict\"\n    > = TMode extends \"standard\" ? Event : never\n\n    /**\n     * Check if given event map is valid.\n     * It's valid if the keys of the event map are narrower than `string`.\n     */\n    export type IsValidEventMap<T> = string extends keyof T ? false : true\n}\n\nexport { $ as getEventTargetInternalData }\n\n//------------------------------------------------------------------------------\n// Helpers\n//------------------------------------------------------------------------------\n\n/**\n * Internal data for EventTarget\n */\ntype EventTargetInternalData = ListenerListMap\n\n/**\n * Internal data.\n */\nconst internalDataMap = new WeakMap<any, EventTargetInternalData>()\n\n/**\n * Get private data.\n * @param target The event target object to get private data.\n * @param name The variable name to report.\n * @returns The private data of the event.\n */\nfunction $(target: any, name = \"this\"): EventTargetInternalData {\n    const retv = internalDataMap.get(target)\n    assertType(\n        retv != null,\n        \"'%s' must be an object that EventTarget constructor created, but got another one: %o\",\n        name,\n        target,\n    )\n    return retv\n}\n\n/**\n * Normalize options.\n * @param options The options to normalize.\n */\nfunction normalizeAddOptions(\n    type: string,\n    callback: EventTarget.EventListener<any, any> | null | undefined,\n    options: boolean | EventTarget.AddOptions | undefined,\n): {\n    type: string\n    callback: EventTarget.EventListener<any, any> | undefined\n    capture: boolean\n    passive: boolean\n    once: boolean\n    signal: EventTarget.AbortSignal | undefined\n} {\n    assertCallback(callback)\n\n    if (typeof options === \"object\" && options !== null) {\n        return {\n            type: String(type),\n            callback: callback ?? undefined,\n            capture: Boolean(options.capture),\n            passive: Boolean(options.passive),\n            once: Boolean(options.once),\n            signal: options.signal ?? undefined,\n        }\n    }\n\n    return {\n        type: String(type),\n        callback: callback ?? undefined,\n        capture: Boolean(options),\n        passive: false,\n        once: false,\n        signal: undefined,\n    }\n}\n\n/**\n * Normalize options.\n * @param options The options to normalize.\n */\nfunction normalizeOptions(\n    type: string,\n    callback: EventTarget.EventListener<any, any> | null | undefined,\n    options: boolean | EventTarget.Options | undefined,\n): {\n    type: string\n    callback: EventTarget.EventListener<any, any> | undefined\n    capture: boolean\n} {\n    assertCallback(callback)\n\n    if (typeof options === \"object\" && options !== null) {\n        return {\n            type: String(type),\n            callback: callback ?? undefined,\n            capture: Boolean(options.capture),\n        }\n    }\n\n    return {\n        type: String(type),\n        callback: callback ?? undefined,\n        capture: Boolean(options),\n    }\n}\n\n/**\n * Assert the type of 'callback' argument.\n * @param callback The callback to check.\n */\nfunction assertCallback(callback: any): void {\n    if (\n        typeof callback === \"function\" ||\n        (typeof callback === \"object\" &&\n            callback !== null &&\n            typeof callback.handleEvent === \"function\")\n    ) {\n        return\n    }\n    if (callback == null || typeof callback === \"object\") {\n        InvalidEventListener.warn(callback)\n        return\n    }\n\n    throw new TypeError(format(InvalidEventListener.message, [callback]))\n}\n\n/**\n * Print warning for duplicated.\n * @param listener The current listener that is duplicated.\n * @param passive The passive flag of the new duplicated listener.\n * @param once The once flag of the new duplicated listener.\n * @param signal The signal object of the new duplicated listener.\n */\nfunction warnDuplicate(\n    listener: Listener,\n    passive: boolean,\n    once: boolean,\n    signal: EventTarget.AbortSignal | undefined,\n): void {\n    EventListenerWasDuplicated.warn(\n        isCapture(listener) ? \"capture\" : \"bubble\",\n        listener.callback,\n    )\n\n    if (isPassive(listener) !== passive) {\n        OptionWasIgnored.warn(\"passive\")\n    }\n    if (isOnce(listener) !== once) {\n        OptionWasIgnored.warn(\"once\")\n    }\n    if (listener.signal !== signal) {\n        OptionWasIgnored.warn(\"signal\")\n    }\n}\n\n// Set enumerable\nconst keys = Object.getOwnPropertyNames(EventTarget.prototype)\nfor (let i = 0; i < keys.length; ++i) {\n    if (keys[i] === \"constructor\") {\n        continue\n    }\n    Object.defineProperty(EventTarget.prototype, keys[i], { enumerable: true })\n}\n\n// Ensure `eventTarget instanceof window.EventTarget` is `true`.\nif (\n    typeof Global !== \"undefined\" &&\n    typeof Global.EventTarget !== \"undefined\"\n) {\n    Object.setPrototypeOf(EventTarget.prototype, Global.EventTarget.prototype)\n}\n","import { Event } from \"./event\"\nimport { EventTarget, getEventTargetInternalData } from \"./event-target\"\nimport { addListener, ListenerList, removeListener } from \"./listener-list\"\nimport { ensureListenerList } from \"./listener-list-map\"\nimport { InvalidAttributeHandler } from \"./warnings\"\n\n/**\n * Get the current value of a given event attribute.\n * @param target The `EventTarget` object to get.\n * @param type The event type.\n */\nexport function getEventAttributeValue<\n    TEventTarget extends EventTarget<any, any>,\n    TEvent extends Event\n>(\n    target: TEventTarget,\n    type: string,\n): EventTarget.CallbackFunction<TEventTarget, TEvent> | null {\n    const listMap = getEventTargetInternalData(target, \"target\")\n    return listMap[type]?.attrCallback ?? null\n}\n\n/**\n * Set an event listener to a given event attribute.\n * @param target The `EventTarget` object to set.\n * @param type The event type.\n * @param callback The event listener.\n */\nexport function setEventAttributeValue(\n    target: EventTarget<any, any>,\n    type: string,\n    callback: EventTarget.CallbackFunction<any, any> | null,\n): void {\n    if (callback != null && typeof callback !== \"function\") {\n        InvalidAttributeHandler.warn(callback)\n    }\n\n    if (\n        typeof callback === \"function\" ||\n        (typeof callback === \"object\" && callback !== null)\n    ) {\n        upsertEventAttributeListener(target, type, callback)\n    } else {\n        removeEventAttributeListener(target, type)\n    }\n}\n\n//------------------------------------------------------------------------------\n// Helpers\n//------------------------------------------------------------------------------\n\n/**\n * Update or insert the given event attribute handler.\n * @param target The `EventTarget` object to set.\n * @param type The event type.\n * @param callback The event listener.\n */\nfunction upsertEventAttributeListener<\n    TEventTarget extends EventTarget<any, any>\n>(\n    target: TEventTarget,\n    type: string,\n    callback: EventTarget.CallbackFunction<TEventTarget, any>,\n): void {\n    const list = ensureListenerList(\n        getEventTargetInternalData(target, \"target\"),\n        String(type),\n    )\n    list.attrCallback = callback\n\n    if (list.attrListener == null) {\n        list.attrListener = addListener(\n            list,\n            defineEventAttributeCallback(list),\n            false,\n            false,\n            false,\n            undefined,\n        )\n    }\n}\n\n/**\n * Remove the given event attribute handler.\n * @param target The `EventTarget` object to remove.\n * @param type The event type.\n * @param callback The event listener.\n */\nfunction removeEventAttributeListener(\n    target: EventTarget<any, any>,\n    type: string,\n): void {\n    const listMap = getEventTargetInternalData(target, \"target\")\n    const list = listMap[String(type)]\n    if (list && list.attrListener) {\n        removeListener(list, list.attrListener.callback, false)\n        list.attrCallback = list.attrListener = undefined\n    }\n}\n\n/**\n * Define the callback function for the given listener list object.\n * It calls `attrCallback` property if the property value is a function.\n * @param list The `ListenerList` object.\n */\nfunction defineEventAttributeCallback(\n    list: ListenerList,\n): EventTarget.CallbackFunction<any, any> {\n    return function (event) {\n        const callback = list.attrCallback\n        if (typeof callback === \"function\") {\n            callback.call(this, event)\n        }\n    }\n}\n","import { Event } from \"./event\"\nimport {\n    getEventAttributeValue,\n    setEventAttributeValue,\n} from \"./event-attribute-handler\"\nimport { EventTarget } from \"./event-target\"\n\n/**\n * Define an `EventTarget` class that has event attibutes.\n * @param types The types to define event attributes.\n * @deprecated Use `getEventAttributeValue`/`setEventAttributeValue` pair on your derived class instead because of static analysis friendly.\n */\nexport function defineCustomEventTarget<\n    TEventMap extends Record<string, Event>,\n    TMode extends \"standard\" | \"strict\" = \"standard\"\n>(\n    ...types: (string & keyof TEventMap)[]\n): defineCustomEventTarget.CustomEventTargetConstructor<TEventMap, TMode> {\n    class CustomEventTarget extends EventTarget {}\n    for (let i = 0; i < types.length; ++i) {\n        defineEventAttribute(CustomEventTarget.prototype, types[i])\n    }\n\n    return CustomEventTarget as any\n}\n\nexport namespace defineCustomEventTarget {\n    /**\n     * The interface of CustomEventTarget constructor.\n     */\n    export type CustomEventTargetConstructor<\n        TEventMap extends Record<string, Event>,\n        TMode extends \"standard\" | \"strict\"\n    > = {\n        /**\n         * Create a new instance.\n         */\n        new (): CustomEventTarget<TEventMap, TMode>\n        /**\n         * prototype object.\n         */\n        prototype: CustomEventTarget<TEventMap, TMode>\n    }\n\n    /**\n     * The interface of CustomEventTarget.\n     */\n    export type CustomEventTarget<\n        TEventMap extends Record<string, Event>,\n        TMode extends \"standard\" | \"strict\"\n    > = EventTarget<TEventMap, TMode> &\n        defineEventAttribute.EventAttributes<any, TEventMap>\n}\n\n/**\n * Define an event attribute.\n * @param target The `EventTarget` object to define an event attribute.\n * @param type The event type to define.\n * @param _eventClass Unused, but to infer `Event` class type.\n * @deprecated Use `getEventAttributeValue`/`setEventAttributeValue` pair on your derived class instead because of static analysis friendly.\n */\nexport function defineEventAttribute<\n    TEventTarget extends EventTarget,\n    TEventType extends string,\n    TEventConstrucor extends typeof Event\n>(\n    target: TEventTarget,\n    type: TEventType,\n    _eventClass?: TEventConstrucor,\n): asserts target is TEventTarget &\n    defineEventAttribute.EventAttributes<\n        TEventTarget,\n        Record<TEventType, InstanceType<TEventConstrucor>>\n    > {\n    Object.defineProperty(target, `on${type}`, {\n        get() {\n            return getEventAttributeValue(this, type)\n        },\n        set(value) {\n            setEventAttributeValue(this, type, value)\n        },\n        configurable: true,\n        enumerable: true,\n    })\n}\n\nexport namespace defineEventAttribute {\n    /**\n     * Definition of event attributes.\n     */\n    export type EventAttributes<\n        TEventTarget extends EventTarget<any, any>,\n        TEventMap extends Record<string, Event>\n    > = {\n        [P in string &\n            keyof TEventMap as `on${P}`]: EventTarget.CallbackFunction<\n            TEventTarget,\n            TEventMap[P]\n        > | null\n    }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}