{"ast":null,"code":"import _createClass from \"@babel/runtime/helpers/createClass\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nimport { Event } from 'event-target-shim';\nvar RTCErrorEvent = function (_Event) {\n  function RTCErrorEvent(type, func, message) {\n    var _this;\n    _classCallCheck(this, RTCErrorEvent);\n    _this = _callSuper(this, RTCErrorEvent, [type]);\n    _this.func = func;\n    _this.message = message;\n    return _this;\n  }\n  _inherits(RTCErrorEvent, _Event);\n  return _createClass(RTCErrorEvent);\n}(Event);\nexport { RTCErrorEvent as default };","map":{"version":3,"names":["Event","RTCErrorEvent","_Event","type","func","message","_this","_classCallCheck","_callSuper","_inherits","_createClass","default"],"sources":["/workspaces/telemedicine-platform/mobile-app/node_modules/react-native-webrtc/src/RTCErrorEvent.ts"],"sourcesContent":["import { Event } from 'event-target-shim';\n\ntype RTCPeerConnectionErrorFunc =\n    | 'addTransceiver'\n    | 'getTransceivers'\n    | 'addTrack'\n    | 'removeTrack';\n\n/**\n * @brief This class Represents internal error happening on the native side as\n * part of asynchronous invocations to synchronous web APIs.\n */\nexport default class RTCErrorEvent<TEventType extends RTCPeerConnectionErrorFunc> extends Event<TEventType> {\n    readonly func: RTCPeerConnectionErrorFunc;\n    readonly message: string;\n    constructor(type: TEventType, func: RTCPeerConnectionErrorFunc, message: string) {\n        super(type);\n        this.func = func;\n        this.message = message;\n    }\n}"],"mappings":";;;;;;;AAAA,SAASA,KAAK,QAAQ,mBAAmB;AAAA,IAYpBC,aAAa,aAAAC,MAAA;EAG9B,SAAAD,cAAYE,IAAgB,EAAEC,IAAgC,EAAEC,OAAe,EAAE;IAAA,IAAAC,KAAA;IAAAC,eAAA,OAAAN,aAAA;IAC7EK,KAAA,GAAAE,UAAA,OAAAP,aAAA,GAAME,IAAI;IACVG,KAAA,CAAKF,IAAI,GAAGA,IAAI;IAChBE,KAAA,CAAKD,OAAO,GAAGA,OAAO;IAAA,OAAAC,KAAA;EAC1B;EAAAG,SAAA,CAAAR,aAAA,EAAAC,MAAA;EAAA,OAAAQ,YAAA,CAAAT,aAAA;AAAA,EAPsFD,KAAK;AAAA,SAA1EC,aAAa,IAAAU,OAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}