{"ast":null,"code":"import React from 'react';\nimport PanResponder from \"react-native-web/dist/exports/PanResponder\";\nexport function startShouldSetPanResponder() {\n  return true;\n}\nexport function moveShouldSetPanResponder(_event, gesture) {\n  const {\n    dx,\n    dy\n  } = gesture;\n  const offset = 2;\n  return Math.abs(dx) > offset || Math.abs(dy) > offset;\n}\nexport function shouldDismissView(newAnimatedValue, gesture) {\n  const dismissThreshold = 0.65;\n  const {\n    vy,\n    dy\n  } = gesture;\n  return newAnimatedValue <= dismissThreshold || Math.abs(vy) >= dismissThreshold && dy < 0;\n}\nexport function usePanResponder({\n  animatedValue,\n  computeNewAnimatedValueForGesture,\n  onDismiss,\n  onRestore,\n  onStart,\n  onEnd,\n  disable\n}) {\n  const onGrant = React.useCallback(() => {\n    if (disable) return;\n    onStart();\n  }, [onStart, disable]);\n  const onMove = React.useCallback((_event, gesture) => {\n    if (disable) return;\n    const newAnimatedValue = computeNewAnimatedValueForGesture(gesture);\n    animatedValue.current?.setValue(newAnimatedValue);\n  }, [animatedValue, computeNewAnimatedValueForGesture, disable]);\n  const onRelease = React.useCallback((_event, gesture) => {\n    if (disable) return;\n    const newAnimatedValue = computeNewAnimatedValueForGesture(gesture);\n    onEnd();\n    if (shouldDismissView(newAnimatedValue, gesture)) {\n      onDismiss();\n    } else {\n      onRestore();\n    }\n  }, [computeNewAnimatedValueForGesture, onEnd, onDismiss, onRestore, disable]);\n  const panResponder = React.useMemo(() => PanResponder.create({\n    onStartShouldSetPanResponder: startShouldSetPanResponder,\n    onPanResponderGrant: onGrant,\n    onMoveShouldSetPanResponder: moveShouldSetPanResponder,\n    onMoveShouldSetPanResponderCapture: moveShouldSetPanResponder,\n    onPanResponderMove: onMove,\n    onPanResponderRelease: onRelease\n  }), [onMove, onRelease, onGrant]);\n  return {\n    panResponder,\n    onGrant,\n    onMove,\n    onRelease\n  };\n}","map":{"version":3,"names":["React","PanResponder","startShouldSetPanResponder","moveShouldSetPanResponder","_event","gesture","dx","dy","offset","Math","abs","shouldDismissView","newAnimatedValue","dismissThreshold","vy","usePanResponder","animatedValue","computeNewAnimatedValueForGesture","onDismiss","onRestore","onStart","onEnd","disable","onGrant","useCallback","onMove","current","setValue","onRelease","panResponder","useMemo","create","onStartShouldSetPanResponder","onPanResponderGrant","onMoveShouldSetPanResponder","onMoveShouldSetPanResponderCapture","onPanResponderMove","onPanResponderRelease"],"sources":["/workspaces/telemedicine-platform/mobile-app/node_modules/react-native-toast-message/lib/src/hooks/usePanResponder.js"],"sourcesContent":["import React from 'react';\nimport { PanResponder } from 'react-native';\nexport function startShouldSetPanResponder() {\n    return true;\n}\nexport function moveShouldSetPanResponder(_event, gesture) {\n    const { dx, dy } = gesture;\n    // Fixes onPress handler\n    // https://github.com/calintamas/react-native-toast-message/issues/113\n    const offset = 2;\n    return Math.abs(dx) > offset || Math.abs(dy) > offset;\n}\nexport function shouldDismissView(newAnimatedValue, gesture) {\n    const dismissThreshold = 0.65;\n    const { vy, dy } = gesture;\n    return (newAnimatedValue <= dismissThreshold ||\n        (Math.abs(vy) >= dismissThreshold && dy < 0));\n}\nexport function usePanResponder({ animatedValue, computeNewAnimatedValueForGesture, onDismiss, onRestore, onStart, onEnd, disable }) {\n    const onGrant = React.useCallback(() => {\n        if (disable)\n            return;\n        onStart();\n    }, [onStart, disable]);\n    const onMove = React.useCallback((_event, gesture) => {\n        if (disable)\n            return;\n        const newAnimatedValue = computeNewAnimatedValueForGesture(gesture);\n        animatedValue.current?.setValue(newAnimatedValue);\n    }, [animatedValue, computeNewAnimatedValueForGesture, disable]);\n    const onRelease = React.useCallback((_event, gesture) => {\n        if (disable)\n            return;\n        const newAnimatedValue = computeNewAnimatedValueForGesture(gesture);\n        onEnd();\n        if (shouldDismissView(newAnimatedValue, gesture)) {\n            onDismiss();\n        }\n        else {\n            onRestore();\n        }\n    }, [computeNewAnimatedValueForGesture, onEnd, onDismiss, onRestore, disable]);\n    const panResponder = React.useMemo(() => PanResponder.create({\n        onStartShouldSetPanResponder: startShouldSetPanResponder,\n        onPanResponderGrant: onGrant,\n        onMoveShouldSetPanResponder: moveShouldSetPanResponder,\n        onMoveShouldSetPanResponderCapture: moveShouldSetPanResponder,\n        onPanResponderMove: onMove,\n        onPanResponderRelease: onRelease\n    }), [onMove, onRelease, onGrant]);\n    return {\n        panResponder,\n        onGrant,\n        onMove,\n        onRelease,\n    };\n}\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,YAAA;AAE1B,OAAO,SAASC,0BAA0BA,CAAA,EAAG;EACzC,OAAO,IAAI;AACf;AACA,OAAO,SAASC,yBAAyBA,CAACC,MAAM,EAAEC,OAAO,EAAE;EACvD,MAAM;IAAEC,EAAE;IAAEC;EAAG,CAAC,GAAGF,OAAO;EAG1B,MAAMG,MAAM,GAAG,CAAC;EAChB,OAAOC,IAAI,CAACC,GAAG,CAACJ,EAAE,CAAC,GAAGE,MAAM,IAAIC,IAAI,CAACC,GAAG,CAACH,EAAE,CAAC,GAAGC,MAAM;AACzD;AACA,OAAO,SAASG,iBAAiBA,CAACC,gBAAgB,EAAEP,OAAO,EAAE;EACzD,MAAMQ,gBAAgB,GAAG,IAAI;EAC7B,MAAM;IAAEC,EAAE;IAAEP;EAAG,CAAC,GAAGF,OAAO;EAC1B,OAAQO,gBAAgB,IAAIC,gBAAgB,IACvCJ,IAAI,CAACC,GAAG,CAACI,EAAE,CAAC,IAAID,gBAAgB,IAAIN,EAAE,GAAG,CAAE;AACpD;AACA,OAAO,SAASQ,eAAeA,CAAC;EAAEC,aAAa;EAAEC,iCAAiC;EAAEC,SAAS;EAAEC,SAAS;EAAEC,OAAO;EAAEC,KAAK;EAAEC;AAAQ,CAAC,EAAE;EACjI,MAAMC,OAAO,GAAGvB,KAAK,CAACwB,WAAW,CAAC,MAAM;IACpC,IAAIF,OAAO,EACP;IACJF,OAAO,CAAC,CAAC;EACb,CAAC,EAAE,CAACA,OAAO,EAAEE,OAAO,CAAC,CAAC;EACtB,MAAMG,MAAM,GAAGzB,KAAK,CAACwB,WAAW,CAAC,CAACpB,MAAM,EAAEC,OAAO,KAAK;IAClD,IAAIiB,OAAO,EACP;IACJ,MAAMV,gBAAgB,GAAGK,iCAAiC,CAACZ,OAAO,CAAC;IACnEW,aAAa,CAACU,OAAO,EAAEC,QAAQ,CAACf,gBAAgB,CAAC;EACrD,CAAC,EAAE,CAACI,aAAa,EAAEC,iCAAiC,EAAEK,OAAO,CAAC,CAAC;EAC/D,MAAMM,SAAS,GAAG5B,KAAK,CAACwB,WAAW,CAAC,CAACpB,MAAM,EAAEC,OAAO,KAAK;IACrD,IAAIiB,OAAO,EACP;IACJ,MAAMV,gBAAgB,GAAGK,iCAAiC,CAACZ,OAAO,CAAC;IACnEgB,KAAK,CAAC,CAAC;IACP,IAAIV,iBAAiB,CAACC,gBAAgB,EAAEP,OAAO,CAAC,EAAE;MAC9Ca,SAAS,CAAC,CAAC;IACf,CAAC,MACI;MACDC,SAAS,CAAC,CAAC;IACf;EACJ,CAAC,EAAE,CAACF,iCAAiC,EAAEI,KAAK,EAAEH,SAAS,EAAEC,SAAS,EAAEG,OAAO,CAAC,CAAC;EAC7E,MAAMO,YAAY,GAAG7B,KAAK,CAAC8B,OAAO,CAAC,MAAM7B,YAAY,CAAC8B,MAAM,CAAC;IACzDC,4BAA4B,EAAE9B,0BAA0B;IACxD+B,mBAAmB,EAAEV,OAAO;IAC5BW,2BAA2B,EAAE/B,yBAAyB;IACtDgC,kCAAkC,EAAEhC,yBAAyB;IAC7DiC,kBAAkB,EAAEX,MAAM;IAC1BY,qBAAqB,EAAET;EAC3B,CAAC,CAAC,EAAE,CAACH,MAAM,EAAEG,SAAS,EAAEL,OAAO,CAAC,CAAC;EACjC,OAAO;IACHM,YAAY;IACZN,OAAO;IACPE,MAAM;IACNG;EACJ,CAAC;AACL","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}