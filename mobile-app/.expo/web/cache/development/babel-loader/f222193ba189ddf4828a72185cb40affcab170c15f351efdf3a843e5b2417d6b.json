{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nimport { EventTarget, defineEventAttribute } from 'event-target-shim';\nimport NativeModules from \"react-native-web/dist/exports/NativeModules\";\nimport MediaStreamTrack from \"./MediaStreamTrack\";\nimport { uniqueID } from \"./RTCUtil\";\nvar WebRTCModule = NativeModules.WebRTCModule;\nvar MediaStream = function (_EventTarget) {\n  function MediaStream(arg) {\n    var _this;\n    _classCallCheck(this, MediaStream);\n    _this = _callSuper(this, MediaStream);\n    _this._tracks = [];\n    _this._id = uniqueID();\n    _this._reactTag = _this._id;\n    if (typeof arg === 'undefined') {\n      WebRTCModule.mediaStreamCreate(_this.id);\n    } else if (arg instanceof MediaStream) {\n      WebRTCModule.mediaStreamCreate(_this.id);\n      for (var track of arg.getTracks()) {\n        _this.addTrack(track);\n      }\n    } else if (Array.isArray(arg)) {\n      WebRTCModule.mediaStreamCreate(_this.id);\n      for (var _track of arg) {\n        _this.addTrack(_track);\n      }\n    } else if (typeof arg === 'object' && arg.streamId && arg.streamReactTag && arg.tracks) {\n      _this._id = arg.streamId;\n      _this._reactTag = arg.streamReactTag;\n      for (var trackInfo of arg.tracks) {\n        _this._tracks.push(new MediaStreamTrack(trackInfo));\n      }\n    } else {\n      throw new TypeError(`invalid type: ${typeof arg}`);\n    }\n    return _this;\n  }\n  _inherits(MediaStream, _EventTarget);\n  return _createClass(MediaStream, [{\n    key: \"id\",\n    get: function get() {\n      return this._id;\n    }\n  }, {\n    key: \"active\",\n    get: function get() {\n      return true;\n    }\n  }, {\n    key: \"addTrack\",\n    value: function addTrack(track) {\n      var index = this._tracks.indexOf(track);\n      if (index !== -1) {\n        return;\n      }\n      this._tracks.push(track);\n      WebRTCModule.mediaStreamAddTrack(this._reactTag, track.remote ? track._peerConnectionId : -1, track.id);\n    }\n  }, {\n    key: \"removeTrack\",\n    value: function removeTrack(track) {\n      var index = this._tracks.indexOf(track);\n      if (index === -1) {\n        return;\n      }\n      this._tracks.splice(index, 1);\n      WebRTCModule.mediaStreamRemoveTrack(this._reactTag, track.remote ? track._peerConnectionId : -1, track.id);\n    }\n  }, {\n    key: \"getTracks\",\n    value: function getTracks() {\n      return this._tracks.slice();\n    }\n  }, {\n    key: \"getTrackById\",\n    value: function getTrackById(trackId) {\n      return this._tracks.find(function (track) {\n        return track.id === trackId;\n      });\n    }\n  }, {\n    key: \"getAudioTracks\",\n    value: function getAudioTracks() {\n      return this._tracks.filter(function (track) {\n        return track.kind === 'audio';\n      });\n    }\n  }, {\n    key: \"getVideoTracks\",\n    value: function getVideoTracks() {\n      return this._tracks.filter(function (track) {\n        return track.kind === 'video';\n      });\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      throw new Error('Not implemented.');\n    }\n  }, {\n    key: \"toURL\",\n    value: function toURL() {\n      return this._reactTag;\n    }\n  }, {\n    key: \"release\",\n    value: function release() {\n      var releaseTracks = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n      var tracks = _toConsumableArray(this._tracks);\n      for (var track of tracks) {\n        this.removeTrack(track);\n        if (releaseTracks) {\n          track.release();\n        }\n      }\n      WebRTCModule.mediaStreamRelease(this._reactTag);\n    }\n  }]);\n}(EventTarget);\nexport { MediaStream as default };\nvar proto = MediaStream.prototype;\ndefineEventAttribute(proto, 'addtrack');\ndefineEventAttribute(proto, 'removetrack');","map":{"version":3,"names":["EventTarget","defineEventAttribute","NativeModules","MediaStreamTrack","uniqueID","WebRTCModule","MediaStream","_EventTarget","arg","_this","_classCallCheck","_callSuper","_tracks","_id","_reactTag","mediaStreamCreate","id","track","getTracks","addTrack","Array","isArray","streamId","streamReactTag","tracks","trackInfo","push","TypeError","_inherits","_createClass","key","get","value","index","indexOf","mediaStreamAddTrack","remote","_peerConnectionId","removeTrack","splice","mediaStreamRemoveTrack","slice","getTrackById","trackId","find","getAudioTracks","filter","kind","getVideoTracks","clone","Error","toURL","release","releaseTracks","arguments","length","undefined","_toConsumableArray","mediaStreamRelease","default","proto","prototype"],"sources":["/workspaces/telemedicine-platform/mobile-app/node_modules/react-native-webrtc/src/MediaStream.ts"],"sourcesContent":["import { EventTarget, defineEventAttribute } from 'event-target-shim';\nimport { NativeModules } from 'react-native';\n\nimport MediaStreamTrack, { MediaStreamTrackInfo } from './MediaStreamTrack';\nimport MediaStreamTrackEvent from './MediaStreamTrackEvent';\nimport { uniqueID } from './RTCUtil';\n\nconst { WebRTCModule } = NativeModules;\n\ntype MediaStreamEventMap = {\n    addtrack: MediaStreamTrackEvent<'addtrack'>\n    removetrack: MediaStreamTrackEvent<'removetrack'>\n}\n\nexport default class MediaStream extends EventTarget<MediaStreamEventMap> {\n    _tracks: MediaStreamTrack[] = [];\n    _id: string;\n\n    /**\n     * The identifier of this MediaStream unique within the associated\n     * WebRTCModule instance. As the id of a remote MediaStream instance is unique\n     * only within the associated RTCPeerConnection, it is not sufficiently unique\n     * to identify this MediaStream across multiple RTCPeerConnections and to\n     * unambiguously differentiate it from a local MediaStream instance not added\n     * to an RTCPeerConnection.\n     */\n    _reactTag: string;\n\n    /**\n     * A MediaStream can be constructed in several ways, depending on the parameters\n     * that are passed here.\n     *\n     * - undefined: just a new stream, with no tracks.\n     * - MediaStream instance: a new stream, with a copy of the tracks of the passed stream.\n     * - Array of MediaStreamTrack: a new stream with a copy of the tracks in the array.\n     * - object: a new stream instance, represented by the passed info object, this is always\n     *   done internally, when the stream is first created in native and the JS wrapper is\n     *   built afterwards.\n     */\n    constructor(arg?:\n        MediaStream |\n        MediaStreamTrack[] |\n        { streamId: string, streamReactTag: string, tracks: MediaStreamTrackInfo[] }\n    ) {\n        super();\n\n        // Assign a UUID to start with. It will get overridden for remote streams.\n        this._id = uniqueID();\n\n        // Local MediaStreams are created by WebRTCModule to have their id and\n        // reactTag equal because WebRTCModule follows the respective standard's\n        // recommendation for id generation i.e. uses UUID which is unique enough\n        // for the purposes of reactTag.\n        this._reactTag = this._id;\n\n        if (typeof arg === 'undefined') {\n            WebRTCModule.mediaStreamCreate(this.id);\n        } else if (arg instanceof MediaStream) {\n            WebRTCModule.mediaStreamCreate(this.id);\n\n            for (const track of arg.getTracks()) {\n                this.addTrack(track);\n            }\n        } else if (Array.isArray(arg)) {\n            WebRTCModule.mediaStreamCreate(this.id);\n\n            for (const track of arg) {\n                this.addTrack(track);\n            }\n        } else if (typeof arg === 'object' && arg.streamId && arg.streamReactTag && arg.tracks) {\n            this._id = arg.streamId;\n            this._reactTag = arg.streamReactTag;\n\n            for (const trackInfo of arg.tracks) {\n                // We are not using addTrack here because the track is already part of the\n                // stream, so there is no need to add it on the native side.\n                this._tracks.push(new MediaStreamTrack(trackInfo));\n            }\n        } else {\n            throw new TypeError(`invalid type: ${typeof arg}`);\n        }\n    }\n\n    get id(): string {\n        return this._id;\n    }\n\n    get active(): boolean {\n        // TODO: can we reliably report this value?\n\n        return true;\n    }\n\n    addTrack(track: MediaStreamTrack): void {\n        const index = this._tracks.indexOf(track);\n\n        if (index !== -1) {\n            return;\n        }\n\n        this._tracks.push(track);\n        WebRTCModule.mediaStreamAddTrack(this._reactTag, track.remote ? track._peerConnectionId : -1, track.id);\n    }\n\n    removeTrack(track: MediaStreamTrack): void {\n        const index = this._tracks.indexOf(track);\n\n        if (index === -1) {\n            return;\n        }\n\n        this._tracks.splice(index, 1);\n        WebRTCModule.mediaStreamRemoveTrack(this._reactTag, track.remote ? track._peerConnectionId : -1, track.id);\n    }\n\n    getTracks(): MediaStreamTrack[] {\n        return this._tracks.slice();\n    }\n\n    getTrackById(trackId): MediaStreamTrack | undefined {\n        return this._tracks.find(track => track.id === trackId);\n    }\n\n    getAudioTracks(): MediaStreamTrack[] {\n        return this._tracks.filter(track => track.kind === 'audio');\n    }\n\n    getVideoTracks(): MediaStreamTrack[] {\n        return this._tracks.filter(track => track.kind === 'video');\n    }\n\n    clone(): never {\n        throw new Error('Not implemented.');\n    }\n\n    toURL(): string {\n        return this._reactTag;\n    }\n\n    release(releaseTracks = true): void {\n        const tracks = [ ...this._tracks ];\n\n        for (const track of tracks) {\n            this.removeTrack(track);\n\n            if (releaseTracks) {\n                track.release();\n            }\n        }\n\n        WebRTCModule.mediaStreamRelease(this._reactTag);\n    }\n}\n\n/**\n * Define the `onxxx` event handlers.\n */\nconst proto = MediaStream.prototype;\n\ndefineEventAttribute(proto, 'addtrack');\ndefineEventAttribute(proto, 'removetrack');\n"],"mappings":";;;;;;;;AAAA,SAASA,WAAW,EAAEC,oBAAoB,QAAQ,mBAAmB;AAAA,OAAAC,aAAA;AAGrE,OAAOC,gBAAgB;AAEvB,SAASC,QAAQ;AAEjB,IAAQC,YAAA,GAAiBH,aAAa,CAA9BG,YAAA;AAA8B,IAOjBC,WAAW,aAAAC,YAAA;EAyB5B,SAAAD,YAAYE,GAGoE,EAC9E;IAAA,IAAAC,KAAA;IAAAC,eAAA,OAAAJ,WAAA;IACEG,KAAA,GAAAE,UAAA,OAAAL,WAAA;IAAOG,KAAA,CA7BXG,OAAO,GAAuB,EAAE;IAgC5BH,KAAA,CAAKI,GAAG,GAAGT,QAAQ,CAAC,CAAC;IAMrBK,KAAA,CAAKK,SAAS,GAAGL,KAAA,CAAKI,GAAG;IAEzB,IAAI,OAAOL,GAAG,KAAK,WAAW,EAAE;MAC5BH,YAAY,CAACU,iBAAiB,CAACN,KAAA,CAAKO,EAAE,CAAC;IAC3C,CAAC,MAAM,IAAIR,GAAG,YAAYF,WAAW,EAAE;MACnCD,YAAY,CAACU,iBAAiB,CAACN,KAAA,CAAKO,EAAE,CAAC;MAEvC,KAAK,IAAMC,KAAK,IAAIT,GAAG,CAACU,SAAS,CAAC,CAAC,EAAE;QACjCT,KAAA,CAAKU,QAAQ,CAACF,KAAK,CAAC;MACxB;IACJ,CAAC,MAAM,IAAIG,KAAK,CAACC,OAAO,CAACb,GAAG,CAAC,EAAE;MAC3BH,YAAY,CAACU,iBAAiB,CAACN,KAAA,CAAKO,EAAE,CAAC;MAEvC,KAAK,IAAMC,MAAK,IAAIT,GAAG,EAAE;QACrBC,KAAA,CAAKU,QAAQ,CAACF,MAAK,CAAC;MACxB;IACJ,CAAC,MAAM,IAAI,OAAOT,GAAG,KAAK,QAAQ,IAAIA,GAAG,CAACc,QAAQ,IAAId,GAAG,CAACe,cAAc,IAAIf,GAAG,CAACgB,MAAM,EAAE;MACpFf,KAAA,CAAKI,GAAG,GAAGL,GAAG,CAACc,QAAQ;MACvBb,KAAA,CAAKK,SAAS,GAAGN,GAAG,CAACe,cAAc;MAEnC,KAAK,IAAME,SAAS,IAAIjB,GAAG,CAACgB,MAAM,EAAE;QAGhCf,KAAA,CAAKG,OAAO,CAACc,IAAI,CAAC,IAAIvB,gBAAgB,CAACsB,SAAS,CAAC,CAAC;MACtD;IACJ,CAAC,MAAM;MACH,MAAM,IAAIE,SAAS,CAAE,iBAAgB,OAAOnB,GAAI,EAAC,CAAC;IACtD;IAAA,OAAAC,KAAA;EACJ;EAAAmB,SAAA,CAAAtB,WAAA,EAAAC,YAAA;EAAA,OAAAsB,YAAA,CAAAvB,WAAA;IAAAwB,GAAA;IAAAC,GAAA,EAEA,SAAAA,IAAA,EAAiB;MACb,OAAO,IAAI,CAAClB,GAAG;IACnB;EAAA;IAAAiB,GAAA;IAAAC,GAAA,EAEA,SAAAA,IAAA,EAAsB;MAGlB,OAAO,IAAI;IACf;EAAA;IAAAD,GAAA;IAAAE,KAAA,EAEA,SAAAb,QAAQA,CAACF,KAAuB,EAAQ;MACpC,IAAMgB,KAAK,GAAG,IAAI,CAACrB,OAAO,CAACsB,OAAO,CAACjB,KAAK,CAAC;MAEzC,IAAIgB,KAAK,KAAK,CAAC,CAAC,EAAE;QACd;MACJ;MAEA,IAAI,CAACrB,OAAO,CAACc,IAAI,CAACT,KAAK,CAAC;MACxBZ,YAAY,CAAC8B,mBAAmB,CAAC,IAAI,CAACrB,SAAS,EAAEG,KAAK,CAACmB,MAAM,GAAGnB,KAAK,CAACoB,iBAAiB,GAAG,CAAC,CAAC,EAAEpB,KAAK,CAACD,EAAE,CAAC;IAC3G;EAAA;IAAAc,GAAA;IAAAE,KAAA,EAEA,SAAAM,WAAWA,CAACrB,KAAuB,EAAQ;MACvC,IAAMgB,KAAK,GAAG,IAAI,CAACrB,OAAO,CAACsB,OAAO,CAACjB,KAAK,CAAC;MAEzC,IAAIgB,KAAK,KAAK,CAAC,CAAC,EAAE;QACd;MACJ;MAEA,IAAI,CAACrB,OAAO,CAAC2B,MAAM,CAACN,KAAK,EAAE,CAAC,CAAC;MAC7B5B,YAAY,CAACmC,sBAAsB,CAAC,IAAI,CAAC1B,SAAS,EAAEG,KAAK,CAACmB,MAAM,GAAGnB,KAAK,CAACoB,iBAAiB,GAAG,CAAC,CAAC,EAAEpB,KAAK,CAACD,EAAE,CAAC;IAC9G;EAAA;IAAAc,GAAA;IAAAE,KAAA,EAEA,SAAAd,SAASA,CAAA,EAAuB;MAC5B,OAAO,IAAI,CAACN,OAAO,CAAC6B,KAAK,CAAC,CAAC;IAC/B;EAAA;IAAAX,GAAA;IAAAE,KAAA,EAEA,SAAAU,YAAYA,CAACC,OAAO,EAAgC;MAChD,OAAO,IAAI,CAAC/B,OAAO,CAACgC,IAAI,CAAC,UAAA3B,KAAK;QAAA,OAAIA,KAAK,CAACD,EAAE,KAAK2B,OAAO;MAAA,EAAC;IAC3D;EAAA;IAAAb,GAAA;IAAAE,KAAA,EAEA,SAAAa,cAAcA,CAAA,EAAuB;MACjC,OAAO,IAAI,CAACjC,OAAO,CAACkC,MAAM,CAAC,UAAA7B,KAAK;QAAA,OAAIA,KAAK,CAAC8B,IAAI,KAAK,OAAO;MAAA,EAAC;IAC/D;EAAA;IAAAjB,GAAA;IAAAE,KAAA,EAEA,SAAAgB,cAAcA,CAAA,EAAuB;MACjC,OAAO,IAAI,CAACpC,OAAO,CAACkC,MAAM,CAAC,UAAA7B,KAAK;QAAA,OAAIA,KAAK,CAAC8B,IAAI,KAAK,OAAO;MAAA,EAAC;IAC/D;EAAA;IAAAjB,GAAA;IAAAE,KAAA,EAEA,SAAAiB,KAAKA,CAAA,EAAU;MACX,MAAM,IAAIC,KAAK,CAAC,kBAAkB,CAAC;IACvC;EAAA;IAAApB,GAAA;IAAAE,KAAA,EAEA,SAAAmB,KAAKA,CAAA,EAAW;MACZ,OAAO,IAAI,CAACrC,SAAS;IACzB;EAAA;IAAAgB,GAAA;IAAAE,KAAA,EAEA,SAAAoB,OAAOA,CAAA,EAA6B;MAAA,IAA5BC,aAAa,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,IAAI;MACxB,IAAM9B,MAAM,GAAAiC,kBAAA,CAAQ,IAAI,CAAC7C,OAAO,CAAE;MAElC,KAAK,IAAMK,KAAK,IAAIO,MAAM,EAAE;QACxB,IAAI,CAACc,WAAW,CAACrB,KAAK,CAAC;QAEvB,IAAIoC,aAAa,EAAE;UACfpC,KAAK,CAACmC,OAAO,CAAC,CAAC;QACnB;MACJ;MAEA/C,YAAY,CAACqD,kBAAkB,CAAC,IAAI,CAAC5C,SAAS,CAAC;IACnD;EAAA;AAAA,EAzIqCd,WAAW;AAAA,SAA/BM,WAAW,IAAAqD,OAAA;AA+IhC,IAAMC,KAAK,GAAGtD,WAAW,CAACuD,SAAS;AAEnC5D,oBAAoB,CAAC2D,KAAK,EAAE,UAAU,CAAC;AACvC3D,oBAAoB,CAAC2D,KAAK,EAAE,aAAa,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}