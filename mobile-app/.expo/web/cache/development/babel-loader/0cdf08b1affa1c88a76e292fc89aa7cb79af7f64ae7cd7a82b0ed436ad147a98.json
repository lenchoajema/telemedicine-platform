{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport BackHandler from \"react-native-web/dist/exports/BackHandler\";\nimport { Surface, IconButton, Button, Text, Title, ActivityIndicator, Portal, Modal, Card, TextInput } from 'react-native-paper';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport { RTCView, RTCPeerConnection, RTCSessionDescription, RTCIceCandidate, mediaDevices } from 'react-native-webrtc';\nimport io from 'socket.io-client';\nimport { useAuth } from \"../../context/AuthContext\";\nimport { theme, spacing } from \"../../utils/theme\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar _Dimensions$get = Dimensions.get('window'),\n  width = _Dimensions$get.width,\n  height = _Dimensions$get.height;\nvar VideoCallScreen = function VideoCallScreen(_ref) {\n  var navigation = _ref.navigation,\n    route = _ref.route;\n  var _useAuth = useAuth(),\n    user = _useAuth.user;\n  var _route$params = route.params,\n    appointmentId = _route$params.appointmentId,\n    meetingLink = _route$params.meetingLink;\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    localStream = _useState2[0],\n    setLocalStream = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    remoteStream = _useState4[0],\n    setRemoteStream = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    isConnected = _useState6[0],\n    setIsConnected = _useState6[1];\n  var _useState7 = useState(true),\n    _useState8 = _slicedToArray(_useState7, 2),\n    isConnecting = _useState8[0],\n    setIsConnecting = _useState8[1];\n  var _useState9 = useState(false),\n    _useState0 = _slicedToArray(_useState9, 2),\n    isMuted = _useState0[0],\n    setIsMuted = _useState0[1];\n  var _useState1 = useState(true),\n    _useState10 = _slicedToArray(_useState1, 2),\n    isVideoEnabled = _useState10[0],\n    setIsVideoEnabled = _useState10[1];\n  var _useState11 = useState(true),\n    _useState12 = _slicedToArray(_useState11, 2),\n    isSpeakerEnabled = _useState12[0],\n    setIsSpeakerEnabled = _useState12[1];\n  var _useState13 = useState(true),\n    _useState14 = _slicedToArray(_useState13, 2),\n    showControls = _useState14[0],\n    setShowControls = _useState14[1];\n  var _useState15 = useState(0),\n    _useState16 = _slicedToArray(_useState15, 2),\n    callDuration = _useState16[0],\n    setCallDuration = _useState16[1];\n  var _useState17 = useState(false),\n    _useState18 = _slicedToArray(_useState17, 2),\n    chatVisible = _useState18[0],\n    setChatVisible = _useState18[1];\n  var _useState19 = useState(''),\n    _useState20 = _slicedToArray(_useState19, 2),\n    chatMessage = _useState20[0],\n    setChatMessage = _useState20[1];\n  var _useState21 = useState([]),\n    _useState22 = _slicedToArray(_useState21, 2),\n    chatMessages = _useState22[0],\n    setChatMessages = _useState22[1];\n  var peerConnection = useRef(null);\n  var socket = useRef(null);\n  var callStartTime = useRef(0);\n  var durationInterval = useRef(null);\n  var pcConfig = {\n    iceServers: [{\n      urls: 'stun:stun.l.google.com:19302'\n    }, {\n      urls: 'stun:stun1.l.google.com:19302'\n    }]\n  };\n  useEffect(function () {\n    initializeCall();\n    var backHandler = BackHandler.addEventListener('hardwareBackPress', function () {\n      handleEndCall();\n      return true;\n    });\n    return function () {\n      backHandler.remove();\n      cleanupCall();\n    };\n  }, []);\n  var initializeCall = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        socket.current = io(process.env.EXPO_PUBLIC_API_URL || 'http://localhost:5000', {\n          query: {\n            appointmentId: appointmentId,\n            userId: user == null ? void 0 : user.id,\n            userRole: user == null ? void 0 : user.role\n          }\n        });\n        socket.current.on('user-joined', handleUserJoined);\n        socket.current.on('offer', handleReceiveOffer);\n        socket.current.on('answer', handleReceiveAnswer);\n        socket.current.on('ice-candidate', handleReceiveIceCandidate);\n        socket.current.on('user-left', handleUserLeft);\n        socket.current.on('chat-message', handleChatMessage);\n        var stream = yield mediaDevices.getUserMedia({\n          audio: true,\n          video: {\n            width: {\n              min: 640,\n              ideal: 1280,\n              max: 1920\n            },\n            height: {\n              min: 480,\n              ideal: 720,\n              max: 1080\n            },\n            frameRate: {\n              min: 16,\n              ideal: 30,\n              max: 30\n            }\n          }\n        });\n        setLocalStream(stream);\n        setupPeerConnection(stream);\n        setIsConnecting(false);\n        startCallTimer();\n      } catch (error) {\n        console.error('Error initializing call:', error);\n        Alert.alert('Error', 'Failed to initialize video call');\n        navigation.goBack();\n      }\n    });\n    return function initializeCall() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var setupPeerConnection = function setupPeerConnection(stream) {\n    peerConnection.current = new RTCPeerConnection(pcConfig);\n    stream.getTracks().forEach(function (track) {\n      var _peerConnection$curre;\n      (_peerConnection$curre = peerConnection.current) == null ? void 0 : _peerConnection$curre.addTrack(track, stream);\n    });\n    peerConnection.current.ontrack = function (event) {\n      setRemoteStream(event.streams[0]);\n      setIsConnected(true);\n    };\n    peerConnection.current.onicecandidate = function (event) {\n      if (event.candidate) {\n        var _socket$current;\n        (_socket$current = socket.current) == null ? void 0 : _socket$current.emit('ice-candidate', {\n          appointmentId: appointmentId,\n          candidate: event.candidate\n        });\n      }\n    };\n    peerConnection.current.onconnectionstatechange = function () {\n      var _peerConnection$curre2;\n      var state = (_peerConnection$curre2 = peerConnection.current) == null ? void 0 : _peerConnection$curre2.connectionState;\n      if (state === 'connected') {\n        setIsConnected(true);\n      } else if (state === 'disconnected' || state === 'failed') {\n        setIsConnected(false);\n      }\n    };\n  };\n  var handleUserJoined = function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      try {\n        var _peerConnection$curre3, _peerConnection$curre4, _socket$current2;\n        var offer = yield (_peerConnection$curre3 = peerConnection.current) == null ? void 0 : _peerConnection$curre3.createOffer();\n        yield (_peerConnection$curre4 = peerConnection.current) == null ? void 0 : _peerConnection$curre4.setLocalDescription(offer);\n        (_socket$current2 = socket.current) == null ? void 0 : _socket$current2.emit('offer', {\n          appointmentId: appointmentId,\n          offer: offer\n        });\n      } catch (error) {\n        console.error('Error creating offer:', error);\n      }\n    });\n    return function handleUserJoined() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var handleReceiveOffer = function () {\n    var _ref4 = _asyncToGenerator(function* (data) {\n      try {\n        var _peerConnection$curre5, _peerConnection$curre6, _peerConnection$curre7, _socket$current3;\n        yield (_peerConnection$curre5 = peerConnection.current) == null ? void 0 : _peerConnection$curre5.setRemoteDescription(new RTCSessionDescription(data.offer));\n        var answer = yield (_peerConnection$curre6 = peerConnection.current) == null ? void 0 : _peerConnection$curre6.createAnswer();\n        yield (_peerConnection$curre7 = peerConnection.current) == null ? void 0 : _peerConnection$curre7.setLocalDescription(answer);\n        (_socket$current3 = socket.current) == null ? void 0 : _socket$current3.emit('answer', {\n          appointmentId: appointmentId,\n          answer: answer\n        });\n      } catch (error) {\n        console.error('Error handling offer:', error);\n      }\n    });\n    return function handleReceiveOffer(_x) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  var handleReceiveAnswer = function () {\n    var _ref5 = _asyncToGenerator(function* (data) {\n      try {\n        var _peerConnection$curre8;\n        yield (_peerConnection$curre8 = peerConnection.current) == null ? void 0 : _peerConnection$curre8.setRemoteDescription(new RTCSessionDescription(data.answer));\n      } catch (error) {\n        console.error('Error handling answer:', error);\n      }\n    });\n    return function handleReceiveAnswer(_x2) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n  var handleReceiveIceCandidate = function () {\n    var _ref6 = _asyncToGenerator(function* (data) {\n      try {\n        var _peerConnection$curre9;\n        yield (_peerConnection$curre9 = peerConnection.current) == null ? void 0 : _peerConnection$curre9.addIceCandidate(new RTCIceCandidate(data.candidate));\n      } catch (error) {\n        console.error('Error handling ICE candidate:', error);\n      }\n    });\n    return function handleReceiveIceCandidate(_x3) {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n  var handleUserLeft = function handleUserLeft() {\n    setIsConnected(false);\n    setRemoteStream(null);\n    Alert.alert('Call Ended', 'The other participant has left the call');\n  };\n  var handleChatMessage = function handleChatMessage(data) {\n    setChatMessages(function (prev) {\n      return [].concat(_toConsumableArray(prev), [data]);\n    });\n  };\n  var startCallTimer = function startCallTimer() {\n    callStartTime.current = Date.now();\n    durationInterval.current = setInterval(function () {\n      setCallDuration(Math.floor((Date.now() - callStartTime.current) / 1000));\n    }, 1000);\n  };\n  var toggleMute = function toggleMute() {\n    if (localStream) {\n      localStream.getAudioTracks().forEach(function (track) {\n        track.enabled = isMuted;\n      });\n      setIsMuted(!isMuted);\n    }\n  };\n  var toggleVideo = function toggleVideo() {\n    if (localStream) {\n      localStream.getVideoTracks().forEach(function (track) {\n        track.enabled = !isVideoEnabled;\n      });\n      setIsVideoEnabled(!isVideoEnabled);\n    }\n  };\n  var toggleSpeaker = function toggleSpeaker() {\n    setIsSpeakerEnabled(!isSpeakerEnabled);\n  };\n  var sendChatMessage = function sendChatMessage() {\n    if (chatMessage.trim()) {\n      var _socket$current4;\n      var message = {\n        id: Date.now().toString(),\n        text: chatMessage,\n        sender: `${user == null ? void 0 : user.firstName} ${user == null ? void 0 : user.lastName}`,\n        timestamp: new Date().toLocaleTimeString()\n      };\n      (_socket$current4 = socket.current) == null ? void 0 : _socket$current4.emit('chat-message', {\n        appointmentId: appointmentId,\n        message: message\n      });\n      setChatMessages(function (prev) {\n        return [].concat(_toConsumableArray(prev), [message]);\n      });\n      setChatMessage('');\n    }\n  };\n  var handleEndCall = function () {\n    var _ref7 = _asyncToGenerator(function* () {\n      Alert.alert('End Call', 'Are you sure you want to end the call?', [{\n        text: 'Cancel',\n        style: 'cancel'\n      }, {\n        text: 'End Call',\n        style: 'destructive',\n        onPress: function onPress() {\n          cleanupCall();\n          navigation.goBack();\n        }\n      }]);\n    });\n    return function handleEndCall() {\n      return _ref7.apply(this, arguments);\n    };\n  }();\n  var cleanupCall = function cleanupCall() {\n    if (durationInterval.current) {\n      clearInterval(durationInterval.current);\n    }\n    if (localStream) {\n      localStream.getTracks().forEach(function (track) {\n        return track.stop();\n      });\n    }\n    if (peerConnection.current) {\n      peerConnection.current.close();\n    }\n    if (socket.current) {\n      socket.current.disconnect();\n    }\n  };\n  var formatCallDuration = function formatCallDuration(seconds) {\n    var minutes = Math.floor(seconds / 60);\n    var remainingSeconds = seconds % 60;\n    return `${minutes.toString().padStart(2, '0')}:${remainingSeconds.toString().padStart(2, '0')}`;\n  };\n  var toggleControlsVisibility = function toggleControlsVisibility() {\n    setShowControls(!showControls);\n  };\n  return _jsxs(SafeAreaView, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: styles.videoContainer,\n      children: [_jsx(View, {\n        style: styles.remoteVideoContainer,\n        children: remoteStream ? _jsx(RTCView, {\n          streamURL: remoteStream.toURL(),\n          style: styles.remoteVideo,\n          objectFit: \"cover\"\n        }) : _jsxs(Surface, {\n          style: styles.noVideoPlaceholder,\n          children: [_jsx(Title, {\n            style: styles.noVideoText,\n            children: isConnecting ? 'Connecting...' : 'Waiting for other participant'\n          }), isConnecting && _jsx(ActivityIndicator, {\n            size: \"large\",\n            color: theme.colors.primary\n          })]\n        })\n      }), _jsx(View, {\n        style: styles.localVideoContainer,\n        children: localStream && _jsx(RTCView, {\n          streamURL: localStream.toURL(),\n          style: styles.localVideo,\n          objectFit: \"cover\"\n        })\n      }), _jsxs(Surface, {\n        style: styles.callInfo,\n        children: [_jsx(Text, {\n          style: styles.callDuration,\n          children: formatCallDuration(callDuration)\n        }), isConnected && _jsx(Text, {\n          style: styles.connectionStatus,\n          children: \"Connected\"\n        })]\n      }), showControls && _jsx(Surface, {\n        style: styles.controlsContainer,\n        children: _jsxs(View, {\n          style: styles.controls,\n          children: [_jsx(IconButton, {\n            icon: isMuted ? 'microphone-off' : 'microphone',\n            mode: \"contained\",\n            size: 30,\n            onPress: toggleMute,\n            style: [styles.controlButton, isMuted && styles.mutedButton]\n          }), _jsx(IconButton, {\n            icon: isVideoEnabled ? 'video' : 'video-off',\n            mode: \"contained\",\n            size: 30,\n            onPress: toggleVideo,\n            style: [styles.controlButton, !isVideoEnabled && styles.mutedButton]\n          }), _jsx(IconButton, {\n            icon: \"chat\",\n            mode: \"contained\",\n            size: 30,\n            onPress: function onPress() {\n              return setChatVisible(true);\n            },\n            style: styles.controlButton\n          }), _jsx(IconButton, {\n            icon: isSpeakerEnabled ? 'volume-high' : 'volume-off',\n            mode: \"contained\",\n            size: 30,\n            onPress: toggleSpeaker,\n            style: styles.controlButton\n          }), _jsx(IconButton, {\n            icon: \"phone-hangup\",\n            mode: \"contained\",\n            size: 30,\n            onPress: handleEndCall,\n            style: [styles.controlButton, styles.endCallButton]\n          })]\n        })\n      })]\n    }), _jsx(Portal, {\n      children: _jsx(Modal, {\n        visible: chatVisible,\n        onDismiss: function onDismiss() {\n          return setChatVisible(false);\n        },\n        contentContainerStyle: styles.chatModal,\n        children: _jsx(Card, {\n          children: _jsxs(Card.Content, {\n            children: [_jsx(Title, {\n              children: \"Chat\"\n            }), _jsx(View, {\n              style: styles.chatMessages,\n              children: chatMessages.map(function (msg, index) {\n                return _jsxs(View, {\n                  style: styles.chatMessage,\n                  children: [_jsx(Text, {\n                    style: styles.chatSender,\n                    children: msg.sender\n                  }), _jsx(Text, {\n                    style: styles.chatText,\n                    children: msg.text\n                  }), _jsx(Text, {\n                    style: styles.chatTimestamp,\n                    children: msg.timestamp\n                  })]\n                }, index);\n              })\n            }), _jsxs(View, {\n              style: styles.chatInputContainer,\n              children: [_jsx(TextInput, {\n                value: chatMessage,\n                onChangeText: setChatMessage,\n                placeholder: \"Type a message...\",\n                style: styles.chatInput,\n                multiline: true\n              }), _jsx(Button, {\n                mode: \"contained\",\n                onPress: sendChatMessage,\n                style: styles.sendButton,\n                children: \"Send\"\n              })]\n            })]\n          })\n        })\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#000'\n  },\n  videoContainer: {\n    flex: 1,\n    position: 'relative'\n  },\n  remoteVideoContainer: {\n    flex: 1,\n    backgroundColor: '#000'\n  },\n  remoteVideo: {\n    flex: 1\n  },\n  localVideoContainer: {\n    position: 'absolute',\n    top: 50,\n    right: 20,\n    width: 120,\n    height: 160,\n    borderRadius: 8,\n    overflow: 'hidden',\n    elevation: 5\n  },\n  localVideo: {\n    flex: 1\n  },\n  noVideoPlaceholder: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#333'\n  },\n  noVideoText: {\n    color: '#fff',\n    textAlign: 'center',\n    marginBottom: spacing.medium\n  },\n  callInfo: {\n    position: 'absolute',\n    top: 20,\n    left: 20,\n    paddingHorizontal: spacing.medium,\n    paddingVertical: spacing.small,\n    borderRadius: 8,\n    backgroundColor: 'rgba(0, 0, 0, 0.7)'\n  },\n  callDuration: {\n    color: '#fff',\n    fontSize: 16,\n    fontWeight: 'bold'\n  },\n  connectionStatus: {\n    color: '#4CAF50',\n    fontSize: 12\n  },\n  controlsContainer: {\n    position: 'absolute',\n    bottom: 50,\n    left: 20,\n    right: 20,\n    backgroundColor: 'rgba(0, 0, 0, 0.7)',\n    borderRadius: 25,\n    paddingVertical: spacing.small\n  },\n  controls: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    alignItems: 'center'\n  },\n  controlButton: {\n    backgroundColor: 'rgba(255, 255, 255, 0.2)'\n  },\n  mutedButton: {\n    backgroundColor: theme.colors.error\n  },\n  endCallButton: {\n    backgroundColor: theme.colors.error\n  },\n  chatModal: {\n    backgroundColor: theme.colors.surface,\n    margin: 20,\n    borderRadius: 8,\n    maxHeight: height * 0.8\n  },\n  chatMessages: {\n    maxHeight: 300,\n    marginVertical: spacing.medium\n  },\n  chatMessage: {\n    marginBottom: spacing.small,\n    padding: spacing.small,\n    backgroundColor: theme.colors.surfaceVariant,\n    borderRadius: 8\n  },\n  chatSender: {\n    fontSize: 12,\n    fontWeight: 'bold',\n    color: theme.colors.primary\n  },\n  chatText: {\n    fontSize: 14,\n    marginVertical: 2\n  },\n  chatTimestamp: {\n    fontSize: 10,\n    color: theme.colors.onSurfaceVariant,\n    textAlign: 'right'\n  },\n  chatInputContainer: {\n    flexDirection: 'row',\n    alignItems: 'flex-end'\n  },\n  chatInput: {\n    flex: 1,\n    marginRight: spacing.small\n  },\n  sendButton: {\n    alignSelf: 'flex-end'\n  }\n});\nexport default VideoCallScreen;","map":{"version":3,"names":["React","useState","useEffect","useRef","View","StyleSheet","Alert","Dimensions","BackHandler","Surface","IconButton","Button","Text","Title","ActivityIndicator","Portal","Modal","Card","TextInput","SafeAreaView","RTCView","RTCPeerConnection","RTCSessionDescription","RTCIceCandidate","mediaDevices","io","useAuth","theme","spacing","jsx","_jsx","jsxs","_jsxs","_Dimensions$get","get","width","height","VideoCallScreen","_ref","navigation","route","_useAuth","user","_route$params","params","appointmentId","meetingLink","_useState","_useState2","_slicedToArray","localStream","setLocalStream","_useState3","_useState4","remoteStream","setRemoteStream","_useState5","_useState6","isConnected","setIsConnected","_useState7","_useState8","isConnecting","setIsConnecting","_useState9","_useState0","isMuted","setIsMuted","_useState1","_useState10","isVideoEnabled","setIsVideoEnabled","_useState11","_useState12","isSpeakerEnabled","setIsSpeakerEnabled","_useState13","_useState14","showControls","setShowControls","_useState15","_useState16","callDuration","setCallDuration","_useState17","_useState18","chatVisible","setChatVisible","_useState19","_useState20","chatMessage","setChatMessage","_useState21","_useState22","chatMessages","setChatMessages","peerConnection","socket","callStartTime","durationInterval","pcConfig","iceServers","urls","initializeCall","backHandler","addEventListener","handleEndCall","remove","cleanupCall","_ref2","_asyncToGenerator","current","process","env","EXPO_PUBLIC_API_URL","query","userId","id","userRole","role","on","handleUserJoined","handleReceiveOffer","handleReceiveAnswer","handleReceiveIceCandidate","handleUserLeft","handleChatMessage","stream","getUserMedia","audio","video","min","ideal","max","frameRate","setupPeerConnection","startCallTimer","error","console","alert","goBack","apply","arguments","getTracks","forEach","track","_peerConnection$curre","addTrack","ontrack","event","streams","onicecandidate","candidate","_socket$current","emit","onconnectionstatechange","_peerConnection$curre2","state","connectionState","_ref3","_peerConnection$curre3","_peerConnection$curre4","_socket$current2","offer","createOffer","setLocalDescription","_ref4","data","_peerConnection$curre5","_peerConnection$curre6","_peerConnection$curre7","_socket$current3","setRemoteDescription","answer","createAnswer","_x","_ref5","_peerConnection$curre8","_x2","_ref6","_peerConnection$curre9","addIceCandidate","_x3","prev","concat","_toConsumableArray","Date","now","setInterval","Math","floor","toggleMute","getAudioTracks","enabled","toggleVideo","getVideoTracks","toggleSpeaker","sendChatMessage","trim","_socket$current4","message","toString","text","sender","firstName","lastName","timestamp","toLocaleTimeString","_ref7","style","onPress","clearInterval","stop","close","disconnect","formatCallDuration","seconds","minutes","remainingSeconds","padStart","toggleControlsVisibility","styles","container","children","videoContainer","remoteVideoContainer","streamURL","toURL","remoteVideo","objectFit","noVideoPlaceholder","noVideoText","size","color","colors","primary","localVideoContainer","localVideo","callInfo","connectionStatus","controlsContainer","controls","icon","mode","controlButton","mutedButton","endCallButton","visible","onDismiss","contentContainerStyle","chatModal","Content","map","msg","index","chatSender","chatText","chatTimestamp","chatInputContainer","value","onChangeText","placeholder","chatInput","multiline","sendButton","create","flex","backgroundColor","position","top","right","borderRadius","overflow","elevation","justifyContent","alignItems","textAlign","marginBottom","medium","left","paddingHorizontal","paddingVertical","small","fontSize","fontWeight","bottom","flexDirection","surface","margin","maxHeight","marginVertical","padding","surfaceVariant","onSurfaceVariant","marginRight","alignSelf"],"sources":["/workspaces/telemedicine-platform/mobile-app/src/screens/VideoCall/VideoCallScreen.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport {\n  View,\n  StyleSheet,\n  Alert,\n  Dimensions,\n  BackHandler,\n} from 'react-native';\nimport {\n  Surface,\n  IconButton,\n  Button,\n  Text,\n  Title,\n  ActivityIndicator,\n  Portal,\n  Modal,\n  Card,\n  TextInput,\n} from 'react-native-paper';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport { RTCView, RTCPeerConnection, RTCSessionDescription, RTCIceCandidate, mediaDevices } from 'react-native-webrtc';\nimport io from 'socket.io-client';\nimport { useAuth } from '../../context/AuthContext';\nimport { ApiClient } from '../../services/ApiClient';\nimport { theme, spacing } from '../../utils/theme';\n\ninterface VideoCallScreenProps {\n  navigation: any;\n  route: {\n    params: {\n      appointmentId: string;\n      meetingLink?: string;\n    };\n  };\n}\n\nconst { width, height } = Dimensions.get('window');\n\nconst VideoCallScreen: React.FC<VideoCallScreenProps> = ({ navigation, route }) => {\n  const { user } = useAuth();\n  const { appointmentId, meetingLink } = route.params;\n  \n  const [localStream, setLocalStream] = useState<any>(null);\n  const [remoteStream, setRemoteStream] = useState<any>(null);\n  const [isConnected, setIsConnected] = useState(false);\n  const [isConnecting, setIsConnecting] = useState(true);\n  const [isMuted, setIsMuted] = useState(false);\n  const [isVideoEnabled, setIsVideoEnabled] = useState(true);\n  const [isSpeakerEnabled, setIsSpeakerEnabled] = useState(true);\n  const [showControls, setShowControls] = useState(true);\n  const [callDuration, setCallDuration] = useState(0);\n  const [chatVisible, setChatVisible] = useState(false);\n  const [chatMessage, setChatMessage] = useState('');\n  const [chatMessages, setChatMessages] = useState<any[]>([]);\n  \n  const peerConnection = useRef<RTCPeerConnection | null>(null);\n  const socket = useRef<any>(null);\n  const callStartTime = useRef<number>(0);\n  const durationInterval = useRef<NodeJS.Timeout | null>(null);\n\n  const pcConfig = {\n    iceServers: [\n      { urls: 'stun:stun.l.google.com:19302' },\n      { urls: 'stun:stun1.l.google.com:19302' },\n    ],\n  };\n\n  useEffect(() => {\n    initializeCall();\n    \n    // Handle back button\n    const backHandler = BackHandler.addEventListener('hardwareBackPress', () => {\n      handleEndCall();\n      return true;\n    });\n\n    return () => {\n      backHandler.remove();\n      cleanupCall();\n    };\n  }, []);\n\n  const initializeCall = async () => {\n    try {\n      // Initialize socket connection\n      socket.current = io(process.env.EXPO_PUBLIC_API_URL || 'http://localhost:5000', {\n        query: {\n          appointmentId,\n          userId: user?.id,\n          userRole: user?.role,\n        },\n      });\n\n      // Socket event handlers\n      socket.current.on('user-joined', handleUserJoined);\n      socket.current.on('offer', handleReceiveOffer);\n      socket.current.on('answer', handleReceiveAnswer);\n      socket.current.on('ice-candidate', handleReceiveIceCandidate);\n      socket.current.on('user-left', handleUserLeft);\n      socket.current.on('chat-message', handleChatMessage);\n\n      // Get local media\n      const stream = await mediaDevices.getUserMedia({\n        audio: true,\n        video: {\n          width: { min: 640, ideal: 1280, max: 1920 },\n          height: { min: 480, ideal: 720, max: 1080 },\n          frameRate: { min: 16, ideal: 30, max: 30 },\n        },\n      });\n\n      setLocalStream(stream);\n      setupPeerConnection(stream);\n      \n      setIsConnecting(false);\n      startCallTimer();\n      \n    } catch (error) {\n      console.error('Error initializing call:', error);\n      Alert.alert('Error', 'Failed to initialize video call');\n      navigation.goBack();\n    }\n  };\n\n  const setupPeerConnection = (stream: any) => {\n    peerConnection.current = new RTCPeerConnection(pcConfig);\n\n    // Add local stream\n    stream.getTracks().forEach((track: any) => {\n      peerConnection.current?.addTrack(track, stream);\n    });\n\n    // Handle remote stream\n    peerConnection.current.ontrack = (event) => {\n      setRemoteStream(event.streams[0]);\n      setIsConnected(true);\n    };\n\n    // Handle ICE candidates\n    peerConnection.current.onicecandidate = (event) => {\n      if (event.candidate) {\n        socket.current?.emit('ice-candidate', {\n          appointmentId,\n          candidate: event.candidate,\n        });\n      }\n    };\n\n    // Handle connection state\n    peerConnection.current.onconnectionstatechange = () => {\n      const state = peerConnection.current?.connectionState;\n      if (state === 'connected') {\n        setIsConnected(true);\n      } else if (state === 'disconnected' || state === 'failed') {\n        setIsConnected(false);\n      }\n    };\n  };\n\n  const handleUserJoined = async () => {\n    try {\n      const offer = await peerConnection.current?.createOffer();\n      await peerConnection.current?.setLocalDescription(offer);\n      \n      socket.current?.emit('offer', {\n        appointmentId,\n        offer,\n      });\n    } catch (error) {\n      console.error('Error creating offer:', error);\n    }\n  };\n\n  const handleReceiveOffer = async (data: any) => {\n    try {\n      await peerConnection.current?.setRemoteDescription(new RTCSessionDescription(data.offer));\n      \n      const answer = await peerConnection.current?.createAnswer();\n      await peerConnection.current?.setLocalDescription(answer);\n      \n      socket.current?.emit('answer', {\n        appointmentId,\n        answer,\n      });\n    } catch (error) {\n      console.error('Error handling offer:', error);\n    }\n  };\n\n  const handleReceiveAnswer = async (data: any) => {\n    try {\n      await peerConnection.current?.setRemoteDescription(new RTCSessionDescription(data.answer));\n    } catch (error) {\n      console.error('Error handling answer:', error);\n    }\n  };\n\n  const handleReceiveIceCandidate = async (data: any) => {\n    try {\n      await peerConnection.current?.addIceCandidate(new RTCIceCandidate(data.candidate));\n    } catch (error) {\n      console.error('Error handling ICE candidate:', error);\n    }\n  };\n\n  const handleUserLeft = () => {\n    setIsConnected(false);\n    setRemoteStream(null);\n    Alert.alert('Call Ended', 'The other participant has left the call');\n  };\n\n  const handleChatMessage = (data: any) => {\n    setChatMessages(prev => [...prev, data]);\n  };\n\n  const startCallTimer = () => {\n    callStartTime.current = Date.now();\n    durationInterval.current = setInterval(() => {\n      setCallDuration(Math.floor((Date.now() - callStartTime.current) / 1000));\n    }, 1000);\n  };\n\n  const toggleMute = () => {\n    if (localStream) {\n      localStream.getAudioTracks().forEach((track: any) => {\n        track.enabled = isMuted;\n      });\n      setIsMuted(!isMuted);\n    }\n  };\n\n  const toggleVideo = () => {\n    if (localStream) {\n      localStream.getVideoTracks().forEach((track: any) => {\n        track.enabled = !isVideoEnabled;\n      });\n      setIsVideoEnabled(!isVideoEnabled);\n    }\n  };\n\n  const toggleSpeaker = () => {\n    // Note: Speaker toggle implementation depends on react-native-webrtc version\n    setIsSpeakerEnabled(!isSpeakerEnabled);\n  };\n\n  const sendChatMessage = () => {\n    if (chatMessage.trim()) {\n      const message = {\n        id: Date.now().toString(),\n        text: chatMessage,\n        sender: `${user?.firstName} ${user?.lastName}`,\n        timestamp: new Date().toLocaleTimeString(),\n      };\n      \n      socket.current?.emit('chat-message', {\n        appointmentId,\n        message,\n      });\n      \n      setChatMessages(prev => [...prev, message]);\n      setChatMessage('');\n    }\n  };\n\n  const handleEndCall = async () => {\n    Alert.alert(\n      'End Call',\n      'Are you sure you want to end the call?',\n      [\n        { text: 'Cancel', style: 'cancel' },\n        {\n          text: 'End Call',\n          style: 'destructive',\n          onPress: () => {\n            cleanupCall();\n            navigation.goBack();\n          },\n        },\n      ]\n    );\n  };\n\n  const cleanupCall = () => {\n    if (durationInterval.current) {\n      clearInterval(durationInterval.current);\n    }\n    \n    if (localStream) {\n      localStream.getTracks().forEach((track: any) => track.stop());\n    }\n    \n    if (peerConnection.current) {\n      peerConnection.current.close();\n    }\n    \n    if (socket.current) {\n      socket.current.disconnect();\n    }\n  };\n\n  const formatCallDuration = (seconds: number) => {\n    const minutes = Math.floor(seconds / 60);\n    const remainingSeconds = seconds % 60;\n    return `${minutes.toString().padStart(2, '0')}:${remainingSeconds.toString().padStart(2, '0')}`;\n  };\n\n  const toggleControlsVisibility = () => {\n    setShowControls(!showControls);\n  };\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <View style={styles.videoContainer}>\n        {/* Remote Video */}\n        <View style={styles.remoteVideoContainer}>\n          {remoteStream ? (\n            <RTCView\n              streamURL={remoteStream.toURL()}\n              style={styles.remoteVideo}\n              objectFit=\"cover\"\n            />\n          ) : (\n            <Surface style={styles.noVideoPlaceholder}>\n              <Title style={styles.noVideoText}>\n                {isConnecting ? 'Connecting...' : 'Waiting for other participant'}\n              </Title>\n              {isConnecting && (\n                <ActivityIndicator size=\"large\" color={theme.colors.primary} />\n              )}\n            </Surface>\n          )}\n        </View>\n\n        {/* Local Video */}\n        <View style={styles.localVideoContainer}>\n          {localStream && (\n            <RTCView\n              streamURL={localStream.toURL()}\n              style={styles.localVideo}\n              objectFit=\"cover\"\n            />\n          )}\n        </View>\n\n        {/* Call Info */}\n        <Surface style={styles.callInfo}>\n          <Text style={styles.callDuration}>\n            {formatCallDuration(callDuration)}\n          </Text>\n          {isConnected && (\n            <Text style={styles.connectionStatus}>Connected</Text>\n          )}\n        </Surface>\n\n        {/* Controls */}\n        {showControls && (\n          <Surface style={styles.controlsContainer}>\n            <View style={styles.controls}>\n              <IconButton\n                icon={isMuted ? 'microphone-off' : 'microphone'}\n                mode=\"contained\"\n                size={30}\n                onPress={toggleMute}\n                style={[styles.controlButton, isMuted && styles.mutedButton]}\n              />\n              \n              <IconButton\n                icon={isVideoEnabled ? 'video' : 'video-off'}\n                mode=\"contained\"\n                size={30}\n                onPress={toggleVideo}\n                style={[styles.controlButton, !isVideoEnabled && styles.mutedButton]}\n              />\n              \n              <IconButton\n                icon=\"chat\"\n                mode=\"contained\"\n                size={30}\n                onPress={() => setChatVisible(true)}\n                style={styles.controlButton}\n              />\n              \n              <IconButton\n                icon={isSpeakerEnabled ? 'volume-high' : 'volume-off'}\n                mode=\"contained\"\n                size={30}\n                onPress={toggleSpeaker}\n                style={styles.controlButton}\n              />\n              \n              <IconButton\n                icon=\"phone-hangup\"\n                mode=\"contained\"\n                size={30}\n                onPress={handleEndCall}\n                style={[styles.controlButton, styles.endCallButton]}\n              />\n            </View>\n          </Surface>\n        )}\n      </View>\n\n      {/* Chat Modal */}\n      <Portal>\n        <Modal\n          visible={chatVisible}\n          onDismiss={() => setChatVisible(false)}\n          contentContainerStyle={styles.chatModal}\n        >\n          <Card>\n            <Card.Content>\n              <Title>Chat</Title>\n              <View style={styles.chatMessages}>\n                {chatMessages.map((msg, index) => (\n                  <View key={index} style={styles.chatMessage}>\n                    <Text style={styles.chatSender}>{msg.sender}</Text>\n                    <Text style={styles.chatText}>{msg.text}</Text>\n                    <Text style={styles.chatTimestamp}>{msg.timestamp}</Text>\n                  </View>\n                ))}\n              </View>\n              <View style={styles.chatInputContainer}>\n                <TextInput\n                  value={chatMessage}\n                  onChangeText={setChatMessage}\n                  placeholder=\"Type a message...\"\n                  style={styles.chatInput}\n                  multiline\n                />\n                <Button\n                  mode=\"contained\"\n                  onPress={sendChatMessage}\n                  style={styles.sendButton}\n                >\n                  Send\n                </Button>\n              </View>\n            </Card.Content>\n          </Card>\n        </Modal>\n      </Portal>\n    </SafeAreaView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#000',\n  },\n  videoContainer: {\n    flex: 1,\n    position: 'relative',\n  },\n  remoteVideoContainer: {\n    flex: 1,\n    backgroundColor: '#000',\n  },\n  remoteVideo: {\n    flex: 1,\n  },\n  localVideoContainer: {\n    position: 'absolute',\n    top: 50,\n    right: 20,\n    width: 120,\n    height: 160,\n    borderRadius: 8,\n    overflow: 'hidden',\n    elevation: 5,\n  },\n  localVideo: {\n    flex: 1,\n  },\n  noVideoPlaceholder: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#333',\n  },\n  noVideoText: {\n    color: '#fff',\n    textAlign: 'center',\n    marginBottom: spacing.medium,\n  },\n  callInfo: {\n    position: 'absolute',\n    top: 20,\n    left: 20,\n    paddingHorizontal: spacing.medium,\n    paddingVertical: spacing.small,\n    borderRadius: 8,\n    backgroundColor: 'rgba(0, 0, 0, 0.7)',\n  },\n  callDuration: {\n    color: '#fff',\n    fontSize: 16,\n    fontWeight: 'bold',\n  },\n  connectionStatus: {\n    color: '#4CAF50',\n    fontSize: 12,\n  },\n  controlsContainer: {\n    position: 'absolute',\n    bottom: 50,\n    left: 20,\n    right: 20,\n    backgroundColor: 'rgba(0, 0, 0, 0.7)',\n    borderRadius: 25,\n    paddingVertical: spacing.small,\n  },\n  controls: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    alignItems: 'center',\n  },\n  controlButton: {\n    backgroundColor: 'rgba(255, 255, 255, 0.2)',\n  },\n  mutedButton: {\n    backgroundColor: theme.colors.error,\n  },\n  endCallButton: {\n    backgroundColor: theme.colors.error,\n  },\n  chatModal: {\n    backgroundColor: theme.colors.surface,\n    margin: 20,\n    borderRadius: 8,\n    maxHeight: height * 0.8,\n  },\n  chatMessages: {\n    maxHeight: 300,\n    marginVertical: spacing.medium,\n  },\n  chatMessage: {\n    marginBottom: spacing.small,\n    padding: spacing.small,\n    backgroundColor: theme.colors.surfaceVariant,\n    borderRadius: 8,\n  },\n  chatSender: {\n    fontSize: 12,\n    fontWeight: 'bold',\n    color: theme.colors.primary,\n  },\n  chatText: {\n    fontSize: 14,\n    marginVertical: 2,\n  },\n  chatTimestamp: {\n    fontSize: 10,\n    color: theme.colors.onSurfaceVariant,\n    textAlign: 'right',\n  },\n  chatInputContainer: {\n    flexDirection: 'row',\n    alignItems: 'flex-end',\n  },\n  chatInput: {\n    flex: 1,\n    marginRight: spacing.small,\n  },\n  sendButton: {\n    alignSelf: 'flex-end',\n  },\n});\n\nexport default VideoCallScreen;\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,KAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,WAAA;AAQ3D,SACEC,OAAO,EACPC,UAAU,EACVC,MAAM,EACNC,IAAI,EACJC,KAAK,EACLC,iBAAiB,EACjBC,MAAM,EACNC,KAAK,EACLC,IAAI,EACJC,SAAS,QACJ,oBAAoB;AAC3B,SAASC,YAAY,QAAQ,gCAAgC;AAC7D,SAASC,OAAO,EAAEC,iBAAiB,EAAEC,qBAAqB,EAAEC,eAAe,EAAEC,YAAY,QAAQ,qBAAqB;AACtH,OAAOC,EAAE,MAAM,kBAAkB;AACjC,SAASC,OAAO;AAEhB,SAASC,KAAK,EAAEC,OAAO;AAA4B,SAAAC,GAAA,IAAAC,IAAA,EAAAC,IAAA,IAAAC,KAAA;AAYnD,IAAAC,eAAA,GAA0B1B,UAAU,CAAC2B,GAAG,CAAC,QAAQ,CAAC;EAA1CC,KAAK,GAAAF,eAAA,CAALE,KAAK;EAAEC,MAAM,GAAAH,eAAA,CAANG,MAAM;AAErB,IAAMC,eAA+C,GAAG,SAAlDA,eAA+CA,CAAAC,IAAA,EAA8B;EAAA,IAAxBC,UAAU,GAAAD,IAAA,CAAVC,UAAU;IAAEC,KAAK,GAAAF,IAAA,CAALE,KAAK;EAC1E,IAAAC,QAAA,GAAiBf,OAAO,CAAC,CAAC;IAAlBgB,IAAI,GAAAD,QAAA,CAAJC,IAAI;EACZ,IAAAC,aAAA,GAAuCH,KAAK,CAACI,MAAM;IAA3CC,aAAa,GAAAF,aAAA,CAAbE,aAAa;IAAEC,WAAW,GAAAH,aAAA,CAAXG,WAAW;EAElC,IAAAC,SAAA,GAAsC9C,QAAQ,CAAM,IAAI,CAAC;IAAA+C,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAlDG,WAAW,GAAAF,UAAA;IAAEG,cAAc,GAAAH,UAAA;EAClC,IAAAI,UAAA,GAAwCnD,QAAQ,CAAM,IAAI,CAAC;IAAAoD,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAApDE,YAAY,GAAAD,UAAA;IAAEE,eAAe,GAAAF,UAAA;EACpC,IAAAG,UAAA,GAAsCvD,QAAQ,CAAC,KAAK,CAAC;IAAAwD,UAAA,GAAAR,cAAA,CAAAO,UAAA;IAA9CE,WAAW,GAAAD,UAAA;IAAEE,cAAc,GAAAF,UAAA;EAClC,IAAAG,UAAA,GAAwC3D,QAAQ,CAAC,IAAI,CAAC;IAAA4D,UAAA,GAAAZ,cAAA,CAAAW,UAAA;IAA/CE,YAAY,GAAAD,UAAA;IAAEE,eAAe,GAAAF,UAAA;EACpC,IAAAG,UAAA,GAA8B/D,QAAQ,CAAC,KAAK,CAAC;IAAAgE,UAAA,GAAAhB,cAAA,CAAAe,UAAA;IAAtCE,OAAO,GAAAD,UAAA;IAAEE,UAAU,GAAAF,UAAA;EAC1B,IAAAG,UAAA,GAA4CnE,QAAQ,CAAC,IAAI,CAAC;IAAAoE,WAAA,GAAApB,cAAA,CAAAmB,UAAA;IAAnDE,cAAc,GAAAD,WAAA;IAAEE,iBAAiB,GAAAF,WAAA;EACxC,IAAAG,WAAA,GAAgDvE,QAAQ,CAAC,IAAI,CAAC;IAAAwE,WAAA,GAAAxB,cAAA,CAAAuB,WAAA;IAAvDE,gBAAgB,GAAAD,WAAA;IAAEE,mBAAmB,GAAAF,WAAA;EAC5C,IAAAG,WAAA,GAAwC3E,QAAQ,CAAC,IAAI,CAAC;IAAA4E,WAAA,GAAA5B,cAAA,CAAA2B,WAAA;IAA/CE,YAAY,GAAAD,WAAA;IAAEE,eAAe,GAAAF,WAAA;EACpC,IAAAG,WAAA,GAAwC/E,QAAQ,CAAC,CAAC,CAAC;IAAAgF,WAAA,GAAAhC,cAAA,CAAA+B,WAAA;IAA5CE,YAAY,GAAAD,WAAA;IAAEE,eAAe,GAAAF,WAAA;EACpC,IAAAG,WAAA,GAAsCnF,QAAQ,CAAC,KAAK,CAAC;IAAAoF,WAAA,GAAApC,cAAA,CAAAmC,WAAA;IAA9CE,WAAW,GAAAD,WAAA;IAAEE,cAAc,GAAAF,WAAA;EAClC,IAAAG,WAAA,GAAsCvF,QAAQ,CAAC,EAAE,CAAC;IAAAwF,WAAA,GAAAxC,cAAA,CAAAuC,WAAA;IAA3CE,WAAW,GAAAD,WAAA;IAAEE,cAAc,GAAAF,WAAA;EAClC,IAAAG,WAAA,GAAwC3F,QAAQ,CAAQ,EAAE,CAAC;IAAA4F,WAAA,GAAA5C,cAAA,CAAA2C,WAAA;IAApDE,YAAY,GAAAD,WAAA;IAAEE,eAAe,GAAAF,WAAA;EAEpC,IAAMG,cAAc,GAAG7F,MAAM,CAA2B,IAAI,CAAC;EAC7D,IAAM8F,MAAM,GAAG9F,MAAM,CAAM,IAAI,CAAC;EAChC,IAAM+F,aAAa,GAAG/F,MAAM,CAAS,CAAC,CAAC;EACvC,IAAMgG,gBAAgB,GAAGhG,MAAM,CAAwB,IAAI,CAAC;EAE5D,IAAMiG,QAAQ,GAAG;IACfC,UAAU,EAAE,CACV;MAAEC,IAAI,EAAE;IAA+B,CAAC,EACxC;MAAEA,IAAI,EAAE;IAAgC,CAAC;EAE7C,CAAC;EAEDpG,SAAS,CAAC,YAAM;IACdqG,cAAc,CAAC,CAAC;IAGhB,IAAMC,WAAW,GAAGhG,WAAW,CAACiG,gBAAgB,CAAC,mBAAmB,EAAE,YAAM;MAC1EC,aAAa,CAAC,CAAC;MACf,OAAO,IAAI;IACb,CAAC,CAAC;IAEF,OAAO,YAAM;MACXF,WAAW,CAACG,MAAM,CAAC,CAAC;MACpBC,WAAW,CAAC,CAAC;IACf,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,IAAML,cAAc;IAAA,IAAAM,KAAA,GAAAC,iBAAA,CAAG,aAAY;MACjC,IAAI;QAEFb,MAAM,CAACc,OAAO,GAAGtF,EAAE,CAACuF,OAAO,CAACC,GAAG,CAACC,mBAAmB,IAAI,uBAAuB,EAAE;UAC9EC,KAAK,EAAE;YACLtE,aAAa,EAAbA,aAAa;YACbuE,MAAM,EAAE1E,IAAI,oBAAJA,IAAI,CAAE2E,EAAE;YAChBC,QAAQ,EAAE5E,IAAI,oBAAJA,IAAI,CAAE6E;UAClB;QACF,CAAC,CAAC;QAGFtB,MAAM,CAACc,OAAO,CAACS,EAAE,CAAC,aAAa,EAAEC,gBAAgB,CAAC;QAClDxB,MAAM,CAACc,OAAO,CAACS,EAAE,CAAC,OAAO,EAAEE,kBAAkB,CAAC;QAC9CzB,MAAM,CAACc,OAAO,CAACS,EAAE,CAAC,QAAQ,EAAEG,mBAAmB,CAAC;QAChD1B,MAAM,CAACc,OAAO,CAACS,EAAE,CAAC,eAAe,EAAEI,yBAAyB,CAAC;QAC7D3B,MAAM,CAACc,OAAO,CAACS,EAAE,CAAC,WAAW,EAAEK,cAAc,CAAC;QAC9C5B,MAAM,CAACc,OAAO,CAACS,EAAE,CAAC,cAAc,EAAEM,iBAAiB,CAAC;QAGpD,IAAMC,MAAM,SAASvG,YAAY,CAACwG,YAAY,CAAC;UAC7CC,KAAK,EAAE,IAAI;UACXC,KAAK,EAAE;YACL/F,KAAK,EAAE;cAAEgG,GAAG,EAAE,GAAG;cAAEC,KAAK,EAAE,IAAI;cAAEC,GAAG,EAAE;YAAK,CAAC;YAC3CjG,MAAM,EAAE;cAAE+F,GAAG,EAAE,GAAG;cAAEC,KAAK,EAAE,GAAG;cAAEC,GAAG,EAAE;YAAK,CAAC;YAC3CC,SAAS,EAAE;cAAEH,GAAG,EAAE,EAAE;cAAEC,KAAK,EAAE,EAAE;cAAEC,GAAG,EAAE;YAAG;UAC3C;QACF,CAAC,CAAC;QAEFlF,cAAc,CAAC4E,MAAM,CAAC;QACtBQ,mBAAmB,CAACR,MAAM,CAAC;QAE3BhE,eAAe,CAAC,KAAK,CAAC;QACtByE,cAAc,CAAC,CAAC;MAElB,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;QAChDnI,KAAK,CAACqI,KAAK,CAAC,OAAO,EAAE,iCAAiC,CAAC;QACvDpG,UAAU,CAACqG,MAAM,CAAC,CAAC;MACrB;IACF,CAAC;IAAA,gBAxCKrC,cAAcA,CAAA;MAAA,OAAAM,KAAA,CAAAgC,KAAA,OAAAC,SAAA;IAAA;EAAA,GAwCnB;EAED,IAAMP,mBAAmB,GAAG,SAAtBA,mBAAmBA,CAAIR,MAAW,EAAK;IAC3C/B,cAAc,CAACe,OAAO,GAAG,IAAI1F,iBAAiB,CAAC+E,QAAQ,CAAC;IAGxD2B,MAAM,CAACgB,SAAS,CAAC,CAAC,CAACC,OAAO,CAAC,UAACC,KAAU,EAAK;MAAA,IAAAC,qBAAA;MACzC,CAAAA,qBAAA,GAAAlD,cAAc,CAACe,OAAO,qBAAtBmC,qBAAA,CAAwBC,QAAQ,CAACF,KAAK,EAAElB,MAAM,CAAC;IACjD,CAAC,CAAC;IAGF/B,cAAc,CAACe,OAAO,CAACqC,OAAO,GAAG,UAACC,KAAK,EAAK;MAC1C9F,eAAe,CAAC8F,KAAK,CAACC,OAAO,CAAC,CAAC,CAAC,CAAC;MACjC3F,cAAc,CAAC,IAAI,CAAC;IACtB,CAAC;IAGDqC,cAAc,CAACe,OAAO,CAACwC,cAAc,GAAG,UAACF,KAAK,EAAK;MACjD,IAAIA,KAAK,CAACG,SAAS,EAAE;QAAA,IAAAC,eAAA;QACnB,CAAAA,eAAA,GAAAxD,MAAM,CAACc,OAAO,qBAAd0C,eAAA,CAAgBC,IAAI,CAAC,eAAe,EAAE;UACpC7G,aAAa,EAAbA,aAAa;UACb2G,SAAS,EAAEH,KAAK,CAACG;QACnB,CAAC,CAAC;MACJ;IACF,CAAC;IAGDxD,cAAc,CAACe,OAAO,CAAC4C,uBAAuB,GAAG,YAAM;MAAA,IAAAC,sBAAA;MACrD,IAAMC,KAAK,IAAAD,sBAAA,GAAG5D,cAAc,CAACe,OAAO,qBAAtB6C,sBAAA,CAAwBE,eAAe;MACrD,IAAID,KAAK,KAAK,WAAW,EAAE;QACzBlG,cAAc,CAAC,IAAI,CAAC;MACtB,CAAC,MAAM,IAAIkG,KAAK,KAAK,cAAc,IAAIA,KAAK,KAAK,QAAQ,EAAE;QACzDlG,cAAc,CAAC,KAAK,CAAC;MACvB;IACF,CAAC;EACH,CAAC;EAED,IAAM8D,gBAAgB;IAAA,IAAAsC,KAAA,GAAAjD,iBAAA,CAAG,aAAY;MACnC,IAAI;QAAA,IAAAkD,sBAAA,EAAAC,sBAAA,EAAAC,gBAAA;QACF,IAAMC,KAAK,UAAAH,sBAAA,GAAShE,cAAc,CAACe,OAAO,qBAAtBiD,sBAAA,CAAwBI,WAAW,CAAC,CAAC;QACzD,OAAAH,sBAAA,GAAMjE,cAAc,CAACe,OAAO,qBAAtBkD,sBAAA,CAAwBI,mBAAmB,CAACF,KAAK,CAAC;QAExD,CAAAD,gBAAA,GAAAjE,MAAM,CAACc,OAAO,qBAAdmD,gBAAA,CAAgBR,IAAI,CAAC,OAAO,EAAE;UAC5B7G,aAAa,EAAbA,aAAa;UACbsH,KAAK,EAALA;QACF,CAAC,CAAC;MACJ,CAAC,CAAC,OAAO1B,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC/C;IACF,CAAC;IAAA,gBAZKhB,gBAAgBA,CAAA;MAAA,OAAAsC,KAAA,CAAAlB,KAAA,OAAAC,SAAA;IAAA;EAAA,GAYrB;EAED,IAAMpB,kBAAkB;IAAA,IAAA4C,KAAA,GAAAxD,iBAAA,CAAG,WAAOyD,IAAS,EAAK;MAC9C,IAAI;QAAA,IAAAC,sBAAA,EAAAC,sBAAA,EAAAC,sBAAA,EAAAC,gBAAA;QACF,OAAAH,sBAAA,GAAMxE,cAAc,CAACe,OAAO,qBAAtByD,sBAAA,CAAwBI,oBAAoB,CAAC,IAAItJ,qBAAqB,CAACiJ,IAAI,CAACJ,KAAK,CAAC,CAAC;QAEzF,IAAMU,MAAM,UAAAJ,sBAAA,GAASzE,cAAc,CAACe,OAAO,qBAAtB0D,sBAAA,CAAwBK,YAAY,CAAC,CAAC;QAC3D,OAAAJ,sBAAA,GAAM1E,cAAc,CAACe,OAAO,qBAAtB2D,sBAAA,CAAwBL,mBAAmB,CAACQ,MAAM,CAAC;QAEzD,CAAAF,gBAAA,GAAA1E,MAAM,CAACc,OAAO,qBAAd4D,gBAAA,CAAgBjB,IAAI,CAAC,QAAQ,EAAE;UAC7B7G,aAAa,EAAbA,aAAa;UACbgI,MAAM,EAANA;QACF,CAAC,CAAC;MACJ,CAAC,CAAC,OAAOpC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC/C;IACF,CAAC;IAAA,gBAdKf,kBAAkBA,CAAAqD,EAAA;MAAA,OAAAT,KAAA,CAAAzB,KAAA,OAAAC,SAAA;IAAA;EAAA,GAcvB;EAED,IAAMnB,mBAAmB;IAAA,IAAAqD,KAAA,GAAAlE,iBAAA,CAAG,WAAOyD,IAAS,EAAK;MAC/C,IAAI;QAAA,IAAAU,sBAAA;QACF,OAAAA,sBAAA,GAAMjF,cAAc,CAACe,OAAO,qBAAtBkE,sBAAA,CAAwBL,oBAAoB,CAAC,IAAItJ,qBAAqB,CAACiJ,IAAI,CAACM,MAAM,CAAC,CAAC;MAC5F,CAAC,CAAC,OAAOpC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAChD;IACF,CAAC;IAAA,gBANKd,mBAAmBA,CAAAuD,GAAA;MAAA,OAAAF,KAAA,CAAAnC,KAAA,OAAAC,SAAA;IAAA;EAAA,GAMxB;EAED,IAAMlB,yBAAyB;IAAA,IAAAuD,KAAA,GAAArE,iBAAA,CAAG,WAAOyD,IAAS,EAAK;MACrD,IAAI;QAAA,IAAAa,sBAAA;QACF,OAAAA,sBAAA,GAAMpF,cAAc,CAACe,OAAO,qBAAtBqE,sBAAA,CAAwBC,eAAe,CAAC,IAAI9J,eAAe,CAACgJ,IAAI,CAACf,SAAS,CAAC,CAAC;MACpF,CAAC,CAAC,OAAOf,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACvD;IACF,CAAC;IAAA,gBANKb,yBAAyBA,CAAA0D,GAAA;MAAA,OAAAH,KAAA,CAAAtC,KAAA,OAAAC,SAAA;IAAA;EAAA,GAM9B;EAED,IAAMjB,cAAc,GAAG,SAAjBA,cAAcA,CAAA,EAAS;IAC3BlE,cAAc,CAAC,KAAK,CAAC;IACrBJ,eAAe,CAAC,IAAI,CAAC;IACrBjD,KAAK,CAACqI,KAAK,CAAC,YAAY,EAAE,yCAAyC,CAAC;EACtE,CAAC;EAED,IAAMb,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAIyC,IAAS,EAAK;IACvCxE,eAAe,CAAC,UAAAwF,IAAI;MAAA,UAAAC,MAAA,CAAAC,kBAAA,CAAQF,IAAI,IAAEhB,IAAI;IAAA,CAAC,CAAC;EAC1C,CAAC;EAED,IAAM/B,cAAc,GAAG,SAAjBA,cAAcA,CAAA,EAAS;IAC3BtC,aAAa,CAACa,OAAO,GAAG2E,IAAI,CAACC,GAAG,CAAC,CAAC;IAClCxF,gBAAgB,CAACY,OAAO,GAAG6E,WAAW,CAAC,YAAM;MAC3CzG,eAAe,CAAC0G,IAAI,CAACC,KAAK,CAAC,CAACJ,IAAI,CAACC,GAAG,CAAC,CAAC,GAAGzF,aAAa,CAACa,OAAO,IAAI,IAAI,CAAC,CAAC;IAC1E,CAAC,EAAE,IAAI,CAAC;EACV,CAAC;EAED,IAAMgF,UAAU,GAAG,SAAbA,UAAUA,CAAA,EAAS;IACvB,IAAI7I,WAAW,EAAE;MACfA,WAAW,CAAC8I,cAAc,CAAC,CAAC,CAAChD,OAAO,CAAC,UAACC,KAAU,EAAK;QACnDA,KAAK,CAACgD,OAAO,GAAG/H,OAAO;MACzB,CAAC,CAAC;MACFC,UAAU,CAAC,CAACD,OAAO,CAAC;IACtB;EACF,CAAC;EAED,IAAMgI,WAAW,GAAG,SAAdA,WAAWA,CAAA,EAAS;IACxB,IAAIhJ,WAAW,EAAE;MACfA,WAAW,CAACiJ,cAAc,CAAC,CAAC,CAACnD,OAAO,CAAC,UAACC,KAAU,EAAK;QACnDA,KAAK,CAACgD,OAAO,GAAG,CAAC3H,cAAc;MACjC,CAAC,CAAC;MACFC,iBAAiB,CAAC,CAACD,cAAc,CAAC;IACpC;EACF,CAAC;EAED,IAAM8H,aAAa,GAAG,SAAhBA,aAAaA,CAAA,EAAS;IAE1BzH,mBAAmB,CAAC,CAACD,gBAAgB,CAAC;EACxC,CAAC;EAED,IAAM2H,eAAe,GAAG,SAAlBA,eAAeA,CAAA,EAAS;IAC5B,IAAI3G,WAAW,CAAC4G,IAAI,CAAC,CAAC,EAAE;MAAA,IAAAC,gBAAA;MACtB,IAAMC,OAAO,GAAG;QACdnF,EAAE,EAAEqE,IAAI,CAACC,GAAG,CAAC,CAAC,CAACc,QAAQ,CAAC,CAAC;QACzBC,IAAI,EAAEhH,WAAW;QACjBiH,MAAM,EAAE,GAAGjK,IAAI,oBAAJA,IAAI,CAAEkK,SAAS,IAAIlK,IAAI,oBAAJA,IAAI,CAAEmK,QAAQ,EAAE;QAC9CC,SAAS,EAAE,IAAIpB,IAAI,CAAC,CAAC,CAACqB,kBAAkB,CAAC;MAC3C,CAAC;MAED,CAAAR,gBAAA,GAAAtG,MAAM,CAACc,OAAO,qBAAdwF,gBAAA,CAAgB7C,IAAI,CAAC,cAAc,EAAE;QACnC7G,aAAa,EAAbA,aAAa;QACb2J,OAAO,EAAPA;MACF,CAAC,CAAC;MAEFzG,eAAe,CAAC,UAAAwF,IAAI;QAAA,UAAAC,MAAA,CAAAC,kBAAA,CAAQF,IAAI,IAAEiB,OAAO;MAAA,CAAC,CAAC;MAC3C7G,cAAc,CAAC,EAAE,CAAC;IACpB;EACF,CAAC;EAED,IAAMe,aAAa;IAAA,IAAAsG,KAAA,GAAAlG,iBAAA,CAAG,aAAY;MAChCxG,KAAK,CAACqI,KAAK,CACT,UAAU,EACV,wCAAwC,EACxC,CACE;QAAE+D,IAAI,EAAE,QAAQ;QAAEO,KAAK,EAAE;MAAS,CAAC,EACnC;QACEP,IAAI,EAAE,UAAU;QAChBO,KAAK,EAAE,aAAa;QACpBC,OAAO,EAAE,SAATA,OAAOA,CAAA,EAAQ;UACbtG,WAAW,CAAC,CAAC;UACbrE,UAAU,CAACqG,MAAM,CAAC,CAAC;QACrB;MACF,CAAC,CAEL,CAAC;IACH,CAAC;IAAA,gBAhBKlC,aAAaA,CAAA;MAAA,OAAAsG,KAAA,CAAAnE,KAAA,OAAAC,SAAA;IAAA;EAAA,GAgBlB;EAED,IAAMlC,WAAW,GAAG,SAAdA,WAAWA,CAAA,EAAS;IACxB,IAAIT,gBAAgB,CAACY,OAAO,EAAE;MAC5BoG,aAAa,CAAChH,gBAAgB,CAACY,OAAO,CAAC;IACzC;IAEA,IAAI7D,WAAW,EAAE;MACfA,WAAW,CAAC6F,SAAS,CAAC,CAAC,CAACC,OAAO,CAAC,UAACC,KAAU;QAAA,OAAKA,KAAK,CAACmE,IAAI,CAAC,CAAC;MAAA,EAAC;IAC/D;IAEA,IAAIpH,cAAc,CAACe,OAAO,EAAE;MAC1Bf,cAAc,CAACe,OAAO,CAACsG,KAAK,CAAC,CAAC;IAChC;IAEA,IAAIpH,MAAM,CAACc,OAAO,EAAE;MAClBd,MAAM,CAACc,OAAO,CAACuG,UAAU,CAAC,CAAC;IAC7B;EACF,CAAC;EAED,IAAMC,kBAAkB,GAAG,SAArBA,kBAAkBA,CAAIC,OAAe,EAAK;IAC9C,IAAMC,OAAO,GAAG5B,IAAI,CAACC,KAAK,CAAC0B,OAAO,GAAG,EAAE,CAAC;IACxC,IAAME,gBAAgB,GAAGF,OAAO,GAAG,EAAE;IACrC,OAAO,GAAGC,OAAO,CAAChB,QAAQ,CAAC,CAAC,CAACkB,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,IAAID,gBAAgB,CAACjB,QAAQ,CAAC,CAAC,CAACkB,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE;EACjG,CAAC;EAED,IAAMC,wBAAwB,GAAG,SAA3BA,wBAAwBA,CAAA,EAAS;IACrC7I,eAAe,CAAC,CAACD,YAAY,CAAC;EAChC,CAAC;EAED,OACE9C,KAAA,CAACb,YAAY;IAAC8L,KAAK,EAAEY,MAAM,CAACC,SAAU;IAAAC,QAAA,GACpC/L,KAAA,CAAC5B,IAAI;MAAC6M,KAAK,EAAEY,MAAM,CAACG,cAAe;MAAAD,QAAA,GAEjCjM,IAAA,CAAC1B,IAAI;QAAC6M,KAAK,EAAEY,MAAM,CAACI,oBAAqB;QAAAF,QAAA,EACtCzK,YAAY,GACXxB,IAAA,CAACV,OAAO;UACN8M,SAAS,EAAE5K,YAAY,CAAC6K,KAAK,CAAC,CAAE;UAChClB,KAAK,EAAEY,MAAM,CAACO,WAAY;UAC1BC,SAAS,EAAC;QAAO,CAClB,CAAC,GAEFrM,KAAA,CAACvB,OAAO;UAACwM,KAAK,EAAEY,MAAM,CAACS,kBAAmB;UAAAP,QAAA,GACxCjM,IAAA,CAACjB,KAAK;YAACoM,KAAK,EAAEY,MAAM,CAACU,WAAY;YAAAR,QAAA,EAC9BjK,YAAY,GAAG,eAAe,GAAG;UAA+B,CAC5D,CAAC,EACPA,YAAY,IACXhC,IAAA,CAAChB,iBAAiB;YAAC0N,IAAI,EAAC,OAAO;YAACC,KAAK,EAAE9M,KAAK,CAAC+M,MAAM,CAACC;UAAQ,CAAE,CAC/D;QAAA,CACM;MACV,CACG,CAAC,EAGP7M,IAAA,CAAC1B,IAAI;QAAC6M,KAAK,EAAEY,MAAM,CAACe,mBAAoB;QAAAb,QAAA,EACrC7K,WAAW,IACVpB,IAAA,CAACV,OAAO;UACN8M,SAAS,EAAEhL,WAAW,CAACiL,KAAK,CAAC,CAAE;UAC/BlB,KAAK,EAAEY,MAAM,CAACgB,UAAW;UACzBR,SAAS,EAAC;QAAO,CAClB;MACF,CACG,CAAC,EAGPrM,KAAA,CAACvB,OAAO;QAACwM,KAAK,EAAEY,MAAM,CAACiB,QAAS;QAAAf,QAAA,GAC9BjM,IAAA,CAAClB,IAAI;UAACqM,KAAK,EAAEY,MAAM,CAAC3I,YAAa;UAAA6I,QAAA,EAC9BR,kBAAkB,CAACrI,YAAY;QAAC,CAC7B,CAAC,EACNxB,WAAW,IACV5B,IAAA,CAAClB,IAAI;UAACqM,KAAK,EAAEY,MAAM,CAACkB,gBAAiB;UAAAhB,QAAA,EAAC;QAAS,CAAM,CACtD;MAAA,CACM,CAAC,EAGTjJ,YAAY,IACXhD,IAAA,CAACrB,OAAO;QAACwM,KAAK,EAAEY,MAAM,CAACmB,iBAAkB;QAAAjB,QAAA,EACvC/L,KAAA,CAAC5B,IAAI;UAAC6M,KAAK,EAAEY,MAAM,CAACoB,QAAS;UAAAlB,QAAA,GAC3BjM,IAAA,CAACpB,UAAU;YACTwO,IAAI,EAAEhL,OAAO,GAAG,gBAAgB,GAAG,YAAa;YAChDiL,IAAI,EAAC,WAAW;YAChBX,IAAI,EAAE,EAAG;YACTtB,OAAO,EAAEnB,UAAW;YACpBkB,KAAK,EAAE,CAACY,MAAM,CAACuB,aAAa,EAAElL,OAAO,IAAI2J,MAAM,CAACwB,WAAW;UAAE,CAC9D,CAAC,EAEFvN,IAAA,CAACpB,UAAU;YACTwO,IAAI,EAAE5K,cAAc,GAAG,OAAO,GAAG,WAAY;YAC7C6K,IAAI,EAAC,WAAW;YAChBX,IAAI,EAAE,EAAG;YACTtB,OAAO,EAAEhB,WAAY;YACrBe,KAAK,EAAE,CAACY,MAAM,CAACuB,aAAa,EAAE,CAAC9K,cAAc,IAAIuJ,MAAM,CAACwB,WAAW;UAAE,CACtE,CAAC,EAEFvN,IAAA,CAACpB,UAAU;YACTwO,IAAI,EAAC,MAAM;YACXC,IAAI,EAAC,WAAW;YAChBX,IAAI,EAAE,EAAG;YACTtB,OAAO,EAAE,SAATA,OAAOA,CAAA;cAAA,OAAQ3H,cAAc,CAAC,IAAI,CAAC;YAAA,CAAC;YACpC0H,KAAK,EAAEY,MAAM,CAACuB;UAAc,CAC7B,CAAC,EAEFtN,IAAA,CAACpB,UAAU;YACTwO,IAAI,EAAExK,gBAAgB,GAAG,aAAa,GAAG,YAAa;YACtDyK,IAAI,EAAC,WAAW;YAChBX,IAAI,EAAE,EAAG;YACTtB,OAAO,EAAEd,aAAc;YACvBa,KAAK,EAAEY,MAAM,CAACuB;UAAc,CAC7B,CAAC,EAEFtN,IAAA,CAACpB,UAAU;YACTwO,IAAI,EAAC,cAAc;YACnBC,IAAI,EAAC,WAAW;YAChBX,IAAI,EAAE,EAAG;YACTtB,OAAO,EAAExG,aAAc;YACvBuG,KAAK,EAAE,CAACY,MAAM,CAACuB,aAAa,EAAEvB,MAAM,CAACyB,aAAa;UAAE,CACrD,CAAC;QAAA,CACE;MAAC,CACA,CACV;IAAA,CACG,CAAC,EAGPxN,IAAA,CAACf,MAAM;MAAAgN,QAAA,EACLjM,IAAA,CAACd,KAAK;QACJuO,OAAO,EAAEjK,WAAY;QACrBkK,SAAS,EAAE,SAAXA,SAASA,CAAA;UAAA,OAAQjK,cAAc,CAAC,KAAK,CAAC;QAAA,CAAC;QACvCkK,qBAAqB,EAAE5B,MAAM,CAAC6B,SAAU;QAAA3B,QAAA,EAExCjM,IAAA,CAACb,IAAI;UAAA8M,QAAA,EACH/L,KAAA,CAACf,IAAI,CAAC0O,OAAO;YAAA5B,QAAA,GACXjM,IAAA,CAACjB,KAAK;cAAAkN,QAAA,EAAC;YAAI,CAAO,CAAC,EACnBjM,IAAA,CAAC1B,IAAI;cAAC6M,KAAK,EAAEY,MAAM,CAAC/H,YAAa;cAAAiI,QAAA,EAC9BjI,YAAY,CAAC8J,GAAG,CAAC,UAACC,GAAG,EAAEC,KAAK;gBAAA,OAC3B9N,KAAA,CAAC5B,IAAI;kBAAa6M,KAAK,EAAEY,MAAM,CAACnI,WAAY;kBAAAqI,QAAA,GAC1CjM,IAAA,CAAClB,IAAI;oBAACqM,KAAK,EAAEY,MAAM,CAACkC,UAAW;oBAAAhC,QAAA,EAAE8B,GAAG,CAAClD;kBAAM,CAAO,CAAC,EACnD7K,IAAA,CAAClB,IAAI;oBAACqM,KAAK,EAAEY,MAAM,CAACmC,QAAS;oBAAAjC,QAAA,EAAE8B,GAAG,CAACnD;kBAAI,CAAO,CAAC,EAC/C5K,IAAA,CAAClB,IAAI;oBAACqM,KAAK,EAAEY,MAAM,CAACoC,aAAc;oBAAAlC,QAAA,EAAE8B,GAAG,CAAC/C;kBAAS,CAAO,CAAC;gBAAA,GAHhDgD,KAIL,CAAC;cAAA,CACR;YAAC,CACE,CAAC,EACP9N,KAAA,CAAC5B,IAAI;cAAC6M,KAAK,EAAEY,MAAM,CAACqC,kBAAmB;cAAAnC,QAAA,GACrCjM,IAAA,CAACZ,SAAS;gBACRiP,KAAK,EAAEzK,WAAY;gBACnB0K,YAAY,EAAEzK,cAAe;gBAC7B0K,WAAW,EAAC,mBAAmB;gBAC/BpD,KAAK,EAAEY,MAAM,CAACyC,SAAU;gBACxBC,SAAS;cAAA,CACV,CAAC,EACFzO,IAAA,CAACnB,MAAM;gBACLwO,IAAI,EAAC,WAAW;gBAChBjC,OAAO,EAAEb,eAAgB;gBACzBY,KAAK,EAAEY,MAAM,CAAC2C,UAAW;gBAAAzC,QAAA,EAC1B;cAED,CAAQ,CAAC;YAAA,CACL,CAAC;UAAA,CACK;QAAC,CACX;MAAC,CACF;IAAC,CACF,CAAC;EAAA,CACG,CAAC;AAEnB,CAAC;AAED,IAAMF,MAAM,GAAGxN,UAAU,CAACoQ,MAAM,CAAC;EAC/B3C,SAAS,EAAE;IACT4C,IAAI,EAAE,CAAC;IACPC,eAAe,EAAE;EACnB,CAAC;EACD3C,cAAc,EAAE;IACd0C,IAAI,EAAE,CAAC;IACPE,QAAQ,EAAE;EACZ,CAAC;EACD3C,oBAAoB,EAAE;IACpByC,IAAI,EAAE,CAAC;IACPC,eAAe,EAAE;EACnB,CAAC;EACDvC,WAAW,EAAE;IACXsC,IAAI,EAAE;EACR,CAAC;EACD9B,mBAAmB,EAAE;IACnBgC,QAAQ,EAAE,UAAU;IACpBC,GAAG,EAAE,EAAE;IACPC,KAAK,EAAE,EAAE;IACT3O,KAAK,EAAE,GAAG;IACVC,MAAM,EAAE,GAAG;IACX2O,YAAY,EAAE,CAAC;IACfC,QAAQ,EAAE,QAAQ;IAClBC,SAAS,EAAE;EACb,CAAC;EACDpC,UAAU,EAAE;IACV6B,IAAI,EAAE;EACR,CAAC;EACDpC,kBAAkB,EAAE;IAClBoC,IAAI,EAAE,CAAC;IACPQ,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE,QAAQ;IACpBR,eAAe,EAAE;EACnB,CAAC;EACDpC,WAAW,EAAE;IACXE,KAAK,EAAE,MAAM;IACb2C,SAAS,EAAE,QAAQ;IACnBC,YAAY,EAAEzP,OAAO,CAAC0P;EACxB,CAAC;EACDxC,QAAQ,EAAE;IACR8B,QAAQ,EAAE,UAAU;IACpBC,GAAG,EAAE,EAAE;IACPU,IAAI,EAAE,EAAE;IACRC,iBAAiB,EAAE5P,OAAO,CAAC0P,MAAM;IACjCG,eAAe,EAAE7P,OAAO,CAAC8P,KAAK;IAC9BX,YAAY,EAAE,CAAC;IACfJ,eAAe,EAAE;EACnB,CAAC;EACDzL,YAAY,EAAE;IACZuJ,KAAK,EAAE,MAAM;IACbkD,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE;EACd,CAAC;EACD7C,gBAAgB,EAAE;IAChBN,KAAK,EAAE,SAAS;IAChBkD,QAAQ,EAAE;EACZ,CAAC;EACD3C,iBAAiB,EAAE;IACjB4B,QAAQ,EAAE,UAAU;IACpBiB,MAAM,EAAE,EAAE;IACVN,IAAI,EAAE,EAAE;IACRT,KAAK,EAAE,EAAE;IACTH,eAAe,EAAE,oBAAoB;IACrCI,YAAY,EAAE,EAAE;IAChBU,eAAe,EAAE7P,OAAO,CAAC8P;EAC3B,CAAC;EACDzC,QAAQ,EAAE;IACR6C,aAAa,EAAE,KAAK;IACpBZ,cAAc,EAAE,cAAc;IAC9BC,UAAU,EAAE;EACd,CAAC;EACD/B,aAAa,EAAE;IACbuB,eAAe,EAAE;EACnB,CAAC;EACDtB,WAAW,EAAE;IACXsB,eAAe,EAAEhP,KAAK,CAAC+M,MAAM,CAACjG;EAChC,CAAC;EACD6G,aAAa,EAAE;IACbqB,eAAe,EAAEhP,KAAK,CAAC+M,MAAM,CAACjG;EAChC,CAAC;EACDiH,SAAS,EAAE;IACTiB,eAAe,EAAEhP,KAAK,CAAC+M,MAAM,CAACqD,OAAO;IACrCC,MAAM,EAAE,EAAE;IACVjB,YAAY,EAAE,CAAC;IACfkB,SAAS,EAAE7P,MAAM,GAAG;EACtB,CAAC;EACD0D,YAAY,EAAE;IACZmM,SAAS,EAAE,GAAG;IACdC,cAAc,EAAEtQ,OAAO,CAAC0P;EAC1B,CAAC;EACD5L,WAAW,EAAE;IACX2L,YAAY,EAAEzP,OAAO,CAAC8P,KAAK;IAC3BS,OAAO,EAAEvQ,OAAO,CAAC8P,KAAK;IACtBf,eAAe,EAAEhP,KAAK,CAAC+M,MAAM,CAAC0D,cAAc;IAC5CrB,YAAY,EAAE;EAChB,CAAC;EACDhB,UAAU,EAAE;IACV4B,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,MAAM;IAClBnD,KAAK,EAAE9M,KAAK,CAAC+M,MAAM,CAACC;EACtB,CAAC;EACDqB,QAAQ,EAAE;IACR2B,QAAQ,EAAE,EAAE;IACZO,cAAc,EAAE;EAClB,CAAC;EACDjC,aAAa,EAAE;IACb0B,QAAQ,EAAE,EAAE;IACZlD,KAAK,EAAE9M,KAAK,CAAC+M,MAAM,CAAC2D,gBAAgB;IACpCjB,SAAS,EAAE;EACb,CAAC;EACDlB,kBAAkB,EAAE;IAClB4B,aAAa,EAAE,KAAK;IACpBX,UAAU,EAAE;EACd,CAAC;EACDb,SAAS,EAAE;IACTI,IAAI,EAAE,CAAC;IACP4B,WAAW,EAAE1Q,OAAO,CAAC8P;EACvB,CAAC;EACDlB,UAAU,EAAE;IACV+B,SAAS,EAAE;EACb;AACF,CAAC,CAAC;AAEF,eAAelQ,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}