{"ast":null,"code":"import _createClass from \"@babel/runtime/helpers/createClass\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nimport { Event } from 'event-target-shim';\nvar MediaStreamTrackEvent = function (_Event) {\n  function MediaStreamTrackEvent(type, eventInitDict) {\n    var _this;\n    _classCallCheck(this, MediaStreamTrackEvent);\n    _this = _callSuper(this, MediaStreamTrackEvent, [type, eventInitDict]);\n    _this.track = eventInitDict.track;\n    return _this;\n  }\n  _inherits(MediaStreamTrackEvent, _Event);\n  return _createClass(MediaStreamTrackEvent);\n}(Event);\nexport { MediaStreamTrackEvent as default };","map":{"version":3,"names":["Event","MediaStreamTrackEvent","_Event","type","eventInitDict","_this","_classCallCheck","_callSuper","track","_inherits","_createClass","default"],"sources":["/workspaces/telemedicine-platform/mobile-app/node_modules/react-native-webrtc/src/MediaStreamTrackEvent.ts"],"sourcesContent":["import { Event } from 'event-target-shim';\n\nimport type MediaStreamTrack from './MediaStreamTrack';\n\ntype MEDIA_STREAM_EVENTS = 'addtrack'| 'removetrack'\n\ninterface IMediaStreamTrackEventInitDict extends Event.EventInit {\n  track: MediaStreamTrack;\n}\n\n/**\n * @eventClass\n * This event is fired whenever the MediaStreamTrack has changed in any way.\n * @param {MEDIA_STREAM_EVENTS} type - The type of event.\n * @param {IMediaStreamTrackEventInitDict} eventInitDict - The event init properties.\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/MediaStream#events MDN} for details.\n */\nexport default class MediaStreamTrackEvent<TEventType extends MEDIA_STREAM_EVENTS> extends Event<TEventType> {\n    /** @eventProperty */\n    track: MediaStreamTrack;\n    constructor(type: TEventType, eventInitDict: IMediaStreamTrackEventInitDict) {\n        super(type, eventInitDict);\n        this.track = eventInitDict.track;\n    }\n}\n"],"mappings":";;;;;;;AAAA,SAASA,KAAK,QAAQ,mBAAmB;AAAA,IAiBpBC,qBAAqB,aAAAC,MAAA;EAGtC,SAAAD,sBAAYE,IAAgB,EAAEC,aAA6C,EAAE;IAAA,IAAAC,KAAA;IAAAC,eAAA,OAAAL,qBAAA;IACzEI,KAAA,GAAAE,UAAA,OAAAN,qBAAA,GAAME,IAAI,EAAEC,aAAa;IACzBC,KAAA,CAAKG,KAAK,GAAGJ,aAAa,CAACI,KAAK;IAAA,OAAAH,KAAA;EACpC;EAAAI,SAAA,CAAAR,qBAAA,EAAAC,MAAA;EAAA,OAAAQ,YAAA,CAAAT,qBAAA;AAAA,EANuFD,KAAK;AAAA,SAA3EC,qBAAqB,IAAAU,OAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}