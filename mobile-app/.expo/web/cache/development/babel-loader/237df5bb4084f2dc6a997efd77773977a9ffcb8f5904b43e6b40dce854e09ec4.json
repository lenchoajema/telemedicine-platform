{"ast":null,"code":"import _createClass from \"@babel/runtime/helpers/createClass\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nimport { Event } from 'event-target-shim';\nvar RTCIceCandidateEvent = function (_Event) {\n  function RTCIceCandidateEvent(type, eventInitDict) {\n    var _ref;\n    var _this;\n    _classCallCheck(this, RTCIceCandidateEvent);\n    _this = _callSuper(this, RTCIceCandidateEvent, [type, eventInitDict]);\n    _this.candidate = (_ref = eventInitDict === null || eventInitDict === void 0 ? void 0 : eventInitDict.candidate) != null ? _ref : null;\n    return _this;\n  }\n  _inherits(RTCIceCandidateEvent, _Event);\n  return _createClass(RTCIceCandidateEvent);\n}(Event);\nexport { RTCIceCandidateEvent as default };","map":{"version":3,"names":["Event","RTCIceCandidateEvent","_Event","type","eventInitDict","_ref","_this","_classCallCheck","_callSuper","candidate","_inherits","_createClass","default"],"sources":["/workspaces/telemedicine-platform/mobile-app/node_modules/react-native-webrtc/src/RTCIceCandidateEvent.ts"],"sourcesContent":["import { Event } from 'event-target-shim';\n\nimport type RTCIceCandidate from './RTCIceCandidate';\n\ntype RTC_ICECANDIDATE_EVENTS = 'icecandidate' | 'icecandidateerror'\n\ninterface IRTCDataChannelEventInitDict extends Event.EventInit {\n    candidate: RTCIceCandidate | null\n}\n\n/**\n * @eventClass\n * This event is fired whenever the icecandidate related RTC_EVENTS changed.\n * @type {RTCIceCandidateEvent} for icecandidate related.\n * @param {RTC_ICECANDIDATE_EVENTS} type - The type of event.\n * @param {IRTCDataChannelEventInitDict} eventInitDict - The event init properties.\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection#events MDN} for details.\n */\nexport default class RTCIceCandidateEvent<TEventType extends RTC_ICECANDIDATE_EVENTS> extends Event<TEventType> {\n    /** @eventProperty */\n    candidate: RTCIceCandidate | null;\n    constructor(type: TEventType, eventInitDict: IRTCDataChannelEventInitDict) {\n        super(type, eventInitDict);\n        this.candidate = eventInitDict?.candidate ?? null;\n    }\n}\n"],"mappings":";;;;;;;AAAA,SAASA,KAAK,QAAQ,mBAAmB;AAAA,IAkBpBC,oBAAoB,aAAAC,MAAA;EAGrC,SAAAD,qBAAYE,IAAgB,EAAEC,aAA2C,EAAE;IAAA,IAAAC,IAAA;IAAA,IAAAC,KAAA;IAAAC,eAAA,OAAAN,oBAAA;IACvEK,KAAA,GAAAE,UAAA,OAAAP,oBAAA,GAAME,IAAI,EAAEC,aAAa;IACzBE,KAAA,CAAKG,SAAS,IAAAJ,IAAA,GAAGD,aAAa,aAAbA,aAAa,uBAAbA,aAAa,CAAEK,SAAS,YAAAJ,IAAA,GAAI,IAAI;IAAA,OAAAC,KAAA;EACrD;EAAAI,SAAA,CAAAT,oBAAA,EAAAC,MAAA;EAAA,OAAAS,YAAA,CAAAV,oBAAA;AAAA,EAN0FD,KAAK;AAAA,SAA9EC,oBAAoB,IAAAW,OAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}