{"ast":null,"code":"import axios from 'axios';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { config } from \"../config\";\nconst API_BASE_URL = config.API_BASE_URL;\nclass ApiClientClass {\n  constructor() {\n    this.client = axios.create({\n      baseURL: API_BASE_URL,\n      timeout: 10000,\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    this.client.interceptors.request.use(async config => {\n      const token = await AsyncStorage.getItem('authToken');\n      if (token) {\n        config.headers.Authorization = `Bearer ${token}`;\n      }\n      return config;\n    }, error => {\n      return Promise.reject(error);\n    });\n    this.client.interceptors.response.use(response => response, async error => {\n      if (error.response?.status === 401) {\n        await AsyncStorage.removeItem('authToken');\n        await AsyncStorage.removeItem('user');\n      }\n      return Promise.reject(error);\n    });\n  }\n  async get(url) {\n    try {\n      const response = await this.client.get(url);\n      return {\n        success: true,\n        data: response.data\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: error.response?.data?.error || error.message || 'An error occurred'\n      };\n    }\n  }\n  async post(url, data) {\n    try {\n      const response = await this.client.post(url, data);\n      return {\n        success: true,\n        data: response.data\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: error.response?.data?.error || error.message || 'An error occurred'\n      };\n    }\n  }\n  async put(url, data) {\n    try {\n      const response = await this.client.put(url, data);\n      return {\n        success: true,\n        data: response.data\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: error.response?.data?.error || error.message || 'An error occurred'\n      };\n    }\n  }\n  async delete(url) {\n    try {\n      const response = await this.client.delete(url);\n      return {\n        success: true,\n        data: response.data\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: error.response?.data?.error || error.message || 'An error occurred'\n      };\n    }\n  }\n}\nexport const apiClient = new ApiClientClass();\nexport const ApiClient = apiClient;\nexport default apiClient;","map":{"version":3,"names":["axios","AsyncStorage","config","API_BASE_URL","ApiClientClass","constructor","client","create","baseURL","timeout","headers","interceptors","request","use","token","getItem","Authorization","error","Promise","reject","response","status","removeItem","get","url","success","data","message","post","put","delete","apiClient","ApiClient"],"sources":["/workspaces/telemedicine-platform/mobile-app/src/services/ApiClient.ts"],"sourcesContent":["import axios, { AxiosInstance, AxiosResponse } from 'axios';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { config } from '../config';\n\n// Use your existing backend URL\nconst API_BASE_URL = config.API_BASE_URL;\n\ninterface ApiResponse<T = any> {\n  success: boolean;\n  data?: T;\n  error?: string;\n}\n\nclass ApiClientClass {\n  private client: AxiosInstance;\n\n  constructor() {\n    this.client = axios.create({\n      baseURL: API_BASE_URL,\n      timeout: 10000,\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    });\n\n    // Add request interceptor to include auth token\n    this.client.interceptors.request.use(\n      async (config) => {\n        const token = await AsyncStorage.getItem('authToken');\n        if (token) {\n          config.headers.Authorization = `Bearer ${token}`;\n        }\n        return config;\n      },\n      (error) => {\n        return Promise.reject(error);\n      }\n    );\n\n    // Add response interceptor for error handling\n    this.client.interceptors.response.use(\n      (response) => response,\n      async (error) => {\n        if (error.response?.status === 401) {\n          // Token expired or invalid, logout user\n          await AsyncStorage.removeItem('authToken');\n          await AsyncStorage.removeItem('user');\n          // You might want to navigate to login screen here\n        }\n        return Promise.reject(error);\n      }\n    );\n  }\n\n  async get<T>(url: string): Promise<ApiResponse<T>> {\n    try {\n      const response: AxiosResponse<T> = await this.client.get(url);\n      return {\n        success: true,\n        data: response.data,\n      };\n    } catch (error: any) {\n      return {\n        success: false,\n        error: error.response?.data?.error || error.message || 'An error occurred',\n      };\n    }\n  }\n\n  async post<T>(url: string, data?: any): Promise<ApiResponse<T>> {\n    try {\n      const response: AxiosResponse<T> = await this.client.post(url, data);\n      return {\n        success: true,\n        data: response.data,\n      };\n    } catch (error: any) {\n      return {\n        success: false,\n        error: error.response?.data?.error || error.message || 'An error occurred',\n      };\n    }\n  }\n\n  async put<T>(url: string, data?: any): Promise<ApiResponse<T>> {\n    try {\n      const response: AxiosResponse<T> = await this.client.put(url, data);\n      return {\n        success: true,\n        data: response.data,\n      };\n    } catch (error: any) {\n      return {\n        success: false,\n        error: error.response?.data?.error || error.message || 'An error occurred',\n      };\n    }\n  }\n\n  async delete<T>(url: string): Promise<ApiResponse<T>> {\n    try {\n      const response: AxiosResponse<T> = await this.client.delete(url);\n      return {\n        success: true,\n        data: response.data,\n      };\n    } catch (error: any) {\n      return {\n        success: false,\n        error: error.response?.data?.error || error.message || 'An error occurred',\n      };\n    }\n  }\n}\n\nexport const apiClient = new ApiClientClass();\nexport const ApiClient = apiClient; // Add named export for compatibility\nexport default apiClient;\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}