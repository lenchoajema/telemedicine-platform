{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { TextInput, Button, Card, Title, Paragraph, Divider, ActivityIndicator } from 'react-native-paper';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport { useAuth } from \"../../context/AuthContext\";\nimport { theme, spacing } from \"../../utils/theme\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar LoginScreen = function LoginScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    email = _useState2[0],\n    setEmail = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    showPassword = _useState6[0],\n    setShowPassword = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    isLoading = _useState8[0],\n    setIsLoading = _useState8[1];\n  var _useAuth = useAuth(),\n    login = _useAuth.login;\n  var handleLogin = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      if (!email || !password) {\n        Alert.alert('Error', 'Please fill in all fields');\n        return;\n      }\n      setIsLoading(true);\n      try {\n        var success = yield login(email, password);\n        if (!success) {\n          Alert.alert('Error', 'Invalid email or password');\n        }\n      } catch (error) {\n        Alert.alert('Error', 'An error occurred during login');\n      } finally {\n        setIsLoading(false);\n      }\n    });\n    return function handleLogin() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var navigateToRegister = function navigateToRegister() {\n    navigation.navigate('Register');\n  };\n  return _jsx(SafeAreaView, {\n    style: styles.container,\n    children: _jsx(KeyboardAvoidingView, {\n      behavior: Platform.OS === 'ios' ? 'padding' : 'height',\n      style: styles.keyboardView,\n      children: _jsxs(ScrollView, {\n        contentContainerStyle: styles.scrollContainer,\n        children: [_jsxs(View, {\n          style: styles.header,\n          children: [_jsx(Title, {\n            style: styles.title,\n            children: \"Telemedicine\"\n          }), _jsx(Paragraph, {\n            style: styles.subtitle,\n            children: \"Welcome back! Sign in to your account\"\n          })]\n        }), _jsx(Card, {\n          style: styles.card,\n          children: _jsxs(Card.Content, {\n            children: [_jsx(TextInput, {\n              label: \"Email\",\n              value: email,\n              onChangeText: setEmail,\n              mode: \"outlined\",\n              keyboardType: \"email-address\",\n              autoCapitalize: \"none\",\n              autoComplete: \"email\",\n              style: styles.input,\n              left: _jsx(TextInput.Icon, {\n                icon: \"email\"\n              })\n            }), _jsx(TextInput, {\n              label: \"Password\",\n              value: password,\n              onChangeText: setPassword,\n              mode: \"outlined\",\n              secureTextEntry: !showPassword,\n              autoComplete: \"password\",\n              style: styles.input,\n              left: _jsx(TextInput.Icon, {\n                icon: \"lock\"\n              }),\n              right: _jsx(TextInput.Icon, {\n                icon: showPassword ? 'eye-off' : 'eye',\n                onPress: function onPress() {\n                  return setShowPassword(!showPassword);\n                }\n              })\n            }), _jsx(Button, {\n              mode: \"contained\",\n              onPress: handleLogin,\n              style: styles.loginButton,\n              disabled: isLoading,\n              contentStyle: styles.buttonContent,\n              children: isLoading ? _jsx(ActivityIndicator, {\n                size: \"small\",\n                color: \"#fff\"\n              }) : 'Sign In'\n            }), _jsx(Divider, {\n              style: styles.divider\n            }), _jsx(Button, {\n              mode: \"text\",\n              onPress: navigateToRegister,\n              style: styles.registerButton,\n              children: \"Don't have an account? Sign Up\"\n            }), _jsx(Button, {\n              mode: \"text\",\n              onPress: function onPress() {\n                return Alert.alert('Coming Soon', 'Password reset feature coming soon');\n              },\n              style: styles.forgotButton,\n              children: \"Forgot Password?\"\n            })]\n          })\n        }), _jsx(View, {\n          style: styles.footer,\n          children: _jsx(Paragraph, {\n            style: styles.footerText,\n            children: \"By signing in, you agree to our Terms of Service and Privacy Policy\"\n          })\n        })]\n      })\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: theme.colors.background\n  },\n  keyboardView: {\n    flex: 1\n  },\n  scrollContainer: {\n    flexGrow: 1,\n    padding: spacing.md,\n    justifyContent: 'center'\n  },\n  header: {\n    alignItems: 'center',\n    marginBottom: spacing.xl\n  },\n  title: {\n    fontSize: 32,\n    fontWeight: 'bold',\n    color: theme.colors.primary,\n    marginBottom: spacing.sm\n  },\n  subtitle: {\n    fontSize: 16,\n    color: theme.colors.text,\n    textAlign: 'center'\n  },\n  card: {\n    elevation: 4,\n    marginBottom: spacing.lg\n  },\n  input: {\n    marginBottom: spacing.md\n  },\n  loginButton: {\n    marginTop: spacing.md,\n    marginBottom: spacing.md\n  },\n  buttonContent: {\n    paddingVertical: spacing.sm\n  },\n  divider: {\n    marginVertical: spacing.md\n  },\n  registerButton: {\n    marginBottom: spacing.sm\n  },\n  forgotButton: {\n    marginBottom: spacing.sm\n  },\n  footer: {\n    alignItems: 'center'\n  },\n  footerText: {\n    fontSize: 12,\n    color: theme.colors.placeholder,\n    textAlign: 'center'\n  }\n});\nexport default LoginScreen;","map":{"version":3,"names":["React","useState","View","StyleSheet","ScrollView","KeyboardAvoidingView","Platform","Alert","TextInput","Button","Card","Title","Paragraph","Divider","ActivityIndicator","SafeAreaView","useAuth","theme","spacing","jsx","_jsx","jsxs","_jsxs","LoginScreen","_ref","navigation","_useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","password","setPassword","_useState5","_useState6","showPassword","setShowPassword","_useState7","_useState8","isLoading","setIsLoading","_useAuth","login","handleLogin","_ref2","_asyncToGenerator","alert","success","error","apply","arguments","navigateToRegister","navigate","style","styles","container","children","behavior","OS","keyboardView","contentContainerStyle","scrollContainer","header","title","subtitle","card","Content","label","value","onChangeText","mode","keyboardType","autoCapitalize","autoComplete","input","left","Icon","icon","secureTextEntry","right","onPress","loginButton","disabled","contentStyle","buttonContent","size","color","divider","registerButton","forgotButton","footer","footerText","create","flex","backgroundColor","colors","background","flexGrow","padding","md","justifyContent","alignItems","marginBottom","xl","fontSize","fontWeight","primary","sm","text","textAlign","elevation","lg","marginTop","paddingVertical","marginVertical","placeholder"],"sources":["/workspaces/telemedicine-platform/mobile-app/src/screens/Auth/LoginScreen.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport {\n  View,\n  StyleSheet,\n  ScrollView,\n  KeyboardAvoidingView,\n  Platform,\n  Alert,\n} from 'react-native';\nimport {\n  TextInput,\n  Button,\n  Card,\n  Title,\n  Paragraph,\n  Divider,\n  ActivityIndicator,\n} from 'react-native-paper';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport { useAuth } from '../../context/AuthContext';\nimport { theme, spacing } from '../../utils/theme';\n\ninterface LoginScreenProps {\n  navigation: any;\n}\n\nconst LoginScreen: React.FC<LoginScreenProps> = ({ navigation }) => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [showPassword, setShowPassword] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const { login } = useAuth();\n\n  const handleLogin = async () => {\n    if (!email || !password) {\n      Alert.alert('Error', 'Please fill in all fields');\n      return;\n    }\n\n    setIsLoading(true);\n    try {\n      const success = await login(email, password);\n      if (!success) {\n        Alert.alert('Error', 'Invalid email or password');\n      }\n    } catch (error) {\n      Alert.alert('Error', 'An error occurred during login');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const navigateToRegister = () => {\n    navigation.navigate('Register');\n  };\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <KeyboardAvoidingView\n        behavior={Platform.OS === 'ios' ? 'padding' : 'height'}\n        style={styles.keyboardView}\n      >\n        <ScrollView contentContainerStyle={styles.scrollContainer}>\n          <View style={styles.header}>\n            <Title style={styles.title}>Telemedicine</Title>\n            <Paragraph style={styles.subtitle}>\n              Welcome back! Sign in to your account\n            </Paragraph>\n          </View>\n\n          <Card style={styles.card}>\n            <Card.Content>\n              <TextInput\n                label=\"Email\"\n                value={email}\n                onChangeText={setEmail}\n                mode=\"outlined\"\n                keyboardType=\"email-address\"\n                autoCapitalize=\"none\"\n                autoComplete=\"email\"\n                style={styles.input}\n                left={<TextInput.Icon icon=\"email\" />}\n              />\n\n              <TextInput\n                label=\"Password\"\n                value={password}\n                onChangeText={setPassword}\n                mode=\"outlined\"\n                secureTextEntry={!showPassword}\n                autoComplete=\"password\"\n                style={styles.input}\n                left={<TextInput.Icon icon=\"lock\" />}\n                right={\n                  <TextInput.Icon\n                    icon={showPassword ? 'eye-off' : 'eye'}\n                    onPress={() => setShowPassword(!showPassword)}\n                  />\n                }\n              />\n\n              <Button\n                mode=\"contained\"\n                onPress={handleLogin}\n                style={styles.loginButton}\n                disabled={isLoading}\n                contentStyle={styles.buttonContent}\n              >\n                {isLoading ? (\n                  <ActivityIndicator size=\"small\" color=\"#fff\" />\n                ) : (\n                  'Sign In'\n                )}\n              </Button>\n\n              <Divider style={styles.divider} />\n\n              <Button\n                mode=\"text\"\n                onPress={navigateToRegister}\n                style={styles.registerButton}\n              >\n                Don't have an account? Sign Up\n              </Button>\n\n              <Button\n                mode=\"text\"\n                onPress={() => Alert.alert('Coming Soon', 'Password reset feature coming soon')}\n                style={styles.forgotButton}\n              >\n                Forgot Password?\n              </Button>\n            </Card.Content>\n          </Card>\n\n          <View style={styles.footer}>\n            <Paragraph style={styles.footerText}>\n              By signing in, you agree to our Terms of Service and Privacy Policy\n            </Paragraph>\n          </View>\n        </ScrollView>\n      </KeyboardAvoidingView>\n    </SafeAreaView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: theme.colors.background,\n  },\n  keyboardView: {\n    flex: 1,\n  },\n  scrollContainer: {\n    flexGrow: 1,\n    padding: spacing.md,\n    justifyContent: 'center',\n  },\n  header: {\n    alignItems: 'center',\n    marginBottom: spacing.xl,\n  },\n  title: {\n    fontSize: 32,\n    fontWeight: 'bold',\n    color: theme.colors.primary,\n    marginBottom: spacing.sm,\n  },\n  subtitle: {\n    fontSize: 16,\n    color: theme.colors.text,\n    textAlign: 'center',\n  },\n  card: {\n    elevation: 4,\n    marginBottom: spacing.lg,\n  },\n  input: {\n    marginBottom: spacing.md,\n  },\n  loginButton: {\n    marginTop: spacing.md,\n    marginBottom: spacing.md,\n  },\n  buttonContent: {\n    paddingVertical: spacing.sm,\n  },\n  divider: {\n    marginVertical: spacing.md,\n  },\n  registerButton: {\n    marginBottom: spacing.sm,\n  },\n  forgotButton: {\n    marginBottom: spacing.sm,\n  },\n  footer: {\n    alignItems: 'center',\n  },\n  footerText: {\n    fontSize: 12,\n    color: theme.colors.placeholder,\n    textAlign: 'center',\n  },\n});\n\nexport default LoginScreen;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}