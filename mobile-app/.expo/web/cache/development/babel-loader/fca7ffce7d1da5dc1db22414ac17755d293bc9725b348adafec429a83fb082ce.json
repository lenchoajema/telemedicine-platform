{"ast":null,"code":"var _jsxFileName = \"/workspaces/telemedicine-platform/mobile-app/src/screens/Home/HomeScreen.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { Card, Title, Paragraph, Button, Avatar, List, Divider, IconButton, Surface } from 'react-native-paper';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport { useAuth } from \"../../context/AuthContext\";\nimport { ApiClient } from \"../../services/ApiClient\";\nimport { theme, spacing } from \"../../utils/theme\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HomeScreen = ({\n  navigation\n}) => {\n  const {\n    user\n  } = useAuth();\n  const [dashboardData, setDashboardData] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [refreshing, setRefreshing] = useState(false);\n  const fetchDashboardData = async () => {\n    try {\n      const response = await ApiClient.get('/api/dashboard');\n      setDashboardData(response.data);\n    } catch (error) {\n      console.error('Error fetching dashboard data:', error);\n      Alert.alert('Error', 'Failed to load dashboard data');\n    } finally {\n      setIsLoading(false);\n      setRefreshing(false);\n    }\n  };\n  useEffect(() => {\n    fetchDashboardData();\n  }, []);\n  const onRefresh = () => {\n    setRefreshing(true);\n    fetchDashboardData();\n  };\n  const navigateToAppointments = () => {\n    navigation.navigate('Appointments');\n  };\n  const navigateToBookAppointment = () => {\n    navigation.navigate('Doctors');\n  };\n  const navigateToProfile = () => {\n    navigation.navigate('Profile');\n  };\n  const renderQuickActions = () => {\n    if (user?.role === 'patient') {\n      return _jsxDEV(Card, {\n        style: styles.card,\n        children: _jsxDEV(Card.Content, {\n          children: [_jsxDEV(Title, {\n            style: styles.cardTitle,\n            children: \"Quick Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), _jsxDEV(View, {\n            style: styles.actionRow,\n            children: [_jsxDEV(Button, {\n              mode: \"contained\",\n              onPress: navigateToBookAppointment,\n              style: styles.actionButton,\n              icon: \"calendar-plus\",\n              children: \"Book Appointment\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 15\n            }, this), _jsxDEV(Button, {\n              mode: \"outlined\",\n              onPress: navigateToAppointments,\n              style: styles.actionButton,\n              icon: \"calendar\",\n              children: \"View Appointments\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this);\n    } else if (user?.role === 'doctor') {\n      return _jsxDEV(Card, {\n        style: styles.card,\n        children: _jsxDEV(Card.Content, {\n          children: [_jsxDEV(Title, {\n            style: styles.cardTitle,\n            children: \"Quick Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this), _jsxDEV(View, {\n            style: styles.actionRow,\n            children: [_jsxDEV(Button, {\n              mode: \"contained\",\n              onPress: navigateToAppointments,\n              style: styles.actionButton,\n              icon: \"calendar\",\n              children: \"My Schedule\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 15\n            }, this), _jsxDEV(Button, {\n              mode: \"outlined\",\n              onPress: () => navigation.navigate('Patients'),\n              style: styles.actionButton,\n              icon: \"account-group\",\n              children: \"My Patients\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this);\n    }\n    return null;\n  };\n  const renderUpcomingAppointments = () => {\n    if (!dashboardData?.upcomingAppointments?.length) return null;\n    return _jsxDEV(Card, {\n      style: styles.card,\n      children: _jsxDEV(Card.Content, {\n        children: [_jsxDEV(Title, {\n          style: styles.cardTitle,\n          children: \"Upcoming Appointments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this), dashboardData.upcomingAppointments.slice(0, 3).map((appointment, index) => _jsxDEV(View, {\n          children: [_jsxDEV(List.Item, {\n            title: user?.role === 'patient' ? `Dr. ${appointment.doctor?.firstName} ${appointment.doctor?.lastName}` : `${appointment.patient?.firstName} ${appointment.patient?.lastName}`,\n            description: `${appointment.date} at ${appointment.time}`,\n            left: () => _jsxDEV(Avatar.Icon, {\n              size: 40,\n              icon: user?.role === 'patient' ? 'doctor' : 'account'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 19\n            }, this),\n            right: () => _jsxDEV(IconButton, {\n              icon: \"chevron-right\",\n              onPress: () => navigation.navigate('Appointments', {\n                appointmentId: appointment.id\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 15\n          }, this), index < dashboardData.upcomingAppointments.length - 1 && _jsxDEV(Divider, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 73\n          }, this)]\n        }, appointment.id || index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 13\n        }, this)), _jsxDEV(Button, {\n          mode: \"text\",\n          onPress: navigateToAppointments,\n          style: styles.viewAllButton,\n          children: \"View All Appointments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this);\n  };\n  const renderStats = () => {\n    if (!dashboardData?.quickStats) return null;\n    const stats = dashboardData.quickStats;\n    return _jsxDEV(View, {\n      style: styles.statsContainer,\n      children: [_jsxDEV(Surface, {\n        style: styles.statCard,\n        children: [_jsxDEV(Title, {\n          style: styles.statNumber,\n          children: stats.totalAppointments\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this), _jsxDEV(Paragraph, {\n          style: styles.statLabel,\n          children: \"Total\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this), _jsxDEV(Surface, {\n        style: styles.statCard,\n        children: [_jsxDEV(Title, {\n          style: styles.statNumber,\n          children: stats.completedAppointments\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this), _jsxDEV(Paragraph, {\n          style: styles.statLabel,\n          children: \"Completed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this), _jsxDEV(Surface, {\n        style: styles.statCard,\n        children: [_jsxDEV(Title, {\n          style: styles.statNumber,\n          children: stats.pendingAppointments\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this), _jsxDEV(Paragraph, {\n          style: styles.statLabel,\n          children: \"Pending\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this);\n  };\n  return _jsxDEV(SafeAreaView, {\n    style: styles.container,\n    children: _jsxDEV(ScrollView, {\n      contentContainerStyle: styles.scrollContainer,\n      refreshControl: _jsxDEV(RefreshControl, {\n        refreshing: refreshing,\n        onRefresh: onRefresh\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 11\n      }, this),\n      children: [_jsxDEV(View, {\n        style: styles.header,\n        children: [_jsxDEV(View, {\n          style: styles.welcomeContainer,\n          children: [_jsxDEV(Avatar.Text, {\n            size: 60,\n            label: user?.firstName?.[0] || 'U',\n            style: styles.avatar\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 13\n          }, this), _jsxDEV(View, {\n            style: styles.welcomeText,\n            children: [_jsxDEV(Title, {\n              style: styles.welcomeTitle,\n              children: [\"Welcome back, \", user?.firstName, \"!\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 15\n            }, this), _jsxDEV(Paragraph, {\n              style: styles.welcomeSubtitle,\n              children: user?.role === 'patient' ? 'How can we help you today?' : 'Ready to help your patients?'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this), _jsxDEV(IconButton, {\n          icon: \"bell\",\n          onPress: () => navigation.navigate('Notifications'),\n          style: styles.notificationButton\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this), renderStats(), renderQuickActions(), renderUpcomingAppointments()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 202,\n    columnNumber: 5\n  }, this);\n};\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: theme.colors.background\n  },\n  scrollContainer: {\n    padding: spacing.medium\n  },\n  header: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    marginBottom: spacing.large\n  },\n  welcomeContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    flex: 1\n  },\n  avatar: {\n    marginRight: spacing.medium\n  },\n  welcomeText: {\n    flex: 1\n  },\n  welcomeTitle: {\n    fontSize: 20,\n    fontWeight: 'bold'\n  },\n  welcomeSubtitle: {\n    color: theme.colors.onSurfaceVariant\n  },\n  notificationButton: {\n    margin: 0\n  },\n  statsContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginBottom: spacing.large\n  },\n  statCard: {\n    flex: 1,\n    alignItems: 'center',\n    padding: spacing.medium,\n    marginHorizontal: spacing.small,\n    borderRadius: 8,\n    elevation: 2\n  },\n  statNumber: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: theme.colors.primary\n  },\n  statLabel: {\n    fontSize: 12,\n    color: theme.colors.onSurfaceVariant\n  },\n  card: {\n    marginBottom: spacing.large,\n    elevation: 2\n  },\n  cardTitle: {\n    marginBottom: spacing.medium\n  },\n  actionRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  actionButton: {\n    flex: 1,\n    marginHorizontal: spacing.small\n  },\n  viewAllButton: {\n    marginTop: spacing.small\n  }\n});\nexport default HomeScreen;","map":{"version":3,"names":["React","useState","useEffect","View","StyleSheet","ScrollView","RefreshControl","Alert","Card","Title","Paragraph","Button","Avatar","List","Divider","IconButton","Surface","SafeAreaView","useAuth","ApiClient","theme","spacing","jsxDEV","_jsxDEV","HomeScreen","navigation","user","dashboardData","setDashboardData","isLoading","setIsLoading","refreshing","setRefreshing","fetchDashboardData","response","get","data","error","console","alert","onRefresh","navigateToAppointments","navigate","navigateToBookAppointment","navigateToProfile","renderQuickActions","role","style","styles","card","children","Content","cardTitle","fileName","_jsxFileName","lineNumber","columnNumber","actionRow","mode","onPress","actionButton","icon","renderUpcomingAppointments","upcomingAppointments","length","slice","map","appointment","index","Item","title","doctor","firstName","lastName","patient","description","date","time","left","Icon","size","right","appointmentId","id","viewAllButton","renderStats","quickStats","stats","statsContainer","statCard","statNumber","totalAppointments","statLabel","completedAppointments","pendingAppointments","container","contentContainerStyle","scrollContainer","refreshControl","header","welcomeContainer","Text","label","avatar","welcomeText","welcomeTitle","welcomeSubtitle","notificationButton","create","flex","backgroundColor","colors","background","padding","medium","flexDirection","alignItems","justifyContent","marginBottom","large","marginRight","fontSize","fontWeight","color","onSurfaceVariant","margin","marginHorizontal","small","borderRadius","elevation","primary","marginTop"],"sources":["/workspaces/telemedicine-platform/mobile-app/src/screens/Home/HomeScreen.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  View,\n  StyleSheet,\n  ScrollView,\n  RefreshControl,\n  Alert,\n} from 'react-native';\nimport {\n  Card,\n  Title,\n  Paragraph,\n  Button,\n  Avatar,\n  List,\n  Divider,\n  IconButton,\n  Surface,\n} from 'react-native-paper';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport { useAuth } from '../../context/AuthContext';\nimport { ApiClient } from '../../services/ApiClient';\nimport { theme, spacing } from '../../utils/theme';\n\ninterface HomeScreenProps {\n  navigation: any;\n}\n\ninterface DashboardData {\n  upcomingAppointments: any[];\n  recentActivities: any[];\n  quickStats: {\n    totalAppointments: number;\n    completedAppointments: number;\n    pendingAppointments: number;\n  };\n}\n\nconst HomeScreen: React.FC<HomeScreenProps> = ({ navigation }) => {\n  const { user } = useAuth();\n  const [dashboardData, setDashboardData] = useState<DashboardData | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [refreshing, setRefreshing] = useState(false);\n\n  const fetchDashboardData = async () => {\n    try {\n      const response = await ApiClient.get('/api/dashboard');\n      setDashboardData(response.data);\n    } catch (error) {\n      console.error('Error fetching dashboard data:', error);\n      Alert.alert('Error', 'Failed to load dashboard data');\n    } finally {\n      setIsLoading(false);\n      setRefreshing(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchDashboardData();\n  }, []);\n\n  const onRefresh = () => {\n    setRefreshing(true);\n    fetchDashboardData();\n  };\n\n  const navigateToAppointments = () => {\n    navigation.navigate('Appointments');\n  };\n\n  const navigateToBookAppointment = () => {\n    navigation.navigate('Doctors');\n  };\n\n  const navigateToProfile = () => {\n    navigation.navigate('Profile');\n  };\n\n  const renderQuickActions = () => {\n    if (user?.role === 'patient') {\n      return (\n        <Card style={styles.card}>\n          <Card.Content>\n            <Title style={styles.cardTitle}>Quick Actions</Title>\n            <View style={styles.actionRow}>\n              <Button\n                mode=\"contained\"\n                onPress={navigateToBookAppointment}\n                style={styles.actionButton}\n                icon=\"calendar-plus\"\n              >\n                Book Appointment\n              </Button>\n              <Button\n                mode=\"outlined\"\n                onPress={navigateToAppointments}\n                style={styles.actionButton}\n                icon=\"calendar\"\n              >\n                View Appointments\n              </Button>\n            </View>\n          </Card.Content>\n        </Card>\n      );\n    } else if (user?.role === 'doctor') {\n      return (\n        <Card style={styles.card}>\n          <Card.Content>\n            <Title style={styles.cardTitle}>Quick Actions</Title>\n            <View style={styles.actionRow}>\n              <Button\n                mode=\"contained\"\n                onPress={navigateToAppointments}\n                style={styles.actionButton}\n                icon=\"calendar\"\n              >\n                My Schedule\n              </Button>\n              <Button\n                mode=\"outlined\"\n                onPress={() => navigation.navigate('Patients')}\n                style={styles.actionButton}\n                icon=\"account-group\"\n              >\n                My Patients\n              </Button>\n            </View>\n          </Card.Content>\n        </Card>\n      );\n    }\n    return null;\n  };\n\n  const renderUpcomingAppointments = () => {\n    if (!dashboardData?.upcomingAppointments?.length) return null;\n\n    return (\n      <Card style={styles.card}>\n        <Card.Content>\n          <Title style={styles.cardTitle}>Upcoming Appointments</Title>\n          {dashboardData.upcomingAppointments.slice(0, 3).map((appointment, index) => (\n            <View key={appointment.id || index}>\n              <List.Item\n                title={user?.role === 'patient' ? \n                  `Dr. ${appointment.doctor?.firstName} ${appointment.doctor?.lastName}` :\n                  `${appointment.patient?.firstName} ${appointment.patient?.lastName}`\n                }\n                description={`${appointment.date} at ${appointment.time}`}\n                left={() => (\n                  <Avatar.Icon \n                    size={40} \n                    icon={user?.role === 'patient' ? 'doctor' : 'account'} \n                  />\n                )}\n                right={() => (\n                  <IconButton\n                    icon=\"chevron-right\"\n                    onPress={() => navigation.navigate('Appointments', { appointmentId: appointment.id })}\n                  />\n                )}\n              />\n              {index < dashboardData.upcomingAppointments.length - 1 && <Divider />}\n            </View>\n          ))}\n          <Button\n            mode=\"text\"\n            onPress={navigateToAppointments}\n            style={styles.viewAllButton}\n          >\n            View All Appointments\n          </Button>\n        </Card.Content>\n      </Card>\n    );\n  };\n\n  const renderStats = () => {\n    if (!dashboardData?.quickStats) return null;\n\n    const stats = dashboardData.quickStats;\n    return (\n      <View style={styles.statsContainer}>\n        <Surface style={styles.statCard}>\n          <Title style={styles.statNumber}>{stats.totalAppointments}</Title>\n          <Paragraph style={styles.statLabel}>Total</Paragraph>\n        </Surface>\n        <Surface style={styles.statCard}>\n          <Title style={styles.statNumber}>{stats.completedAppointments}</Title>\n          <Paragraph style={styles.statLabel}>Completed</Paragraph>\n        </Surface>\n        <Surface style={styles.statCard}>\n          <Title style={styles.statNumber}>{stats.pendingAppointments}</Title>\n          <Paragraph style={styles.statLabel}>Pending</Paragraph>\n        </Surface>\n      </View>\n    );\n  };\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <ScrollView\n        contentContainerStyle={styles.scrollContainer}\n        refreshControl={\n          <RefreshControl refreshing={refreshing} onRefresh={onRefresh} />\n        }\n      >\n        <View style={styles.header}>\n          <View style={styles.welcomeContainer}>\n            <Avatar.Text\n              size={60}\n              label={user?.firstName?.[0] || 'U'}\n              style={styles.avatar}\n            />\n            <View style={styles.welcomeText}>\n              <Title style={styles.welcomeTitle}>\n                Welcome back, {user?.firstName}!\n              </Title>\n              <Paragraph style={styles.welcomeSubtitle}>\n                {user?.role === 'patient' ? 'How can we help you today?' : 'Ready to help your patients?'}\n              </Paragraph>\n            </View>\n          </View>\n          <IconButton\n            icon=\"bell\"\n            onPress={() => navigation.navigate('Notifications')}\n            style={styles.notificationButton}\n          />\n        </View>\n\n        {renderStats()}\n        {renderQuickActions()}\n        {renderUpcomingAppointments()}\n      </ScrollView>\n    </SafeAreaView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: theme.colors.background,\n  },\n  scrollContainer: {\n    padding: spacing.medium,\n  },\n  header: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    marginBottom: spacing.large,\n  },\n  welcomeContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    flex: 1,\n  },\n  avatar: {\n    marginRight: spacing.medium,\n  },\n  welcomeText: {\n    flex: 1,\n  },\n  welcomeTitle: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  welcomeSubtitle: {\n    color: theme.colors.onSurfaceVariant,\n  },\n  notificationButton: {\n    margin: 0,\n  },\n  statsContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginBottom: spacing.large,\n  },\n  statCard: {\n    flex: 1,\n    alignItems: 'center',\n    padding: spacing.medium,\n    marginHorizontal: spacing.small,\n    borderRadius: 8,\n    elevation: 2,\n  },\n  statNumber: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: theme.colors.primary,\n  },\n  statLabel: {\n    fontSize: 12,\n    color: theme.colors.onSurfaceVariant,\n  },\n  card: {\n    marginBottom: spacing.large,\n    elevation: 2,\n  },\n  cardTitle: {\n    marginBottom: spacing.medium,\n  },\n  actionRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n  actionButton: {\n    flex: 1,\n    marginHorizontal: spacing.small,\n  },\n  viewAllButton: {\n    marginTop: spacing.small,\n  },\n});\n\nexport default HomeScreen;\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}